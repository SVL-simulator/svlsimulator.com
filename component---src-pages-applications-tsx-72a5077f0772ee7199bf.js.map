{"version":3,"sources":["webpack:///./src/images/academics.jpg","webpack:///./src/images/simulation-platform.jpg","webpack:///./src/images/robotics.jpg","webpack:///./src/images/cloud-simulation.jpg","webpack:///./src/components/Button.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/utils/addSpacing.ts","webpack:///./src/components/Section.tsx","webpack:///./src/images/future-mobility-solutions.jpg","webpack:///./src/components/DocumentBox.tsx","webpack:///./src/pages/applications.tsx","webpack:///./src/images/digital-twin.jpg"],"names":["module","exports","StyledButton","withTheme","styled","MuiButton","Button","React","forwardRef","props","ref","variant","ButtonGetDemo","t","useTranslation","color","ButtonReadMore","buttonVariant","GridBox","Comp","muiStyled","spacing","addSpacing","Grid","SectionContainer","Container","theme","px","StyledPaper","Paper","Image","src","rest","Box","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","buttonText","children","title","container","direction","item","Typography","my","xs","md","FullWidthSection","component","disableGutters","elevation","mb","Children","toArray","filter","c","Boolean","length","countChildren","mt","Section","flip","image","tuckImage","imageTag","ImageContainerComponent","position","StyledDocumentBox","palette","background","paper","LabelTypo","secondary","dark","DocumentBox","label","useTheme","isXs","useMediaQuery","iconSize","border","p","alignItems","wrap","display","flexDirection","borderRadius","height","width","flexGrow","ml","textAlign","TypoWrapper","str","i","paragraph","key","Applications","tMap","Page","srcFuture","srcSimulationPoster","srcDigitalTwinPoster","srcCloudPoster","srcAcademics","srcRobotics","SubscribeBox"],"mappings":"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","file":"component---src-pages-applications-tsx-72a5077f0772ee7199bf.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/academics-223a3d8e22838a0dd005226c0ee0cdfd.jpg\";","module.exports = __webpack_public_path__ + \"static/simulation-platform-37a96777ce2c1bf70b36ca13b1c9c458.jpg\";","module.exports = __webpack_public_path__ + \"static/robotics-adebb36459231768f4d1529e553bbf25.jpg\";","module.exports = __webpack_public_path__ + \"static/cloud-simulation-b834b11be46add0489efb4c057935af7.jpg\";","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport Link from './Link';\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button: React.ForwardRefExoticComponent<ButtonProps> = React.forwardRef((props, ref) => (\n  <StyledButton variant='outlined' {...props} ref={ref} />\n));\n\nconst ButtonGetDemo: typeof Button = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore: typeof LinkButton = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <LinkButton buttonVariant='outlined' {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </LinkButton>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import Grid from '@material-ui/core/Grid';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\n\nexport default GridBox;\nexport { GridBox };\n","import { styled as muiStyled } from '@material-ui/core/styles';\nimport { spacing, SpacingProps } from '@material-ui/system';\n\ntype SpacedComponent<T> = React.FC<\n  T &\n    SpacingProps & {\n      component?: React.ComponentType | keyof JSX.IntrinsicElements;\n    }\n>;\n\n// Add the `spacing` props to the component\nconst addSpacing = <T>(Comp: React.FC<T>) => muiStyled(Comp)(spacing) as SpacedComponent<T>;\n\nexport default addSpacing;\nexport { addSpacing };\n","import { ButtonProps, withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonGetDemo, ButtonReadMore } from 'src/components/Button';\nimport GridBox from 'src/components/GridBox';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { LinkProps } from './Link';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst Image = withTheme(styled(({ src, ...rest }) => <Box {...rest} />)`\n  height: 100%;\n  width: 100%;\n  min-height: 300px;\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 8px;\n`);\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`);\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`);\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n  direction?: GridProps['direction'];\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  tuckImage?: boolean;\n}\n\nconst Content = ({ buttonProps, buttonText, children, title, variant = 'h5' }: ContentProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <Grid container direction='column'>\n      <GridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </GridBox>\n      <GridBox item my={{ xs: 2, md: 5 }}>\n        {children}\n      </GridBox>\n      {buttonText && <GridBox item>{button}</GridBox>}\n    </Grid>\n  );\n};\n\nconst Section = ({ buttonText, children, flip, image, src, title, tuckImage, variant }: SectionProps) => {\n  let imageTag = image || <Image src={src} />;\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n  return (\n    <SectionContainer component='section' disableGutters>\n      <StyledPaper elevation={0}>\n        <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={6}>\n            {imageTag}\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box position='relative'>\n              <Content title={title} buttonText={buttonText} variant={variant}>\n                {children}\n              </Content>\n            </Box>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </SectionContainer>\n  );\n};\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SectionContainer component='section' disableGutters>\n    <StyledPaper elevation={0}>\n      <Box>\n        {title ? (\n          <Box mb={{ xs: 2, md: 5 }}>\n            <Typography variant={variant}>{title}</Typography>\n          </Box>\n        ) : null}\n        <Image src={src} />\n        {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n      </Box>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","module.exports = __webpack_public_path__ + \"static/future-mobility-solutions-f64da3c83062db99b1f167b80cfbf48e.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button from 'src/components/Button';\nimport { IconDocument } from 'src/components/Icons';\nimport styled from 'styled-components';\n\nconst StyledDocumentBox = withTheme(styled(Box)`\n  border-color: ${({ theme }) => theme.palette.background.paper};\n`);\n\nconst LabelTypo = withTheme(styled(Typography)`\n  color: ${({ theme }) => theme.palette.secondary.dark};\n`);\n\nconst DocumentBox = ({ title, label, buttonText, ...rest }: BoxProps & { label?: string; buttonText?: string }) => {\n  const theme = useTheme();\n  const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n  const iconSize = isXs ? 42 : 80;\n  return (\n    <StyledDocumentBox\n      border={1}\n      my={4}\n      p={2}\n      alignItems='center'\n      wrap='nowrap'\n      display='flex'\n      flexDirection={isXs ? 'column' : 'row'}\n      borderRadius='borderRadius'\n      {...rest}\n    >\n      <Box>\n        <IconDocument height={iconSize} width={iconSize} />\n      </Box>\n      <Box flexGrow={1} ml={isXs ? 0 : 2} mt={isXs ? 1 : 0} textAlign={isXs ? 'center' : null}>\n        <Typography>{title}</Typography>\n        {label ? <LabelTypo variant='overline'>{label}</LabelTypo> : null}\n      </Box>\n      {buttonText ? (\n        <Box ml={isXs ? 0 : 2} mt={isXs ? 3 : 0}>\n          <Button>{buttonText}</Button>\n        </Box>\n      ) : null}\n    </StyledDocumentBox>\n  );\n};\n\nexport default DocumentBox;\nexport { DocumentBox };\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport DocumentBox from 'src/components/DocumentBox';\nimport Page from 'src/components/Page';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcAcademics from 'src/images/academics.jpg';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcFuture from 'src/images/future-mobility-solutions.jpg';\nimport srcRobotics from 'src/images/robotics.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function Applications() {\n  const { t, tMap } = useTranslation();\n\n  return (\n    <Page title={t('applications.title')}>\n      <Section title={t('applications.title')} variant='h2' buttonText='getDemo' src={srcFuture} tuckImage>\n        {tMap('applications.body', TypoWrapper)}\n      </Section>\n\n      <Section flip title={t('applications.section1.title')} src={srcSimulationPoster}>\n        {tMap('applications.section1.body', TypoWrapper)}\n      </Section>\n\n      <Section title={t('applications.section2.title')} src={srcDigitalTwinPoster}>\n        {tMap('applications.section2.body', TypoWrapper)}\n      </Section>\n\n      <Section flip title={t('applications.section3.title')} src={srcCloudPoster}>\n        {tMap('applications.section3.body', TypoWrapper)}\n      </Section>\n\n      <DocumentBox\n        title={t('applications.files.0')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <Section title={t('applications.section4.title')} src={srcAcademics} tuckImage>\n        {tMap('applications.section4.body', TypoWrapper)}\n      </Section>\n\n      <DocumentBox\n        title={t('applications.files.1')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <Section flip title={t('applications.section5.title')} src={srcRobotics} tuckImage>\n        {tMap('applications.section5.body', TypoWrapper)}\n      </Section>\n\n      <DocumentBox\n        title={t('applications.files.0')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <DocumentBox\n        title={t('applications.files.1')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}