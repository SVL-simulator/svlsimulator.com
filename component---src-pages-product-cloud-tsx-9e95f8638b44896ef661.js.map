{"version":3,"sources":["webpack:///./src/videos/cloud-simulation.mp4","webpack:///./src/videos/simulation-platform.mp4","webpack:///./src/components/Image.tsx","webpack:///./src/images/simulation-platform.jpg","webpack:///./src/components/PagePreviewBox.tsx","webpack:///./src/videos/digital-twin.mp4","webpack:///./src/images/cloud-simulation.jpg","webpack:///./src/components/Section.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/pages/product/cloud.tsx","webpack:///./src/components/Li.tsx","webpack:///./src/images/digital-twin.jpg"],"names":["module","exports","ImageBase","withTheme","styled","fit","src","rest","Image","props","height","width","minHeight","role","PagePreviewBox","title","link","buttonText","poster","mt","xs","md","p","alignItems","justifyContent","display","position","flexDirection","mb","to","CloudPreviewBox","t","useTranslation","srcCloudVideo","srcCloudPoster","DigitalTwinPreviewBox","srcDigitalTwinVideo","srcDigitalTwinPoster","SimulationPreviewBox","srcSimulationVideo","srcSimulationPoster","SpacedSectionContainer","PageSection","theme","px","spacing","TitleGridBox","GridBox","BodyGridBox","contained","flip","tuckImage","fade","palette","background","default","StyledImage","borderRadius","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","Box","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","children","direction","justify","variant","container","item","textAlign","undefined","FullWidthSection","component","maxWidth","React","Children","toArray","filter","c","Boolean","length","countChildren","Section","image","video","imageTag","ImageContainerComponent","addSpacing","Grid","ListItemWrapper","str","i","key","CloudSimAAS","tMap","disablePadding","sm","LiText","ListItemText","text","secondary","Li","ListItem"],"mappings":"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","file":"component---src-pages-product-cloud-tsx-9e95f8638b44896ef661.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/cloud-simulation-8ee39979f730df026cdf4a209a12a2af.mp4\";","module.exports = __webpack_public_path__ + \"static/simulation-platform-8970e30d9ed0544d6382c5e0578eaeb5.mp4\";","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & { fit?: 'cover' | 'contain'; src?: HTMLImageElement['src'] };\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit = 'cover', src, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: ${({ fit }) => fit};\n  background-position: center center;\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","module.exports = __webpack_public_path__ + \"static/simulation-platform-37a96777ce2c1bf70b36ca13b1c9c458.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { ReadMoreButton } from 'src/components/Button';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\nimport srcCloudVideo from 'src/videos/cloud-simulation.mp4';\nimport srcDigitalTwinVideo from 'src/videos/digital-twin.mp4';\nimport srcSimulationVideo from 'src/videos/simulation-platform.mp4';\nimport BackgroundVideo from './BackgroundVideo';\n\nexport interface PagePreviewBoxProps extends BoxProps {\n  buttonText?: string;\n  link: string;\n  poster: React.VideoHTMLAttributes<HTMLVideoElement>['poster'];\n  src: React.VideoHTMLAttributes<HTMLVideoElement>['src'];\n  title: string;\n}\n\nconst PagePreviewBox = ({ title, buttonText, link, poster, src, ...rest }: PagePreviewBoxProps) => (\n  <Box\n    mt={{ xs: 8, md: 16 }}\n    p={4}\n    alignItems='center'\n    justifyContent='center'\n    display='flex'\n    position='relative'\n    flexDirection='column'\n    {...rest}\n  >\n    <BackgroundVideo src={src} poster={poster} position='absolute' fit='cover' />\n    <Box mb={3}>\n      <Typography>{title}</Typography>\n    </Box>\n    <Box>\n      <ReadMoreButton to={link} />\n    </Box>\n  </Box>\n);\n\nconst CloudPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('cloud.title')} link='/product/cloud' src={srcCloudVideo} poster={srcCloudPoster} />;\n};\n\nconst DigitalTwinPreviewBox = () => {\n  const { t } = useTranslation();\n  return (\n    <PagePreviewBox\n      title={t('digitaltwin.title')}\n      link='/product/digitaltwin'\n      src={srcDigitalTwinVideo}\n      poster={srcDigitalTwinPoster}\n    />\n  );\n};\n\nconst SimulationPreviewBox = () => {\n  const { t } = useTranslation();\n  return (\n    <PagePreviewBox\n      title={t('simulation.title')}\n      link='/product/simulation'\n      src={srcSimulationVideo}\n      poster={srcSimulationPoster}\n    />\n  );\n};\n\nexport default PagePreviewBox;\nexport { PagePreviewBox, CloudPreviewBox, SimulationPreviewBox, DigitalTwinPreviewBox };\n","module.exports = __webpack_public_path__ + \"static/digital-twin-cad342468901a0479c8b992438ce4192.mp4\";","module.exports = __webpack_public_path__ + \"static/cloud-simulation-b834b11be46add0489efb4c057935af7.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { fade, withTheme } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ReadMoreButton, RequestDemoButton } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { PageSection, PageSectionProps } from 'src/components/Page';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport BackgroundVideo from './BackgroundVideo';\nimport { LinkProps } from './Link';\n\nconst SpacedSectionContainer = withTheme(styled(PageSection)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as React.FC<PageSectionProps<'section', { component: string }>>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`) as React.FC<BoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`) as React.FC<BoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  tuckImage?: boolean;\n  video?: React.VideoHTMLAttributes<HTMLVideoElement>['src'];\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <RequestDemoButton {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ReadMoreButton {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      <TitleGridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </TitleGridBox>\n      <BodyGridBox item mt={{ xs: 2, md: 5 }} flip={flip} contained={contained} tuckImage={tuckImage}>\n        {children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box textAlign={!flip && contained ? 'end' : undefined}>{button}</Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  buttonProps,\n  children,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video\n}: SectionProps) => {\n  let imageTag =\n    image ||\n    (video ? (\n      <BackgroundVideo src={video} poster={src} borderRadius='borderRadius' fit='cover' />\n    ) : (\n      <StyledImage src={src} />\n    ));\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  return (\n    <SpacedSectionContainer component='section'>\n      <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={6}>\n          {imageTag}\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box position='relative'>\n            <Content\n              title={title}\n              buttonText={buttonText}\n              buttonProps={buttonProps}\n              minHeight={minHeight}\n              variant={variant}\n              contained={contained}\n              flip={flip}\n              tuckImage={tuckImage}\n            >\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </SpacedSectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SpacedSectionContainer component='section' maxWidth={false}>\n    {title ? (\n      <Box mb={{ xs: 2, md: 5 }}>\n        <Typography variant={variant}>{title}</Typography>\n      </Box>\n    ) : null}\n    <StyledImage src={src} />\n    {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n  </SpacedSectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","import Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport Li, { LiText } from 'src/components/Li';\nimport Page from 'src/components/Page';\nimport { DigitalTwinPreviewBox, SimulationPreviewBox } from 'src/components/PagePreviewBox';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcCloudVideo from 'src/videos/cloud-simulation.mp4';\n\nconst ListItemWrapper: MapFunction = (str, i) => (\n  <Li key={`${str}${i}`}>\n    <LiText>{str}</LiText>\n  </Li>\n);\n\nexport default function CloudSimAAS() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('cloud.title')}>\n      <Section\n        buttonText='getDemo'\n        flip\n        src={srcCloudPoster}\n        video={srcCloudVideo}\n        title={t('cloud.title')}\n        tuckImage\n        variant='h3'\n      >\n        <List disablePadding>{tMap('cloud.body', ListItemWrapper)}</List>\n      </Section>\n\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <SimulationPreviewBox />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <DigitalTwinPreviewBox />\n        </Grid>\n      </Grid>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText, { ListItemTextProps } from '@material-ui/core/ListItemText';\nimport { withTheme } from '@material-ui/core/styles';\nimport styled from 'styled-components';\n\nexport type LiProps = ListItemProps;\nexport type LiTextProps = ListItemTextProps;\n\nconst LiText = withTheme(styled(ListItemText)`\n  .MuiTypography-displayBlock {\n    display: inline-block;\n\n    &::before {\n      content: '–';\n      display: inline-block;\n      color: ${({ theme }) => theme.palette.text.secondary};\n      // color: ${({ theme }) => theme.palette.secondary.dark};\n      text-indent: -1.6ex; // Position the - just inside the Mui-LI's padding\n\n      ol & {\n        content: counter(list-item-counter) '.\\x0000a0 '; // Inject a \"hard\" space, since trailing spaces get trimmed.\n        text-align: right;\n        text-indent: -8ex;\n      }\n    }\n  }\n`) as React.FC<LiTextProps>;\n\nconst Li = withTheme(styled(ListItem)`\n  padding-top: initial;\n  padding-bottom: initial;\n  counter-increment: list-item-counter;\n\n  .MuiListItemText-root {\n    margin-top: initial;\n    margin-bottom: initial;\n  }\n`) as React.FC<LiProps>;\n\nexport default Li;\nexport { Li, LiText };\n","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}