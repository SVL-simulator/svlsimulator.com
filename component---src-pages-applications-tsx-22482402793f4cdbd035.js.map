{"version":3,"sources":["webpack:///./src/components/Button.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/components/DocumentBox.tsx","webpack:///./src/pages/applications.tsx"],"names":["StyledButton","withTheme","styled","MuiButton","Button","React","forwardRef","props","ref","variant","ButtonGetDemo","t","useTranslation","color","ButtonReadMore","buttonVariant","SectionContainer","Container","theme","px","spacing","StyledPaper","Paper","Image","Box","Content","button","buttonProps","buttonText","children","title","container","direction","item","my","Section","flip","tuckImage","component","elevation","xs","md","StyledDocumentBox","palette","background","paper","DocumentBox","label","rest","useTheme","isXs","useMediaQuery","breakpoints","up","iconSize","border","p","alignItems","wrap","display","flexDirection","borderRadius","height","width","flexGrow","ml","mt","textAlign","Typography","TypoWrapper","str","paragraph","Applications","tMap","Page","SubscribeBox"],"mappings":"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","file":"component---src-pages-applications-tsx-22482402793f4cdbd035.js","sourcesContent":["import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport Link from './Link';\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button: React.ExoticComponent<ButtonProps> = React.forwardRef((props, ref) => (\n  <StyledButton variant='outlined' {...props} ref={ref} />\n));\n\nconst ButtonGetDemo: typeof Button = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore: typeof LinkButton = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <LinkButton buttonVariant='outlined' {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </LinkButton>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import { ButtonProps, withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonGetDemo, ButtonReadMore } from 'src/components/Button';\nimport GridBox from 'src/components/GridBox';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { LinkProps } from './Link';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst Image = withTheme(styled(Box)`\n  height: 100%;\n  width: 100%;\n  min-height: 300px;\n  background-image: linear-gradient(-205deg, #e83d95, #862155 30%, black);\n  border-radius: 8px;\n`);\n\ntype ContentProps = {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n  children: React.ReactNode;\n  direction?: GridProps['direction'];\n  title: string;\n  variant?: TypographyProps['variant'];\n};\nconst Content = ({ buttonProps, buttonText, children, title, variant = 'h5' }: ContentProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <Grid container direction='column'>\n      <GridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </GridBox>\n      <GridBox item my={5}>\n        {children}\n      </GridBox>\n      {buttonText && <GridBox item>{button}</GridBox>}\n    </Grid>\n  );\n};\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\nconst Section = ({ buttonText, children, flip, title, tuckImage, variant }: SectionProps) => (\n  <SectionContainer component='section'>\n    <StyledPaper elevation={0}>\n      <Grid container spacing={2} direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={6}>\n          <Image />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box px={2}>\n            <Content title={title} buttonText={buttonText} variant={variant}>\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent };\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button from 'src/components/Button';\nimport { IconDocument } from 'src/components/Icons';\nimport styled from 'styled-components';\n\nconst StyledDocumentBox = withTheme(styled(Box)`\n  border-color: ${({ theme }) => theme.palette.background.paper};\n`);\n\nconst DocumentBox = ({ title, label, buttonText, ...rest }: BoxProps & { label?: string; buttonText?: string }) => {\n  const theme = useTheme();\n  const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n  const iconSize = isXs ? 42 : 80;\n  return (\n    <StyledDocumentBox\n      border={1}\n      my={4}\n      p={2}\n      alignItems='center'\n      wrap='nowrap'\n      display='flex'\n      flexDirection={isXs ? 'column' : 'row'}\n      borderRadius='borderRadius'\n      {...rest}\n    >\n      <Box>\n        <IconDocument height={iconSize} width={iconSize} />\n      </Box>\n      <Box flexGrow={1} ml={isXs ? 0 : 2} mt={isXs ? 1 : 0} textAlign={isXs ? 'center' : null}>\n        <Typography>{title}</Typography>\n        {label ? <Typography variant='body2'>{label}</Typography> : null}\n      </Box>\n      {buttonText ? (\n        <Box ml={isXs ? 0 : 2} mt={isXs ? 3 : 0}>\n          <Button>{buttonText}</Button>\n        </Box>\n      ) : null}\n    </StyledDocumentBox>\n  );\n};\n\nexport default DocumentBox;\nexport { DocumentBox };\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport DocumentBox from 'src/components/DocumentBox';\nimport Page from 'src/components/Page';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\n\nconst TypoWrapper = (str: string) => <Typography paragraph>{str}</Typography>;\n\nexport default function Applications() {\n  const { t, tMap } = useTranslation();\n\n  return (\n    <Page title={t('applications.title')}>\n      <Section title={t('applications.title')} variant='h2' buttonText='getDemo'>\n        {tMap('applications.body', TypoWrapper)}\n      </Section>\n\n      <Section flip title={t('applications.section1.title')}>\n        {tMap('applications.section1.body', TypoWrapper)}\n      </Section>\n\n      <Section title={t('applications.section2.title')}>{tMap('applications.section2.body', TypoWrapper)}</Section>\n\n      <Section flip title={t('applications.section3.title')}>\n        {tMap('applications.section3.body', TypoWrapper)}\n      </Section>\n\n      <DocumentBox\n        title={t('applications.files.0')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n      <DocumentBox\n        title={t('applications.files.1')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n"],"sourceRoot":""}