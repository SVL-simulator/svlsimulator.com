{"version":3,"sources":["webpack:///./src/components/LayoutGrid.tsx","webpack:///./src/components/MoreArrows.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/Section.tsx"],"names":["StyledBox","withTheme","styled","xs","sm","md","lg","xl","spacing","rest","theme","px","breakpoints","up","LayoutGrid","props","ArrowsContainer","Box","Arrow","Arrows","Center","Container","Image","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingImage","ReverseTuckingImage","SmallImage","down","HeroBox","HeroGrid","Grid","TypoWrapper","str","Typography","brandIconProps","color","height","width","Home","useTranslation","t","tMap","Page","mb","container","direction","alignItems","justify","item","variant","disableGutters","mt","Button","p","textAlign","MoreArrows","my","Section","title","buttonText","StyledButton","MuiButton","React","forwardRef","ref","ButtonGetDemo","ButtonReadMore","SectionContainer","StyledPaper","Paper","Content","button","children","flip","tuckImage","component","elevation"],"mappings":"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","file":"component---src-pages-index-tsx-928f4b4757309a0d7dab.js","sourcesContent":["import Box, { BoxProps } from '@material-ui/core/Box';\nimport { GridProps } from '@material-ui/core/Grid';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { px } from 'src/utils/theme';\n\ninterface LayoutGridProps {\n  xs?: GridProps['xs'];\n  sm?: GridProps['sm'];\n  md?: GridProps['md'];\n  lg?: GridProps['lg'];\n  xl?: GridProps['xl'];\n  spacing?: GridProps['spacing'];\n}\n\nconst JustBox = ({ xs, sm, md, lg, xl, spacing, ...rest }: LayoutGridProps) => <Box {...rest} />;\n\nconst StyledBox = withTheme(styled(JustBox)`\n  ${({ theme, xs, sm, md, lg, xl, spacing }) => `\n  display: grid;\n  grid-gap: ${px(theme.spacing(spacing))};\n  // grid-template-columns: repeat(4, 1fr);\n\n  ${xs && theme.breakpoints.up('xs')} {\n    grid-template-columns: repeat(${xs}, 1fr);\n  }\n  ${sm && theme.breakpoints.up('sm')} {\n    grid-template-columns: repeat(${sm}, 1fr);\n  }\n  ${md && theme.breakpoints.up('md')} {\n    grid-template-columns: repeat(${md}, 1fr);\n  }\n  ${lg && theme.breakpoints.up('lg')} {\n    grid-template-columns: repeat(${lg}, 1fr);\n  }\n  ${xl && theme.breakpoints.up('xl')} {\n    grid-template-columns: repeat(${xs}, 1fr);\n  }\n`}\n`);\n\nconst LayoutGrid: React.FC<BoxProps & LayoutGridProps> = props => <StyledBox {...props} />;\n\nexport default LayoutGrid;\nexport { LayoutGrid };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst ArrowsContainer = withTheme(styled(Box)`\n  width: 40px;\n  height: 80px;\n  display: inline-block;\n`);\n\nconst Arrow = withTheme(styled(Box)`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-bottom: 2px solid white;\n  border-right: 2px solid white;\n  transform: translate(20px, -10px) rotate(45deg);\n  margin: -10px;\n  animation: animate 2s infinite;\n  will-change: transform, opacity;\n\n  &:nth-child(2) {\n    animation-delay: -0.2s;\n  }\n\n  &:nth-child(3) {\n    animation-delay: -0.4s;\n  }\n\n  @keyframes animate {\n    0% {\n      opacity: 0;\n      transform: translate(20px, -10px) rotate(45deg) translate(0, 0);\n    }\n    50% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n      transform: translate(20px, -10px) rotate(45deg) translate(30px, 30px);\n    }\n  }\n`);\n\nconst Arrows = () => (\n  <ArrowsContainer>\n    <Arrow />\n    <Arrow />\n    <Arrow />\n  </ArrowsContainer>\n);\n\nexport default Arrows;\nexport { Arrows };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport MoreArrows from 'src/components/MoreArrows';\nimport Page from 'src/components/Page';\nimport { SectionContent } from 'src/components/Section';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport styled from 'styled-components';\nimport { px } from 'src/utils/theme';\nimport { ButtonGetDemo } from 'src/components/Button';\nimport { IconApollo, IconBaidu, IconUnity, IconVelodyne } from 'src/components/Icons';\nimport LayoutGrid from 'src/components/LayoutGrid';\n\nconst Center = withTheme(styled(Container)`\n  text-align: center;\n  max-width: ${({ theme }) => px(theme.spacing(90))};\n`);\n\nconst Image = withTheme(styled(Box)`\n  height: 100%;\n  width: 100%;\n  background-image: linear-gradient(-205deg, #e83d95, #862155 30%, black);\n  border-radius: 8px;\n`);\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingImage = withTheme(styled(Image)`\n  min-height: 300px;\n\n  ${({ theme }) => theme.breakpoints.up('sm')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`);\n\nconst ReverseTuckingImage = withTheme(styled(TuckingImage)`\n  ${({ theme }) => theme.breakpoints.up('sm')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`);\n\nconst SmallImage = withTheme(styled(Image)`\n  height: 456px;\n\n  ${({ theme }) => `\n    ${theme.breakpoints.down('sm')} {\n      height: 300px;\n    }\n    ${theme.breakpoints.down('xs')} {\n      height: 200px;\n    }\n  `}\n`);\n\nconst HeroBox = withTheme(styled(Box)`\n  background-image: linear-gradient(-205deg, #e83d95, #862155 30%, black);\n`);\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n`);\n\nconst TypoWrapper = (str: string) => <Typography>{str}</Typography>;\n\nconst brandIconProps = { color: '#6D7B97', height: 40, width: '100%' };\n\nexport default function Home() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page>\n      <HeroBox mb={15} height='70vh'>\n        <HeroGrid container direction='column' alignItems='center' justify='center'>\n          <Grid item>\n            <Typography variant='h1'>{t('home.title')}</Typography>\n          </Grid>\n          <Grid item>\n            <Center disableGutters>\n              {tMap('home.body', TypoWrapper)}\n              <Box mt={6}>\n                <ButtonGetDemo />\n              </Box>\n            </Center>\n          </Grid>\n        </HeroGrid>\n        <Box p={2} textAlign='center'>\n          <MoreArrows />\n        </Box>\n      </HeroBox>\n\n      <Box my={15}>\n        <Grid container>\n          <Grid item xs={12} sm={6}>\n            <TuckingImage />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <SectionContent title={t('home.section1.title')} buttonText='getDemo'>\n              {tMap('home.section1.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box my={15}>\n        <Grid container direction='row-reverse'>\n          <Grid item xs={12} sm={6}>\n            <ReverseTuckingImage />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <SectionContent title={t('home.section2.title')} buttonText='getDemo'>\n              {tMap('home.section2.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box my={15}>\n        <Center disableGutters>\n          <LayoutGrid xs={2} sm={4} spacing={2}>\n            <IconBaidu {...brandIconProps} />\n            <IconApollo {...brandIconProps} />\n            <IconUnity {...brandIconProps} />\n            <IconVelodyne {...brandIconProps} />\n          </LayoutGrid>\n        </Center>\n      </Box>\n\n      <Box my={15}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent title={t('home.features.0.title')} buttonText='Read More'>\n              {tMap('home.features.0.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent title={t('home.features.1.title')} buttonText='Read More'>\n              {tMap('home.features.1.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent title={t('home.features.2.title')} buttonText='Read More'>\n              {tMap('home.features.2.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n    </Page>\n  );\n}\n","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button = React.forwardRef((props: ButtonProps, ref) => <StyledButton variant='outlined' {...props} ref={ref} />);\n\nconst ButtonGetDemo = React.forwardRef((props: ButtonProps, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore = React.forwardRef((props: ButtonProps, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </Button>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonGetDemo, ButtonReadMore } from 'src/components/Button';\nimport GridBox from 'src/components/GridBox';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst Image = withTheme(styled(Box)`\n  height: 100%;\n  width: 100%;\n  min-height: 300px;\n  background-image: linear-gradient(-205deg, #e83d95, #862155 30%, black);\n  border-radius: 8px;\n`);\n\ntype ContentProps = {\n  buttonText?: string;\n  children: React.ReactNode;\n  direction?: GridProps['direction'];\n  title: string;\n  variant?: TypographyProps['variant'];\n};\nconst Content = ({ buttonText, children, title, variant = 'h5' }: ContentProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore />;\n      break;\n    default:\n      button = <Button>{buttonText}</Button>;\n  }\n  return (\n    <Grid container direction='column'>\n      <GridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </GridBox>\n      <GridBox item my={5}>\n        {children}\n      </GridBox>\n      {buttonText && <GridBox item>{button}</GridBox>}\n    </Grid>\n  );\n};\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\nconst Section = ({ buttonText, children, flip, title, tuckImage, variant }: SectionProps) => (\n  <SectionContainer component='section'>\n    <StyledPaper elevation={0}>\n      <Grid container spacing={2} direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={6}>\n          <Image />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box px={2}>\n            <Content title={title} buttonText={buttonText} variant={variant}>\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent };\n"],"sourceRoot":""}