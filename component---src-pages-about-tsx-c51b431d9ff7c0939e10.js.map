{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/components/Button.tsx"],"names":["Center","withTheme","styled","Container","theme","px","spacing","HeroGrid","Grid","TypoWrapper","str","i","paragraph","key","About","useTranslation","t","tMap","title","height","container","alignItems","justify","variant","item","xs","sm","mb","gutterBottom","only","StyledButton","MuiButton","Button","React","forwardRef","props","ref","ButtonGetDemo","color","ButtonReadMore","buttonVariant"],"mappings":"6FAAA,wNAcMA,EAASC,YAAUC,YAAOC,KAAR,oEAACD,CAAD,sCAET,gBAAGE,EAAH,EAAGA,MAAH,OAAeC,YAAGD,EAAME,QAAQ,UAGzCC,EAAWN,YAAUC,YAAOM,KAAR,sEAACN,CAAD,mBAIpBO,EAAmC,SAACC,EAAKC,GAAN,OACvC,kBAAC,IAAD,CAAYC,WAAS,EAACC,IAAG,YAAcF,GACpCD,IAIU,SAASI,IAAQ,MACVC,cAAZC,EADsB,EACtBA,EAAGC,EADmB,EACnBA,KACX,OACE,kBAAC,IAAD,CAAMC,MAAOF,EAAE,gBACb,kBAAC,IAAD,CAAKG,OAAO,QACV,kBAACZ,EAAD,CAAUa,WAAS,EAACC,WAAW,SAASC,QAAQ,UAC9C,kBAACtB,EAAD,KACE,kBAAC,IAAD,CAAYuB,QAAQ,MAAMP,EAAE,kBAIlC,kBAAC,IAAD,CAAMI,WAAS,GACb,kBAAC,IAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAYJ,QAAQ,KAAKK,cAAY,GAClCZ,EAAE,wBAEJC,EAAK,qBAAsBR,IAE9B,kBAAC,IAAD,CAAKkB,GAAI,GACP,kBAAC,IAAD,CAAYJ,QAAQ,KAAKK,cAAY,GAClCZ,EAAE,uBAEJC,EAAK,oBAAqBR,IAE7B,kBAAC,IAAD,CAAKkB,GAAI,GACP,kBAAC,IAAD,QAGJ,kBAAC,IAAD,CAAQE,KAAK,MACX,kBAAC,IAAD,CAAML,MAAI,EAACE,GAAI,KAEjB,kBAAC,IAAD,CAAMF,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CAAKC,GAAI,GAAIV,EAAK,gBAAiBR,MAIvC,kBAAC,IAAD,S,kCClEN,yJAQMqB,EAAe7B,YAAUC,YAAO6B,KAAR,2EAAC7B,CAAD,OAExB8B,EAAuDC,IAAMC,YAAW,SAACC,EAAOC,GAAR,OAC5E,kBAACN,EAAD,eAAcP,QAAQ,YAAeY,EAArC,CAA4CC,IAAKA,QAG7CC,EAA+BJ,IAAMC,YAAW,SAACC,EAAOC,GAAQ,IAC5DpB,EAAMD,cAANC,EACR,OACE,kBAACgB,EAAD,eAAQM,MAAM,UAAUf,QAAQ,aAAgBY,EAAhD,CAAuDC,IAAKA,IACzDpB,EAAE,4BAKHuB,EAAoCN,IAAMC,YAAW,SAACC,EAAOC,GAAQ,IACjEpB,EAAMD,cAANC,EACR,OACE,kBAAC,IAAD,eAAYwB,cAAc,YAAeL,EAAzC,CAAgDC,IAAKA,IAClDpB,EAAE,6BAKMgB","file":"component---src-pages-about-tsx-c51b431d9ff7c0939e10.js","sourcesContent":["import { Hidden, withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport { ButtonGetDemo } from 'src/components/Button';\nimport Page from 'src/components/Page';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\n\nconst Center = withTheme(styled(Container)`\n  text-align: center;\n  max-width: ${({ theme }) => px(theme.spacing(100))};\n`);\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n`);\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function About() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('about.title')}>\n      <Box height='70vh'>\n        <HeroGrid container alignItems='center' justify='center'>\n          <Center>\n            <Typography variant='h6'>{t('about.body')}</Typography>\n          </Center>\n        </HeroGrid>\n      </Box>\n      <Grid container>\n        <Grid item xs={12} sm={5}>\n          <Box mb={7}>\n            <Typography variant='h6' gutterBottom>\n              {t('about.mission.title')}\n            </Typography>\n            {tMap('about.mission.body', TypoWrapper)}\n          </Box>\n          <Box mb={7}>\n            <Typography variant='h6' gutterBottom>\n              {t('about.vision.title')}\n            </Typography>\n            {tMap('about.vision.body', TypoWrapper)}\n          </Box>\n          <Box mb={7}>\n            <ButtonGetDemo />\n          </Box>\n        </Grid>\n        <Hidden only='xs'>\n          <Grid item sm={1} />\n        </Hidden>\n        <Grid item xs={12} sm={6}>\n          <Box mb={7}>{tMap('about.details', TypoWrapper)}</Box>\n        </Grid>\n      </Grid>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport Link from './Link';\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button: React.ForwardRefExoticComponent<ButtonProps> = React.forwardRef((props, ref) => (\n  <StyledButton variant='outlined' {...props} ref={ref} />\n));\n\nconst ButtonGetDemo: typeof Button = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore: typeof LinkButton = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <LinkButton buttonVariant='outlined' {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </LinkButton>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n"],"sourceRoot":""}