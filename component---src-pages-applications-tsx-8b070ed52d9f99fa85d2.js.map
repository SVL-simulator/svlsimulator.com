{"version":3,"sources":["webpack:///./src/components/Image.tsx","webpack:///./src/images/academics.jpg","webpack:///./src/images/simulation-platform.jpg","webpack:///./src/images/robotics.jpg","webpack:///./src/images/cloud-simulation.jpg","webpack:///./src/components/Button.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/utils/addSpacing.ts","webpack:///./src/components/Section.tsx","webpack:///./src/images/future-mobility-solutions.jpg","webpack:///./src/components/DocumentBox.tsx","webpack:///./src/pages/applications.tsx","webpack:///./src/images/digital-twin.jpg"],"names":["Image","withTheme","styled","src","rest","height","width","minHeight","module","exports","StyledButton","MuiButton","Button","React","forwardRef","props","ref","variant","ButtonGetDemo","t","useTranslation","color","ButtonReadMore","buttonVariant","GridBox","Comp","muiStyled","compose","spacing","sizing","addSpacing","Grid","SectionContainer","Container","theme","px","StyledPaper","Paper","TitleGridBox","BodyGridBox","StyledImage","borderRadius","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","Box","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","buttonText","children","direction","justify","title","container","item","Typography","mt","xs","md","FullWidthSection","component","disableGutters","elevation","mb","Children","toArray","filter","c","Boolean","length","countChildren","Section","flip","image","tuckImage","imageTag","ImageContainerComponent","position","StyledDocumentBox","palette","background","paper","LabelTypo","secondary","dark","DocumentBox","label","useTheme","isXs","useMediaQuery","iconSize","border","my","p","alignItems","wrap","display","flexDirection","flexGrow","ml","textAlign","TypoWrapper","str","i","paragraph","key","Applications","tMap","Page","srcFuture","srcSimulationPoster","srcDigitalTwinPoster","srcCloudPoster","srcAcademics","srcRobotics","SubscribeBox"],"mappings":"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","file":"component---src-pages-applications-tsx-8b070ed52d9f99fa85d2.js","sourcesContent":["import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport interface ImageProps extends BoxProps {\n  src?: HTMLImageElement['src'];\n}\n\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image = withTheme(styled(({ src, ...rest }) => <Box height={1} width={1} minHeight='100px' {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n`) as React.FC<ImageProps>;\n\nexport default Image;\nexport { Image };\n","module.exports = __webpack_public_path__ + \"static/academics-223a3d8e22838a0dd005226c0ee0cdfd.jpg\";","module.exports = __webpack_public_path__ + \"static/simulation-platform-37a96777ce2c1bf70b36ca13b1c9c458.jpg\";","module.exports = __webpack_public_path__ + \"static/robotics-adebb36459231768f4d1529e553bbf25.jpg\";","module.exports = __webpack_public_path__ + \"static/cloud-simulation-b834b11be46add0489efb4c057935af7.jpg\";","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport Link from './Link';\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button: React.ForwardRefExoticComponent<ButtonProps> = React.forwardRef((props, ref) => (\n  <StyledButton variant='outlined' {...props} ref={ref} />\n));\n\nconst ButtonGetDemo: typeof Button = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore: typeof LinkButton = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <LinkButton buttonVariant='outlined' {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </LinkButton>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","import { styled as muiStyled } from '@material-ui/core/styles';\nimport { compose, spacing, SpacingProps, sizing, SizingProps } from '@material-ui/system';\n\ntype SpacedProps<T = {}> = T &\n  SpacingProps &\n  SizingProps & {\n    component?: React.ComponentType | React.ReactHTMLElement<HTMLElement>;\n  };\n\ntype SpacedComponent<T> = React.FC<SpacedProps<T>>;\n\n// Add the `spacing` and `sizing` props to the component\nconst addSpacing = <T>(Comp: SpacedComponent<T>) => muiStyled(Comp)(compose(spacing, sizing));\n\nexport default addSpacing;\nexport { addSpacing };\nexport type { SpacedComponent, SpacedProps };\n","import { ButtonProps, withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonGetDemo, ButtonReadMore } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { LinkProps } from './Link';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`);\n\nconst BodyGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`) as typeof GridBox;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`) as typeof Box;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`) as typeof TuckingBox;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  tuckImage?: boolean;\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  direction = 'column',\n  justify = 'center',\n  title,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      <TitleGridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </TitleGridBox>\n      <BodyGridBox item mt={{ xs: 2, md: 5 }}>\n        {children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          {button}\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({ buttonText, children, flip, minHeight, image, src, title, tuckImage, variant }: SectionProps) => {\n  let imageTag = image || <StyledImage src={src} />;\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  return (\n    <SectionContainer component='section' disableGutters>\n      <StyledPaper elevation={0}>\n        <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={6}>\n            {imageTag}\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box position='relative'>\n              <Content title={title} buttonText={buttonText} minHeight={minHeight} variant={variant}>\n                {children}\n              </Content>\n            </Box>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </SectionContainer>\n  );\n};\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SectionContainer component='section' disableGutters>\n    <StyledPaper elevation={0}>\n      <Box>\n        {title ? (\n          <Box mb={{ xs: 2, md: 5 }}>\n            <Typography variant={variant}>{title}</Typography>\n          </Box>\n        ) : null}\n        <StyledImage src={src} />\n        {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n      </Box>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","module.exports = __webpack_public_path__ + \"static/future-mobility-solutions-f64da3c83062db99b1f167b80cfbf48e.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button from 'src/components/Button';\nimport { IconDocument } from 'src/components/Icons';\nimport styled from 'styled-components';\n\nconst StyledDocumentBox = withTheme(styled(Box)`\n  border-color: ${({ theme }) => theme.palette.background.paper};\n`);\n\nconst LabelTypo = withTheme(styled(Typography)`\n  color: ${({ theme }) => theme.palette.secondary.dark};\n`);\n\nconst DocumentBox = ({ title, label, buttonText, ...rest }: BoxProps & { label?: string; buttonText?: string }) => {\n  const theme = useTheme();\n  const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n  const iconSize = isXs ? 42 : 80;\n  return (\n    <StyledDocumentBox\n      border={1}\n      my={4}\n      p={2}\n      alignItems='center'\n      wrap='nowrap'\n      display='flex'\n      flexDirection={isXs ? 'column' : 'row'}\n      borderRadius='borderRadius'\n      {...rest}\n    >\n      <Box>\n        <IconDocument height={iconSize} width={iconSize} />\n      </Box>\n      <Box flexGrow={1} ml={isXs ? 0 : 2} mt={isXs ? 1 : 0} textAlign={isXs ? 'center' : null}>\n        <Typography>{title}</Typography>\n        {label ? <LabelTypo variant='overline'>{label}</LabelTypo> : null}\n      </Box>\n      {buttonText ? (\n        <Box ml={isXs ? 0 : 2} mt={isXs ? 3 : 0}>\n          <Button>{buttonText}</Button>\n        </Box>\n      ) : null}\n    </StyledDocumentBox>\n  );\n};\n\nexport default DocumentBox;\nexport { DocumentBox };\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport DocumentBox from 'src/components/DocumentBox';\nimport Page from 'src/components/Page';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcAcademics from 'src/images/academics.jpg';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcFuture from 'src/images/future-mobility-solutions.jpg';\nimport srcRobotics from 'src/images/robotics.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function Applications() {\n  const { t, tMap } = useTranslation();\n\n  return (\n    <Page title={t('applications.title')}>\n      <Section buttonText='getDemo' src={srcFuture} title={t('applications.title')} tuckImage variant='h3'>\n        {tMap('applications.body', TypoWrapper)}\n      </Section>\n\n      <Section flip title={t('applications.section1.title')} src={srcSimulationPoster} buttonText='readMore'>\n        {tMap('applications.section1.body', TypoWrapper)}\n      </Section>\n\n      <Section title={t('applications.section2.title')} src={srcDigitalTwinPoster} buttonText='readMore'>\n        {tMap('applications.section2.body', TypoWrapper)}\n      </Section>\n\n      <Section flip title={t('applications.section3.title')} src={srcCloudPoster} buttonText='readMore'>\n        {tMap('applications.section3.body', TypoWrapper)}\n      </Section>\n\n      <DocumentBox\n        title={t('applications.files.0')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <Section title={t('applications.section4.title')} src={srcAcademics} tuckImage buttonText='getDemo'>\n        {tMap('applications.section4.body', TypoWrapper)}\n      </Section>\n\n      <DocumentBox\n        title={t('applications.files.1')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <Section flip title={t('applications.section5.title')} src={srcRobotics} tuckImage buttonText='getDemo'>\n        {tMap('applications.section5.body', TypoWrapper)}\n      </Section>\n\n      <DocumentBox\n        title={t('applications.files.0')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <DocumentBox\n        title={t('applications.files.1')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}