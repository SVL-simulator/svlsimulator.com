{"version":3,"sources":["webpack:///./src/videos/simulation-platform.mp4","webpack:///./src/videos/Placeholder2.mp4","webpack:///./src/videos/vis-2.mp4","webpack:///./src/components/Image.tsx","webpack:///./src/images/simulation-platform.jpg","webpack:///./src/components/MoreArrows.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Center.tsx","webpack:///./src/videos/Placeholder1.mp4","webpack:///./src/videos/digital-twin.mp4","webpack:///./src/images/cloud-simulation.jpg","webpack:///./src/components/VisualizationFrame.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/videos/vis-1.mp4","webpack:///./src/images/digital-twin.jpg"],"names":["module","exports","ImageBase","withTheme","styled","fit","src","rest","Image","props","height","width","minHeight","role","ArrowsContainer","div","ARROW_SIZE","ARROW_TRAVEL_DISTANCE","Arrow","Arrows","SmallVideo","BackgroundVideo","xs","sm","md","mb","borderRadius","HeroGrid","Grid","Home","useTranslation","t","tMap","Page","Box","maxHeight","position","videoSrcHero","style","Typography","container","direction","alignItems","justify","item","variant","Center","disableGutters","maxWidth","mt","spacing","color","buttonVariant","to","target","p","textAlign","MoreArrows","my","title","video","videoSrcPlaceholder1","flip","videoSrcPlaceholder2","poster","srcSimulationPoster","srcSimulationVideo","Section","buttonText","buttonProps","srcCloudPoster","srcCloudVideo","srcDigitalTwinPoster","srcDigitalTwinVideo","SubscribeBox","addSpacing","Container","StyledPaper","Paper","DimBox","FakeWiseHeader","pb","display","flexBasis","component","ml","whiteSpace","VisualizationFrame","children","useTheme","flexDirection","boxSizing","zIndex","SpacedSectionContainer","PageSection","theme","px","TitleGridBox","GridBox","BodyGridBox","contained","tuckImage","fade","palette","background","default","StyledImage","roundTo","num","toPlaces","Math","round","pow","TuckingBox","imageColumns","breakpoints","up","ReverseTuckingBox","offset","Content","button","mode","RequestDemoFormMode","ContactUs","Button","mr","VisualizationSection","image","columnsForImage","columnsForText","overflow","right","imageTag","ImageContainerComponent","id","toLowerCase","replace","undefined","alignSelf"],"mappings":"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","file":"component---src-pages-index-tsx-8700641ce161c18fae26.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/simulation-platform-8970e30d9ed0544d6382c5e0578eaeb5.mp4\";","module.exports = __webpack_public_path__ + \"static/Placeholder2-540f40301efe4358902edea758f8db57.mp4\";","module.exports = __webpack_public_path__ + \"static/vis-2-d07f71db2a6730390a2aa0764dd2947c.mp4\";","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & { fit?: 'cover' | 'contain'; src?: HTMLImageElement['src'] };\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit, src, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: ${({ fit = 'cover' }) => fit};\n  background-position: center center;\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","module.exports = __webpack_public_path__ + \"static/simulation-platform-37a96777ce2c1bf70b36ca13b1c9c458.jpg\";","import { withTheme } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst ARROW_THICKNESS = 2;\nconst ARROW_SIZE = 14;\n// prettier-ignore\nconst ARROW_TRAVEL_DISTANCE = ((ARROW_SIZE + ARROW_THICKNESS) * 2) + 1;\n\n// prettier-ignore\nconst ArrowsContainer = withTheme(styled.div`\n  width: ${(ARROW_SIZE * 2) + ARROW_THICKNESS}px;\n  height: ${ARROW_TRAVEL_DISTANCE + ((ARROW_SIZE + ARROW_THICKNESS) * 3)}px;\n  display: inline-block;\n`);\n\nconst Arrow = withTheme(styled.div`\n  display: block;\n  width: ${ARROW_SIZE}px;\n  height: ${ARROW_SIZE}px;\n  border-bottom: ${ARROW_THICKNESS}px solid white;\n  border-right: ${ARROW_THICKNESS}px solid white;\n  transform: rotate(45deg);\n  transform-origin: bottom right;\n  animation: animate 2s infinite;\n  will-change: transform, opacity;\n\n  &:nth-child(2) {\n    animation-delay: -0.2s;\n  }\n\n  &:nth-child(3) {\n    animation-delay: -0.4s;\n  }\n\n  @keyframes animate {\n    0% {\n      opacity: 0;\n      transform: translateY(0) rotate(45deg);\n    }\n    50% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(${ARROW_TRAVEL_DISTANCE}px) rotate(45deg);\n    }\n  }\n`);\n\nconst Arrows = () => (\n  <ArrowsContainer>\n    <Arrow />\n    <Arrow />\n    <Arrow />\n  </ArrowsContainer>\n);\n\nexport default Arrows;\nexport { Arrows };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport BackgroundVideo, { BackgroundVideoProps } from 'src/components/BackgroundVideo';\nimport { LinkButton, RequestDemoButton } from 'src/components/Button';\nimport Center from 'src/components/Center';\nimport MoreArrows from 'src/components/MoreArrows';\nimport Page, { PageSection } from 'src/components/Page';\nimport { SectionContent, VisualizationSection } from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\nimport srcDigitalTwinVideo from 'src/videos/digital-twin.mp4';\nimport srcSimulationVideo from 'src/videos/simulation-platform.mp4';\nimport srcCloudVideo from 'src/videos/vis-2.mp4';\nimport styled from 'styled-components';\nimport videoSrcPlaceholder1 from '../videos/Placeholder1.mp4';\nimport videoSrcPlaceholder2 from '../videos/Placeholder2.mp4';\nimport videoSrcHero from '../videos/vis-1.mp4';\n\nconst SmallVideo: React.FC<BackgroundVideoProps> = props => (\n  <BackgroundVideo\n    height={{ xs: 200, sm: 300, md: 456 }}\n    mb={{ xs: 2, md: 5 }}\n    borderRadius='borderRadius'\n    fit='cover'\n    {...props}\n  />\n);\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n  position: relative;\n`) as React.FC<GridProps>;\n\nexport default function Home() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page>\n      <PageSection>\n        <Box mb={15} height='70vh' maxHeight={720} position='relative'>\n          <BackgroundVideo src={videoSrcHero} position='absolute' style={{ position: 'absolute' }}>\n            <Typography>\n              A video of Lidar scanning an environment, with a simulated vehicle driving down a street.\n            </Typography>\n          </BackgroundVideo>\n          <HeroGrid container direction='column' alignItems='center' justify='center'>\n            <Grid item>\n              <Typography variant='h1'>{t('home.title')}</Typography>\n            </Grid>\n            <Grid item>\n              <Center disableGutters maxWidth={720}>\n                <Typography>{t('home.body')}</Typography>\n                <Box mt={6}>\n                  <Grid container spacing={4} justify='center'>\n                    <Grid item>\n                      <RequestDemoButton variant='outlined' />\n                    </Grid>\n                    <Grid item>\n                      <LinkButton color='primary' buttonVariant='contained' to='/docs/getting-started/' target='_blank'>\n                        {t('main.buttons.getStarted')}\n                      </LinkButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Center>\n            </Grid>\n          </HeroGrid>\n          <Box p={2} textAlign='center'>\n            <MoreArrows />\n          </Box>\n        </Box>\n      </PageSection>\n\n      <PageSection>\n        <Box my={15}>\n          <VisualizationSection title={t('home.section1.title')} variant='h3' video={videoSrcPlaceholder1}>\n            {t('home.section1.body')}\n          </VisualizationSection>\n        </Box>\n      </PageSection>\n\n      <PageSection>\n        <Box my={15}>\n          <VisualizationSection title={t('home.section2.title')} flip variant='h3' video={videoSrcPlaceholder2}>\n            {t('home.section2.body')}\n          </VisualizationSection>\n        </Box>\n      </PageSection>\n\n      <Box my={15}>\n        <PageSection>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={4}>\n              <SmallVideo poster={srcSimulationPoster} src={srcSimulationVideo} />\n              <SectionContent\n                title={t('home.features.0.title')}\n                buttonText='readMore'\n                buttonProps={{ to: '/product/simulation/', title: t('home.features.0.title') }}\n              >\n                {t('home.features.0.body')}\n              </SectionContent>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <SmallVideo poster={srcCloudPoster} src={srcCloudVideo} />\n              <SectionContent\n                title={t('home.features.1.title')}\n                buttonText='readMore'\n                buttonProps={{ to: '/product/cloud/', title: t('home.features.1.title') }}\n              >\n                {t('home.features.1.body')}\n              </SectionContent>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <SmallVideo poster={srcDigitalTwinPoster} src={srcDigitalTwinVideo} />\n              <SectionContent\n                title={t('home.features.2.title')}\n                buttonText='readMore'\n                buttonProps={{ to: '/product/digitaltwin/', title: t('home.features.2.title') }}\n              >\n                {t('home.features.2.body')}\n              </SectionContent>\n            </Grid>\n          </Grid>\n        </PageSection>\n      </Box>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import Container, { ContainerProps } from '@material-ui/core/Container';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport addSpacing from 'src/utils/addSpacing';\nimport styled from 'styled-components';\nimport { PropsFor } from '@material-ui/system';\n\nconst Center = addSpacing(\n  withTheme(styled(Container)`\n    text-align: center;\n  `) as React.FC<ContainerProps>\n);\nexport type CenterProps = PropsFor<typeof Center>;\n\nexport default Center;\nexport { Center };\n","module.exports = __webpack_public_path__ + \"static/Placeholder1-ff812648a3da601af0c9cd069ea5eef8.mp4\";","module.exports = __webpack_public_path__ + \"static/digital-twin-cad342468901a0479c8b992438ce4192.mp4\";","module.exports = __webpack_public_path__ + \"static/cloud-simulation-b834b11be46add0489efb4c057935af7.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport React from 'react';\n// import { LinkButton, LinkButtonProps } from 'src/components/Button';\nimport BackgroundVideo, { BackgroundVideoProps } from 'src/components/BackgroundVideo';\nimport styled from 'styled-components';\n\nconst StyledPaper = withTheme(styled(Paper)`\n  border-radius: 16px;\n`) as React.FC<PaperProps>;\n\nconst DimBox = withTheme(styled(Box)`\n  background-color: rgba(0, 0, 0, 0.2);\n\n  dt,\n  dd {\n    display: inline-block;\n  }\n  dt {\n    margin-right: 1ex;\n  }\n`) as React.FC<BoxProps>;\n\nconst FakeWiseHeader: React.FC<BoxProps> = props => (\n  <Box pb={2} display='flex' alignItems='center' {...props}>\n    <DimBox flexBasis='100%' p={2} borderRadius='borderRadius'>\n      <Grid container>\n        <Grid item xs={12} sm={6} component='dl'>\n          <Typography component='dt' color='textSecondary'>\n            Bridge:\n          </Typography>\n          <Typography component='dd'>ROS1</Typography>\n          <br />\n          <Typography component='dt' color='textSecondary'>\n            Sensors configuration:\n          </Typography>\n          <Typography component='dd'>My config</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} component='dl'>\n          <Typography component='dt' color='textSecondary'>\n            Asset bundle version:\n          </Typography>\n          <Typography component='dd'>A</Typography>\n          <br />\n          <Typography component='dt' color='textSecondary'>\n            Connection:\n          </Typography>\n          <Typography component='dd'>localhost:9090</Typography>\n        </Grid>\n      </Grid>\n    </DimBox>\n    <DimBox ml={2} p={1} borderRadius='borderRadius' whiteSpace='nowrap'>\n      <Button style={{ width: '50%' }}>Analysis</Button>\n      <Button style={{ width: '50%' }} variant='contained' color='primary'>\n        Visualization\n      </Button>\n    </DimBox>\n  </Box>\n);\n\nexport type VisualizationFrameProps = PaperProps & Pick<BackgroundVideoProps, 'src' | 'poster'>;\n\nconst VisualizationFrame = ({ children, poster, src, ...rest }: VisualizationFrameProps) => {\n  const theme = useTheme();\n  // const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n  // const iconSize = isXs ? 42 : 80;\n  return (\n    <StyledPaper {...rest}>\n      <Box p={2} width={992} height={1} display='flex' flexDirection='column' boxSizing='border-box'>\n        <FakeWiseHeader />\n        <Box flexBasis='100%'>\n          <BackgroundVideo poster={poster} src={src} zIndex='auto'>\n            {children}\n          </BackgroundVideo>\n        </Box>\n      </Box>\n    </StyledPaper>\n  );\n};\n\nexport default VisualizationFrame;\nexport { VisualizationFrame };\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { fade, withTheme } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ReadMoreButton, RequestDemoButton } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { PageSection, PageSectionProps } from 'src/components/Page';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport BackgroundVideo from './BackgroundVideo';\nimport { LinkProps } from './Link';\nimport VisualizationFrame, { VisualizationFrameProps } from 'src/components/VisualizationFrame';\nimport { RequestDemoFormMode } from 'src/@types/shared.d';\n\n// Top of section is offset 9 spacing units so any section hash-linking\n// will link at that document scroll position, which accounts for extra\n// space for the floating fixed app bar header.\nconst SpacedSectionContainer = withTheme(styled(PageSection)`\n  margin-top: ${({ theme }) => px(theme.spacing(-9))};\n  padding-top: ${({ theme }) => px(theme.spacing(9))};\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as React.FC<PageSectionProps<'section', { component: string }>>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  /** Adds a little faded background behind the text, but only if `tuckImage` is also true. */\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleOneColumn = 2 / 12;\n\nexport type ColumnsType = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nexport type TuckingBoxProps = BoxProps & {\n  imageColumns: ColumnsType;\n};\n\nconst TuckingBox = withTheme(styled(({ ...rest }) => <Box {...rest} />)`\n  ${({ imageColumns, theme }) => `\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${theme.breakpoints.up('md')} {\n    width: ${roundTo(doubleOneColumn * imageColumns * 100, 4)}%;\n  }\n`}\n`) as React.FC<TuckingBoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ imageColumns, theme }) => {\n    // Avoid the godforsaken prettier rule that takes out mandatory parenthesis\n    const offset = doubleOneColumn * imageColumns * -100;\n    return `\n      ${theme.breakpoints.up('md')} {\n        margin-inline-start: ${roundTo(offset + 100, 4)}%;\n      }\n    `;\n  }}\n`) as React.FC<TuckingBoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title?: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  imageColumns?: ColumnsType;\n  tuckImage?: boolean;\n  video?: React.VideoHTMLAttributes<HTMLVideoElement>['src'];\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'contactUs':\n      button = <RequestDemoButton mode={RequestDemoFormMode.ContactUs} {...buttonProps} />;\n      break;\n    case 'getDemo':\n      button = <RequestDemoButton {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ReadMoreButton {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      {title && (\n        <TitleGridBox item mb={{ xs: 2, md: 5 }}>\n          <Typography variant={variant}>{title}</Typography>\n        </TitleGridBox>\n      )}\n      <BodyGridBox item flip={flip} contained={contained} tuckImage={tuckImage}>\n        {typeof children === 'string' || typeof children === 'number' ? <Typography>{children}</Typography> : children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box ml={!flip && contained ? -2 : 0} mr={flip && contained ? -2 : 0}>\n            {button}\n          </Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  buttonProps,\n  children,\n  imageColumns,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video\n}: SectionProps) => {\n  // If an amount of imageColumns was not set, but it is a tuckImage, go ahead and set a default value.\n  if (!imageColumns) {\n    imageColumns = tuckImage ? 8 : 6;\n  }\n\n  let imageTag =\n    image ||\n    (video ? (\n      <BackgroundVideo src={video} poster={src} borderRadius='borderRadius' fit='cover' />\n    ) : (\n      <StyledImage src={src} />\n    ));\n\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent imageColumns={imageColumns}>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  let columnsForImage: GridBoxProps['md'] = imageColumns;\n  let columnsForText: GridBoxProps['md'] =\n    typeof columnsForImage === 'number' ? ((12 - columnsForImage) as GridBoxProps['md']) : columnsForImage;\n\n  if (tuckImage) {\n    columnsForImage = 6;\n    columnsForText = 6;\n  }\n\n  return (\n    <SpacedSectionContainer component='section' id={title ? title.toLowerCase().replace(/\\s+/g, '-') : undefined}>\n      <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'} alignItems='center'>\n        <Grid item xs={12} md={columnsForImage} style={{ alignSelf: 'stretch' }}>\n          {imageTag}\n        </Grid>\n        <Grid item xs={12} md={columnsForText}>\n          <Box position='relative'>\n            <Content\n              title={title}\n              buttonText={buttonText}\n              buttonProps={buttonProps}\n              minHeight={minHeight}\n              variant={variant}\n              contained={contained}\n              flip={flip}\n              tuckImage={tuckImage}\n            >\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </SpacedSectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SpacedSectionContainer component='section' maxWidth={false}>\n    {title ? (\n      <Box mb={{ xs: 2, md: 5 }}>\n        <Typography variant={variant}>{title}</Typography>\n      </Box>\n    ) : null}\n    <StyledImage src={src} />\n    {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n  </SpacedSectionContainer>\n);\n\nexport type VisualizationSectionProps = BoxProps & SectionProps;\n\nconst VisualizationSection: React.FC<VisualizationSectionProps> = ({\n  buttonProps,\n  buttonText = 'contactUs',\n  children,\n  contained,\n  flip,\n  image,\n  imageColumns,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video,\n  ...rest\n}) => {\n  // If an amount of imageColumns was not set, but it is a tuckImage, go ahead and set a default value.\n  if (!imageColumns) {\n    imageColumns = tuckImage ? 8 : 6;\n  }\n\n  let columnsForImage: GridBoxProps['md'] = imageColumns;\n  let columnsForText: GridBoxProps['md'] =\n    typeof columnsForImage === 'number' ? ((12 - columnsForImage) as GridBoxProps['md']) : columnsForImage;\n\n  if (tuckImage) {\n    columnsForImage = 6;\n    columnsForText = 6;\n  }\n\n  return (\n    <Box {...rest}>\n      <Grid container spacing={2} alignItems='center' direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={columnsForImage} style={{ overflow: 'hidden', height: 688 }}>\n          <Box position='relative' height={1} overflow='hidden'>\n            <VisualizationFrame\n              poster={src}\n              src={video}\n              style={{ position: 'absolute', right: flip ? 'auto' : 0, height: '100%' }}\n            />\n          </Box>\n        </Grid>\n        <Grid item xs={12} md={columnsForText}>\n          {/* <Typography variant='h4'>{title}</Typography>\n        {children}\n        <RequestDemoButton mode={RequestDemoFormMode.ContactUs} /> */}\n          <Content\n            title={title}\n            buttonText={buttonText}\n            buttonProps={buttonProps}\n            minHeight={minHeight}\n            variant={variant}\n            contained={contained}\n            flip={flip}\n          >\n            {children}\n          </Content>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection, VisualizationSection };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","module.exports = __webpack_public_path__ + \"static/vis-1-bb2f8363d0f767f782c8e3860ae9c677.mp4\";","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}