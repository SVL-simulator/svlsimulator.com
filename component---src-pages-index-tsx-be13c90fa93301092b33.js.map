{"version":3,"sources":["webpack:///./src/videos/Placeholder2.mp4","webpack:///./src/components/Image.tsx","webpack:///./src/components/LayoutGrid.tsx","webpack:///./src/images/simulation-platform.jpg","webpack:///./src/components/MoreArrows.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Center.tsx","webpack:///./src/videos/Placeholder1.mp4","webpack:///./src/images/cloud-simulation.jpg","webpack:///./src/components/Button.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/utils/addSpacing.ts","webpack:///./src/components/Section.tsx","webpack:///./src/videos/Hero.mp4","webpack:///./src/images/digital-twin.jpg"],"names":["module","exports","ImageBase","withTheme","styled","src","rest","Image","props","height","width","minHeight","StyledBox","xs","sm","md","lg","xl","spacing","dense","theme","px","breakpoints","up","LayoutGrid","ArrowsContainer","div","Arrow","Arrows","SmallImage","mb","borderRadius","HeroBox","Box","HeroGrid","Grid","TypoWrapper","str","i","Typography","key","brandIconProps","color","Home","useTranslation","t","tMap","Page","position","BackgroundVideo","videoSrcHero","style","container","direction","alignItems","justify","item","variant","Center","disableGutters","maxWidth","mt","Button","p","textAlign","MoreArrows","my","Section","title","buttonText","contained","image","videoSrcPlaceholder1","tuckImage","flip","videoSrcPlaceholder2","srcCloudPoster","buttonProps","to","srcDigitalTwinPoster","srcSimulationPoster","SubscribeBox","StyledCenter","undefined","StyledButton","MuiButton","React","forwardRef","ref","ButtonGetDemo","ButtonReadMore","buttonVariant","GridBox","Comp","muiStyled","compose","sizing","addSpacing","SectionContainer","Container","StyledPaper","Paper","TitleGridBox","BodyGridBox","fade","palette","background","default","StyledImage","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","ReverseTuckingBox","Content","button","children","FullWidthSection","component","elevation","Children","toArray","filter","c","Boolean","length","countChildren","imageTag","ImageContainerComponent"],"mappings":"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","file":"component---src-pages-index-tsx-be13c90fa93301092b33.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/Placeholder2-540f40301efe4358902edea758f8db57.mp4\";","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport interface ImageProps extends BoxProps {\n  src?: HTMLImageElement['src'];\n}\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ src, ...rest }) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image = (props: ImageProps) => <ImageBase height={1} width={1} minHeight='100px' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { GridProps } from '@material-ui/core/Grid';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { px } from 'src/utils/theme';\n\ninterface LayoutGridProps {\n  xs?: GridProps['xs'];\n  sm?: GridProps['sm'];\n  md?: GridProps['md'];\n  lg?: GridProps['lg'];\n  xl?: GridProps['xl'];\n  spacing?: GridProps['spacing'];\n  dense?: boolean;\n}\n\nconst JustBox = ({ xs, sm, md, lg, xl, spacing, dense, ...rest }: LayoutGridProps) => <Box {...rest} />;\n\nconst StyledBox = withTheme(styled(JustBox)`\n  ${({ theme, xs, sm, md, lg, xl, spacing, dense }) => `\n  display: grid;\n  grid-gap: ${px(theme.spacing(spacing))};\n  ${dense ? 'grid-auto-flow: dense;' : ''}\n  // grid-template-columns: repeat(4, 1fr);\n\n  ${xs && theme.breakpoints.up('xs')} {\n    grid-template-columns: repeat(${xs}, 1fr);\n  }\n  ${sm && theme.breakpoints.up('sm')} {\n    grid-template-columns: repeat(${sm}, 1fr);\n  }\n  ${md && theme.breakpoints.up('md')} {\n    grid-template-columns: repeat(${md}, 1fr);\n  }\n  ${lg && theme.breakpoints.up('lg')} {\n    grid-template-columns: repeat(${lg}, 1fr);\n  }\n  ${xl && theme.breakpoints.up('xl')} {\n    grid-template-columns: repeat(${xs}, 1fr);\n  }\n`}\n`);\n\nconst LayoutGrid: React.FC<BoxProps & LayoutGridProps> = props => <StyledBox {...props} />;\n\nexport default LayoutGrid;\nexport { LayoutGrid };\n","module.exports = __webpack_public_path__ + \"static/simulation-platform-37a96777ce2c1bf70b36ca13b1c9c458.jpg\";","import { withTheme } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst ArrowsContainer = withTheme(styled.div`\n  width: 40px;\n  height: 80px;\n  display: inline-block;\n`);\n\nconst Arrow = withTheme(styled.div`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-bottom: 2px solid white;\n  border-right: 2px solid white;\n  transform: translate(20px, -10px) rotate(45deg);\n  margin: -10px;\n  animation: animate 2s infinite;\n  will-change: transform, opacity;\n\n  &:nth-child(2) {\n    animation-delay: -0.2s;\n  }\n\n  &:nth-child(3) {\n    animation-delay: -0.4s;\n  }\n\n  @keyframes animate {\n    0% {\n      opacity: 0;\n      transform: translate(20px, -10px) rotate(45deg) translate(0, 0);\n    }\n    50% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n      transform: translate(20px, -10px) rotate(45deg) translate(30px, 30px);\n    }\n  }\n`);\n\nconst Arrows = () => (\n  <ArrowsContainer>\n    <Arrow />\n    <Arrow />\n    <Arrow />\n  </ArrowsContainer>\n);\n\nexport default Arrows;\nexport { Arrows };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport BackgroundVideo from 'src/components/BackgroundVideo';\nimport { ButtonGetDemo } from 'src/components/Button';\nimport Center from 'src/components/Center';\nimport { IconApollo, IconBaidu, IconUnity, IconVelodyne } from 'src/components/Icons';\nimport Image, { ImageProps } from 'src/components/Image';\nimport LayoutGrid from 'src/components/LayoutGrid';\nimport MoreArrows from 'src/components/MoreArrows';\nimport Page from 'src/components/Page';\nimport Section, { SectionContent } from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\nimport styled from 'styled-components';\nimport videoSrcHero from '../videos/Hero.mp4';\nimport videoSrcPlaceholder1 from '../videos/Placeholder1.mp4';\nimport videoSrcPlaceholder2 from '../videos/Placeholder2.mp4';\n\nconst SmallImage = (props: ImageProps) => (\n  <Image height={{ xs: 200, sm: 300, md: 456 }} mb={{ xs: 2, md: 5 }} borderRadius='borderRadius' {...props} />\n);\n\nconst HeroBox = withTheme(styled(Box)``);\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n  position: relative;\n`);\n\nconst TypoWrapper: MapFunction<string> = (str, i) => <Typography key={`paragraph${i}`}>{str}</Typography>;\n\nconst brandIconProps = { color: '#6D7B97', height: 40, width: '100%' };\n\nexport default function Home() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page>\n      <HeroBox mb={15} height='70vh' position='relative'>\n        <BackgroundVideo src={videoSrcHero} position='absolute' style={{ position: 'absolute' }}>\n          <Typography>\n            A video of Lidar scanning an environment, with a simulated vehicle driving down a street.\n          </Typography>\n        </BackgroundVideo>\n        <HeroGrid container direction='column' alignItems='center' justify='center'>\n          <Grid item>\n            <Typography variant='h1'>{t('home.title')}</Typography>\n          </Grid>\n          <Grid item>\n            <Center disableGutters maxWidth={90}>\n              {tMap('home.body', TypoWrapper)}\n              <Box mt={6}>\n                <ButtonGetDemo />\n              </Box>\n            </Center>\n          </Grid>\n        </HeroGrid>\n        <Box p={2} textAlign='center'>\n          <MoreArrows />\n        </Box>\n      </HeroBox>\n\n      <Box my={15}>\n        <Section\n          title={t('home.section1.title')}\n          buttonText='getDemo'\n          contained\n          image={\n            <BackgroundVideo src={videoSrcPlaceholder1}>\n              <Typography>\n                A different video of Lidar scanning an environment, identifying objects as it moves.\n              </Typography>\n            </BackgroundVideo>\n          }\n          tuckImage\n          variant='h3'\n        >\n          {tMap('home.section1.body', TypoWrapper)}\n        </Section>\n      </Box>\n\n      <Box my={15}>\n        <Section\n          title={t('home.section2.title')}\n          buttonText='getDemo'\n          contained\n          flip\n          image={\n            <BackgroundVideo src={videoSrcPlaceholder2}>\n              <Typography>A video of a simulated vehicle autonomously driving down a street.</Typography>\n            </BackgroundVideo>\n          }\n          tuckImage\n          variant='h3'\n        >\n          {tMap('home.section2.body', TypoWrapper)}\n        </Section>\n      </Box>\n\n      <Box my={15}>\n        <Center disableGutters maxWidth={90}>\n          <LayoutGrid xs={2} sm={4} spacing={2}>\n            <IconBaidu {...brandIconProps} />\n            <IconApollo {...brandIconProps} />\n            <IconUnity {...brandIconProps} />\n            <IconVelodyne {...brandIconProps} />\n          </LayoutGrid>\n        </Center>\n      </Box>\n\n      <Box my={15}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={4}>\n            <SmallImage src={srcCloudPoster} />\n            <SectionContent\n              title={t('home.features.0.title')}\n              buttonText='readMore'\n              buttonProps={{ to: '/product/simulation/', title: t('home.features.0.title') }}\n            >\n              {tMap('home.features.0.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SmallImage src={srcDigitalTwinPoster} />\n            <SectionContent\n              title={t('home.features.1.title')}\n              buttonText='readMore'\n              buttonProps={{ to: '/product/cloud/', title: t('home.features.1.title') }}\n            >\n              {tMap('home.features.1.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SmallImage src={srcSimulationPoster} />\n            <SectionContent\n              title={t('home.features.2.title')}\n              buttonText='readMore'\n              buttonProps={{ to: '/product/digitaltwin/', title: t('home.features.2.title') }}\n            >\n              {tMap('home.features.2.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import Container, { ContainerProps } from '@material-ui/core/Container';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\n\ninterface CenterProps extends Omit<ContainerProps, 'maxWidth'> {\n  maxWidth?: ContainerProps['maxWidth'] | number;\n}\n\nconst StyledCenter = withTheme(styled(({ maxWidth, ...rest }) => (\n  <Container {...rest} maxWidth={typeof maxWidth !== 'number' ? maxWidth : undefined} />\n))`\n  text-align: center;\n  ${({ maxWidth, theme }) => (typeof maxWidth === 'number' ? `max-width: ${px(theme.spacing(maxWidth))};` : '')}\n`);\n\nconst Center = ({ maxWidth, ...rest }: CenterProps) => <StyledCenter {...rest} maxWidth={maxWidth} />;\n\nexport default Center;\nexport { Center };\n","module.exports = __webpack_public_path__ + \"static/Placeholder1-ff812648a3da601af0c9cd069ea5eef8.mp4\";","module.exports = __webpack_public_path__ + \"static/cloud-simulation-b834b11be46add0489efb4c057935af7.jpg\";","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport Link from './Link';\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button: React.ForwardRefExoticComponent<ButtonProps> = React.forwardRef((props, ref) => (\n  <StyledButton variant='outlined' {...props} ref={ref} />\n));\n\nconst ButtonGetDemo: typeof Button = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore: typeof LinkButton = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <LinkButton buttonVariant='outlined' {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </LinkButton>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","import { styled as muiStyled } from '@material-ui/core/styles';\nimport { compose, spacing, SpacingProps, sizing, SizingProps } from '@material-ui/system';\n\ntype SpacedProps<T = {}> = T &\n  SpacingProps &\n  SizingProps & {\n    component?: React.ComponentType | React.ReactHTMLElement<HTMLElement>;\n  };\n\ntype SpacedComponent<T> = React.FC<SpacedProps<T>>;\n\n// Add the `spacing` and `sizing` props to the component\nconst addSpacing = <T>(Comp: SpacedComponent<T>) => muiStyled(Comp)(compose(spacing, sizing));\n\nexport default addSpacing;\nexport { addSpacing };\nexport type { SpacedComponent, SpacedProps };\n","import { ButtonProps, withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport Container, { ContainerProps } from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonGetDemo, ButtonReadMore } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { fade, px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { LinkProps } from './Link';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as typeof Container;\n\nconst StyledPaper = withTheme(styled(Paper)``) as React.FC<PaperProps>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`) as React.FC<BoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`) as React.FC<BoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  tuckImage?: boolean;\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      <TitleGridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </TitleGridBox>\n      <BodyGridBox item mt={{ xs: 2, md: 5 }} flip={flip} contained={contained} tuckImage={tuckImage}>\n        {children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box textAlign={!flip && contained ? 'end' : undefined}>{button}</Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  children,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant\n}: SectionProps) => {\n  let imageTag = image || <StyledImage src={src} />;\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  return (\n    <SectionContainer component='section' disableGutters>\n      <StyledPaper elevation={0}>\n        <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={6}>\n            {imageTag}\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box position='relative'>\n              <Content\n                title={title}\n                buttonText={buttonText}\n                minHeight={minHeight}\n                variant={variant}\n                contained={contained}\n                flip={flip}\n                tuckImage={tuckImage}\n              >\n                {children}\n              </Content>\n            </Box>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </SectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SectionContainer component='section' disableGutters>\n    <StyledPaper elevation={0}>\n      <Box>\n        {title ? (\n          <Box mb={{ xs: 2, md: 5 }}>\n            <Typography variant={variant}>{title}</Typography>\n          </Box>\n        ) : null}\n        <StyledImage src={src} />\n        {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n      </Box>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","module.exports = __webpack_public_path__ + \"static/Hero-861ea2e104a649286f705560432326ce.mp4\";","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}