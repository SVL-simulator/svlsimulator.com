{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/components/Image.tsx","webpack:///./src/images/about.jpg","webpack:///./src/components/Center.tsx"],"names":["HeroGrid","withTheme","styled","Grid","StyledTypography","Typography","theme","px","spacing","HeadingWrapper","str","i","variant","key","TypoWrapper","paragraph","About","useTranslation","t","tMap","title","height","xs","md","maxHeight","position","src","srcSVLLogo","style","opacity","container","alignItems","justify","maxWidth","textShadow","direction","item","sm","mb","gutterBottom","mode","RequestDemoFormMode","ContactUs","color","ImageBase","fit","rest","Image","props","width","minHeight","role","module","exports","Center","addSpacing","Container"],"mappings":"6FAAA,yPAkBMA,EAAWC,YAAUC,YAAOC,KAAR,sEAACD,CAAD,qCAKpBE,EAAmBH,YAAUC,YAAOG,KAAR,8EAACH,CAAD,2EAIb,gBAAGI,EAAH,EAAGA,MAAH,OAAeC,YAAGD,EAAME,QAAQ,QAI/CC,EAAsC,SAACC,EAAKC,GAAN,OAC1C,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,IAAG,UAAYF,GACrCD,IAICI,EAAmC,SAACJ,EAAKC,GAAN,OACvC,kBAAC,IAAD,CAAYI,WAAS,EAACF,IAAG,YAAcF,GACpCD,IAIU,SAASM,IAAQ,MACVC,cAAZC,EADsB,EACtBA,EAAGC,EADmB,EACnBA,KACX,OACE,kBAAC,IAAD,CAAMC,MAAOF,EAAE,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,OAAQ,CAAEC,GAAI,OAAQC,GAAI,QAAUC,UAAW,IAAKC,SAAS,YAChE,kBAAC,IAAD,CACEC,IAAKC,IAELF,SAAS,WACTG,MAAO,CACLC,QAAS,MAIb,kBAAC7B,EAAD,CAAU8B,WAAS,EAACC,WAAW,SAASC,QAAQ,UAC9C,kBAAC,IAAD,CAAQC,SAAU,KAChB,kBAAC,IAAD,CACErB,QAAQ,KACRgB,MAAO,CAAEM,WAAY,oEAEpBhB,EAAE,kBAMX,kBAAC,IAAD,CAAMY,WAAS,EAACC,WAAW,SAASI,UAAU,UAC5C,kBAAC,IAAD,CAAMC,MAAI,EAACd,GAAI,GAAIe,GAAI,GAAId,GAAI,GAC7B,kBAAC,IAAD,CAAKe,GAAI,GACP,kBAAC,IAAD,KACE,kBAAClC,EAAD,CAAkBQ,QAAQ,WAAW2B,cAAY,GAC9CrB,EAAE,wBAEJC,EAAK,qBAAsBV,MAKlC,kBAAC,IAAD,CAAM2B,MAAI,EAACd,GAAI,GAAIe,GAAI,GAAId,GAAI,GAC7B,kBAAC,IAAD,CAAKe,GAAI,GAAInB,EAAK,gBAAiBL,KAGrC,kBAAC,IAAD,CAAMsB,MAAI,EAACd,GAAI,GAAIe,GAAI,GAAId,GAAI,GAC7B,kBAAC,IAAD,CAAKe,GAAI,GACP,kBAAC,IAAD,CAAmBE,KAAMC,IAAoBC,UAAW9B,QAAQ,WAAW+B,MAAM,kBAgCzF,kBAAC,IAAD,S,2GChHAC,EAAY3C,YAAUC,aAAO,cAAG2C,IAAH,EAAQnB,IAAR,IAAgBoB,EAAhB,oCAAuC,kBAAC,IAAQA,MAAxD,uEAAC5C,CAAD,kHACD,qBAAGwB,OACR,oBAAGmB,IAAH,kBAAS,QAAT,MASNE,IAFqB,SAAAC,GAAK,OAAI,kBAACJ,EAAD,eAAWvB,OAAQ,EAAG4B,MAAO,EAAGC,UAAU,QAAQC,KAAK,OAAUH,M,qBCjB9GI,EAAOC,QAAU,IAA0B,qD,kCCA3C,oDAOMC,EAASC,YACbtD,YAAUC,YAAOsD,KAAR,4DAACtD,CAAD,0BAMIoD","file":"component---src-pages-about-tsx-30cff682ac4c018ff79d.js","sourcesContent":["import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\n// import Hidden from '@material-ui/core/Hidden';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport { RequestDemoFormMode } from 'src/@types/shared.d';\nimport { MapFunction } from 'src/@types/utils';\nimport { RequestDemoButton } from 'src/components/Button';\nimport Center from 'src/components/Center';\nimport Image from 'src/components/Image';\nimport Page, { PageSection } from 'src/components/Page';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcSVLLogo from 'src/images/about.jpg';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n  position: relative;\n`) as React.FC<GridProps>;\n\nconst StyledTypography = withTheme(styled(Typography)`\n  display: inline-block;\n\n  &.MuiTypography-gutterBottom {\n    margin-bottom: ${({ theme }) => px(theme.spacing(2))};\n  }\n`) as React.FC<TypographyProps>;\n\nconst HeadingWrapper: MapFunction<string> = (str, i) => (\n  <Typography variant='h4' key={`heading${i}`}>\n    {str}\n  </Typography>\n);\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function About() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('about.title')}>\n      <PageSection>\n        <Box height={{ xs: '50vh', md: '70vh' }} maxHeight={720} position='relative'>\n          <Image\n            src={srcSVLLogo}\n            // fit='contain'\n            position='absolute'\n            style={{\n              opacity: 0.4\n              // filter: 'drop-shadow(0px 2px 4px rgba(0,0,0,0.5)) drop-shadow(0px 3px 40px #ff336699) saturate(1.2)'\n            }}\n          />\n          <HeroGrid container alignItems='center' justify='center'>\n            <Center maxWidth={800}>\n              <Typography\n                variant='h4'\n                style={{ textShadow: '0 1px 10px rgb(20, 26, 45, 0.7), 0 1px 5px rgb(72, 19, 39, 0.7)' }}\n              >\n                {t('about.body')}\n              </Typography>\n            </Center>\n          </HeroGrid>\n        </Box>\n\n        <Grid container alignItems='center' direction='column'>\n          <Grid item xs={12} sm={10} md={8}>\n            <Box mb={7}>\n              <Center>\n                <StyledTypography variant='overline' gutterBottom>\n                  {t('about.mission.title')}\n                </StyledTypography>\n                {tMap('about.mission.body', HeadingWrapper)}\n              </Center>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} sm={10} md={8}>\n            <Box mb={5}>{tMap('about.details', TypoWrapper)}</Box>\n          </Grid>\n\n          <Grid item xs={12} sm={10} md={8}>\n            <Box mb={2}>\n              <RequestDemoButton mode={RequestDemoFormMode.ContactUs} variant='outlined' color='secondary' />\n            </Box>\n          </Grid>\n        </Grid>\n\n        {/* <Grid container>\n          <Grid item xs={12} sm={5}>\n            <Box mb={7}>\n              <Box mb={2}>\n                <Typography variant='overline'>{t('about.mission.title')}</Typography>\n              </Box>\n              {tMap('about.mission.body', HeadingWrapper)}\n            </Box>\n            <Box mb={7}>\n              <Box mb={2}>\n                <Typography variant='overline'>{t('about.vision.title')}</Typography>\n              </Box>\n              {tMap('about.vision.body', HeadingWrapper)}\n            </Box>\n            <Box mb={7}>\n              <RequestDemoButton />\n            </Box>\n          </Grid>\n          <Hidden only='xs'>\n            <Grid item sm={1} />\n          </Hidden>\n          <Grid item xs={12} sm={6}>\n            <Box mb={7}>{tMap('about.details', TypoWrapper)}</Box>\n          </Grid>\n        </Grid> */}\n      </PageSection>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & { fit?: 'cover' | 'contain'; src?: HTMLImageElement['src'] };\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit, src, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: ${({ fit = 'cover' }) => fit};\n  background-position: center center;\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","module.exports = __webpack_public_path__ + \"static/about-74bdcb7831b975856a06d7d4edb5561c.jpg\";","import Container, { ContainerProps } from '@material-ui/core/Container';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport addSpacing from 'src/utils/addSpacing';\nimport styled from 'styled-components';\nimport { PropsFor } from '@material-ui/system';\n\nconst Center = addSpacing(\n  withTheme(styled(Container)`\n    text-align: center;\n  `) as React.FC<ContainerProps>\n);\nexport type CenterProps = PropsFor<typeof Center>;\n\nexport default Center;\nexport { Center };\n"],"sourceRoot":""}