{"version":3,"sources":["webpack:///./src/images/digitaltwin4.png","webpack:///./src/components/Image.tsx","webpack:///./src/pages/product/digitaltwin.tsx","webpack:///./src/images/digitaltwin2.png","webpack:///./src/videos/digital-twin.mp4","webpack:///./src/components/VisualizationFrame.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/images/digitaltwin3.png","webpack:///./src/images/digital-twin.jpg"],"names":["module","exports","ImageBase","withTheme","styled","fit","src","rest","Image","props","height","width","minHeight","role","DigitalTwin","useTranslation","t","tMap","title","buttonText","contained","srcTwinImg1","tuckImage","variant","video","srcDigitalTwinVideo","imageColumns","flip","srcTwinImg2","srcTwinImg3","srcTwinImg4","StyledPaper","Paper","DimBox","Box","FakeWiseHeader","pb","display","alignItems","flexBasis","p","borderRadius","Grid","container","item","xs","sm","component","Typography","color","ml","whiteSpace","style","pointerEvents","VisualizationFrame","children","poster","useTheme","flexDirection","boxSizing","BackgroundVideo","zIndex","SpacedSectionContainer","PageSection","theme","px","spacing","TitleGridBox","GridBox","BodyGridBox","fade","palette","background","default","StyledImage","roundTo","num","toPlaces","Math","round","pow","TuckingBox","breakpoints","up","ReverseTuckingBox","offset","Content","button","buttonProps","direction","justify","mode","RequestDemoFormMode","ContactUs","Button","mb","md","mt","mr","VisualizationSection","image","columnsForImage","columnsForText","overflow","position","right","Section","imageTag","ImageContainerComponent","id","toLowerCase","replace","undefined","alignSelf","addSpacing"],"mappings":"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","file":"component---src-pages-product-digitaltwin-tsx-5ca099ff398eb02043fb.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/digitaltwin4-4447591599ff0d6cb12e7b45f5112694.png\";","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & { fit?: 'cover' | 'contain'; src?: HTMLImageElement['src'] };\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit, src, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: ${({ fit = 'cover' }) => fit};\n  background-position: center center;\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","import Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport Page, { PageSection, PageSectionFullWidth } from 'src/components/Page';\nimport { CloudPreviewBox, SimulationPreviewBox } from 'src/components/PagePreviewBox';\nimport Section, { FullWidthSection } from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcDigitalTwinFull from 'src/images/digital-twin-full-environment.jpg';\nimport srcDigitalTwinLite from 'src/images/digital-twin-lite-environment.jpg';\nimport srcTwinImg1 from 'src/images/digital-twin.jpg';\nimport srcTwinImg2 from 'src/images/digitaltwin2.png';\nimport srcTwinImg3 from 'src/images/digitaltwin3.png';\nimport srcTwinImg4 from 'src/images/digitaltwin4.png';\nimport srcDigitalTwinVideo from 'src/videos/digital-twin.mp4';\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function DigitalTwin() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('digitaltwin.title')}>\n      <Section\n        buttonText='getDemo'\n        contained\n        src={srcTwinImg1}\n        title={t('digitaltwin.title')}\n        tuckImage\n        variant='h3'\n        video={srcDigitalTwinVideo}\n      >\n        {t('digitaltwin.body')}\n      </Section>\n\n      <Section imageColumns={7} flip src={srcTwinImg2}>\n        {t('digitaltwin.section1.body')}\n      </Section>\n\n      <Section imageColumns={7} src={srcTwinImg3}>\n        {t('digitaltwin.section2.body')}\n      </Section>\n\n      <Section imageColumns={7} flip src={srcTwinImg4}>\n        {t('digitaltwin.section3.body')}\n      </Section>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/digitaltwin2-5e97b308b62d9e869ca3c6bf834d861a.png\";","module.exports = __webpack_public_path__ + \"static/digital-twin-cad342468901a0479c8b992438ce4192.mp4\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport React from 'react';\n// import { LinkButton, LinkButtonProps } from 'src/components/Button';\nimport BackgroundVideo, { BackgroundVideoProps } from 'src/components/BackgroundVideo';\nimport styled from 'styled-components';\n\nconst StyledPaper = withTheme(styled(Paper)`\n  border-radius: 16px;\n`) as React.FC<PaperProps>;\n\nconst DimBox = withTheme(styled(Box)`\n  background-color: rgba(0, 0, 0, 0.2);\n\n  dt,\n  dd {\n    display: inline-block;\n  }\n  dt {\n    margin-right: 1ex;\n  }\n`) as React.FC<BoxProps>;\n\nconst FakeWiseHeader: React.FC<BoxProps> = props => (\n  <Box pb={2} display='flex' alignItems='center' {...props}>\n    <DimBox flexBasis='100%' p={2} borderRadius='borderRadius'>\n      <Grid container>\n        <Grid item xs={12} sm={6} component='dl'>\n          <Typography component='dt' color='textSecondary'>\n            Bridge:\n          </Typography>\n          <Typography component='dd'>ROS1</Typography>\n          <br />\n          <Typography component='dt' color='textSecondary'>\n            Sensors configuration:\n          </Typography>\n          <Typography component='dd'>My config</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} component='dl'>\n          <Typography component='dt' color='textSecondary'>\n            Asset bundle version:\n          </Typography>\n          <Typography component='dd'>A</Typography>\n          <br />\n          <Typography component='dt' color='textSecondary'>\n            Connection:\n          </Typography>\n          <Typography component='dd'>localhost:9090</Typography>\n        </Grid>\n      </Grid>\n    </DimBox>\n    <DimBox ml={2} p={1} borderRadius='borderRadius' whiteSpace='nowrap' style={{ pointerEvents: 'none' }}>\n      <Button style={{ width: '50%' }}>Analysis</Button>\n      <Button style={{ width: '50%' }} variant='contained' color='primary'>\n        Visualization\n      </Button>\n    </DimBox>\n  </Box>\n);\n\nexport type VisualizationFrameProps = PaperProps & Pick<BackgroundVideoProps, 'src' | 'poster'>;\n\nconst VisualizationFrame = ({ children, poster, src, ...rest }: VisualizationFrameProps) => {\n  const theme = useTheme();\n  // const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n  // const iconSize = isXs ? 42 : 80;\n  return (\n    <StyledPaper {...rest}>\n      <Box p={2} width={992} height={1} display='flex' flexDirection='column' boxSizing='border-box'>\n        <FakeWiseHeader />\n        <Box flexBasis='100%'>\n          <BackgroundVideo poster={poster} src={src} zIndex='auto'>\n            {children}\n          </BackgroundVideo>\n        </Box>\n      </Box>\n    </StyledPaper>\n  );\n};\n\nexport default VisualizationFrame;\nexport { VisualizationFrame };\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { fade, withTheme } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ReadMoreButton, RequestDemoButton } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { PageSection, PageSectionProps } from 'src/components/Page';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport BackgroundVideo from './BackgroundVideo';\nimport { LinkProps } from './Link';\nimport VisualizationFrame, { VisualizationFrameProps } from 'src/components/VisualizationFrame';\nimport { RequestDemoFormMode } from 'src/@types/shared.d';\n\n// Top of section is offset 9 spacing units so any section hash-linking\n// will link at that document scroll position, which accounts for extra\n// space for the floating fixed app bar header.\nconst SpacedSectionContainer = withTheme(styled(PageSection)`\n  margin-top: ${({ theme }) => px(theme.spacing(-9))};\n  padding-top: ${({ theme }) => px(theme.spacing(9))};\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as React.FC<PageSectionProps<'section', { component: string }>>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  /** Adds a little faded background behind the text, but only if `tuckImage` is also true. */\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleOneColumn = 2 / 12;\n\nexport type ColumnsType = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nexport type TuckingBoxProps = BoxProps & {\n  imageColumns: ColumnsType;\n};\n\nconst TuckingBox = withTheme(styled(({ ...rest }) => <Box {...rest} />)`\n  ${({ imageColumns, theme }) => `\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${theme.breakpoints.up('md')} {\n    width: ${roundTo(doubleOneColumn * imageColumns * 100, 4)}%;\n  }\n`}\n`) as React.FC<TuckingBoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ imageColumns, theme }) => {\n    // Avoid the godforsaken prettier rule that takes out mandatory parenthesis\n    const offset = doubleOneColumn * imageColumns * -100;\n    return `\n      ${theme.breakpoints.up('md')} {\n        margin-inline-start: ${roundTo(offset + 100, 4)}%;\n      }\n    `;\n  }}\n`) as React.FC<TuckingBoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title?: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  imageColumns?: ColumnsType;\n  tuckImage?: boolean;\n  video?: React.VideoHTMLAttributes<HTMLVideoElement>['src'];\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'contactUs':\n      button = (\n        <RequestDemoButton mode={RequestDemoFormMode.ContactUs} color='secondary' variant='outlined' {...buttonProps} />\n      );\n      break;\n    case 'getDemo':\n      button = <RequestDemoButton {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ReadMoreButton {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      {title && (\n        <TitleGridBox item mb={{ xs: 2, md: 5 }}>\n          <Typography variant={variant}>{title}</Typography>\n        </TitleGridBox>\n      )}\n      <BodyGridBox item flip={flip} contained={contained} tuckImage={tuckImage}>\n        {typeof children === 'string' || typeof children === 'number' ? <Typography>{children}</Typography> : children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box ml={!flip && contained ? -2 : 0} mr={flip && contained ? -2 : 0}>\n            {button}\n          </Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  buttonProps,\n  children,\n  imageColumns,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video\n}: SectionProps) => {\n  // If an amount of imageColumns was not set, but it is a tuckImage, go ahead and set a default value.\n  if (!imageColumns) {\n    imageColumns = tuckImage ? 8 : 6;\n  }\n\n  let imageTag =\n    image ||\n    (video ? (\n      <BackgroundVideo src={video} poster={src} borderRadius='borderRadius' fit='cover' />\n    ) : (\n      <StyledImage src={src} />\n    ));\n\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent imageColumns={imageColumns}>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  let columnsForImage: GridBoxProps['md'] = imageColumns;\n  let columnsForText: GridBoxProps['md'] =\n    typeof columnsForImage === 'number' ? ((12 - columnsForImage) as GridBoxProps['md']) : columnsForImage;\n\n  if (tuckImage) {\n    columnsForImage = 6;\n    columnsForText = 6;\n  }\n\n  return (\n    <SpacedSectionContainer component='section' id={title ? title.toLowerCase().replace(/\\s+/g, '-') : undefined}>\n      <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'} alignItems='center'>\n        <Grid item xs={12} md={columnsForImage} style={{ alignSelf: 'stretch' }}>\n          {imageTag}\n        </Grid>\n        <Grid item xs={12} md={columnsForText}>\n          <Box position='relative'>\n            <Content\n              title={title}\n              buttonText={buttonText}\n              buttonProps={buttonProps}\n              minHeight={minHeight}\n              variant={variant}\n              contained={contained}\n              flip={flip}\n              tuckImage={tuckImage}\n            >\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </SpacedSectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SpacedSectionContainer component='section' maxWidth={false}>\n    {title ? (\n      <Box mb={{ xs: 2, md: 5 }}>\n        <Typography variant={variant}>{title}</Typography>\n      </Box>\n    ) : null}\n    <StyledImage src={src} />\n    {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n  </SpacedSectionContainer>\n);\n\nexport type VisualizationSectionProps = BoxProps & SectionProps;\n\nconst VisualizationSection: React.FC<VisualizationSectionProps> = ({\n  buttonProps,\n  buttonText = 'contactUs',\n  children,\n  contained,\n  flip,\n  image,\n  imageColumns,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video,\n  ...rest\n}) => {\n  // If an amount of imageColumns was not set, but it is a tuckImage, go ahead and set a default value.\n  if (!imageColumns) {\n    imageColumns = tuckImage ? 8 : 6;\n  }\n\n  let columnsForImage: GridBoxProps['md'] = imageColumns;\n  let columnsForText: GridBoxProps['md'] =\n    typeof columnsForImage === 'number' ? ((12 - columnsForImage) as GridBoxProps['md']) : columnsForImage;\n\n  if (tuckImage) {\n    columnsForImage = 6;\n    columnsForText = 6;\n  }\n\n  return (\n    <Box {...rest}>\n      <Grid container spacing={2} alignItems='center' direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={columnsForImage} style={{ overflow: 'hidden', height: 570 }}>\n          <Box position='relative' height={1} overflow='hidden'>\n            <VisualizationFrame\n              poster={src}\n              src={video}\n              style={{ position: 'absolute', right: flip ? 'auto' : 0, height: '100%' }}\n            />\n          </Box>\n        </Grid>\n        <Grid item xs={12} md={columnsForText}>\n          {/* <Typography variant='h4'>{title}</Typography>\n        {children}\n        <RequestDemoButton mode={RequestDemoFormMode.ContactUs} /> */}\n          <Content\n            title={title}\n            buttonText={buttonText}\n            buttonProps={buttonProps}\n            minHeight={minHeight}\n            variant={variant}\n            contained={contained}\n            flip={flip}\n          >\n            {children}\n          </Content>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection, VisualizationSection };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","module.exports = __webpack_public_path__ + \"static/digitaltwin3-07f34d14867faefb302adf26ee9d5a59.png\";","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}