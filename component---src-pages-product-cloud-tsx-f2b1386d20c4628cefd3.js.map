{"version":3,"sources":["webpack:///./src/videos/cloud-simulation.mp4","webpack:///./src/images/cloud3.png","webpack:///./src/components/Image.tsx","webpack:///./src/images/cloud4.png","webpack:///./src/images/cloud1.png","webpack:///./src/components/Section.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/pages/product/cloud.tsx","webpack:///./src/components/Li.tsx","webpack:///./src/images/cloud2.png"],"names":["module","exports","ImageBase","withTheme","styled","fit","src","rest","Image","props","height","width","minHeight","role","SpacedSectionContainer","PageSection","theme","px","spacing","TitleGridBox","GridBox","BodyGridBox","contained","flip","tuckImage","fade","palette","background","default","StyledImage","borderRadius","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","Box","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","buttonText","children","direction","justify","title","variant","container","item","mt","xs","md","textAlign","undefined","Section","image","video","imageTag","poster","ImageContainerComponent","component","id","toLowerCase","replace","position","addSpacing","Grid","CloudSimAAS","useTranslation","t","tMap","srcCloudImg1","srcCloudVideo","srcCloudImg2","srcCloudImg3","srcCloudImg4","LiText","ListItemText","text","secondary","Li","ListItem"],"mappings":"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","file":"component---src-pages-product-cloud-tsx-f2b1386d20c4628cefd3.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/cloud-simulation-8ee39979f730df026cdf4a209a12a2af.mp4\";","module.exports = __webpack_public_path__ + \"static/cloud3-a47824904df357ec3e563783df0798e2.png\";","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & { fit?: 'cover' | 'contain'; src?: HTMLImageElement['src'] };\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit, src, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: ${({ fit = 'cover' }) => fit};\n  background-position: center center;\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","module.exports = __webpack_public_path__ + \"static/cloud4-f1b597bce5bb128991401f2b8de9ee87.png\";","module.exports = __webpack_public_path__ + \"static/cloud1-594fd86ee546a9070aa3641372ca7ae6.png\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { fade, withTheme } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ReadMoreButton, RequestDemoButton } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { PageSection, PageSectionProps } from 'src/components/Page';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport BackgroundVideo from './BackgroundVideo';\nimport { LinkProps } from './Link';\n\n// Top of section is offset 9 spacing units so any section hash-linking\n// will link at that document scroll position, which accounts for extra\n// space for the floating fixed app bar header.\nconst SpacedSectionContainer = withTheme(styled(PageSection)`\n  margin-top: ${({ theme }) => px(theme.spacing(-9))};\n  padding-top: ${({ theme }) => px(theme.spacing(9))};\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as React.FC<PageSectionProps<'section', { component: string }>>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`) as React.FC<BoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`) as React.FC<BoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title?: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  tuckImage?: boolean;\n  video?: React.VideoHTMLAttributes<HTMLVideoElement>['src'];\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <RequestDemoButton {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ReadMoreButton {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      {title && (\n        <TitleGridBox item>\n          <Typography variant={variant}>{title}</Typography>\n        </TitleGridBox>\n      )}\n      <BodyGridBox item mt={{ xs: 2, md: 5 }} flip={flip} contained={contained} tuckImage={tuckImage}>\n        {typeof children === 'string' || typeof children === 'number' ? <Typography>{children}</Typography> : children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box textAlign={!flip && contained ? 'end' : undefined}>{button}</Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  buttonProps,\n  children,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video\n}: SectionProps) => {\n  let imageTag =\n    image ||\n    (video ? (\n      <BackgroundVideo src={video} poster={src} borderRadius='borderRadius' fit='cover' />\n    ) : (\n      <StyledImage src={src} />\n    ));\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  return (\n    <SpacedSectionContainer component='section' id={title ? title.toLowerCase().replace(/\\s+/g, '-') : undefined}>\n      <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={6}>\n          {imageTag}\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box position='relative'>\n            <Content\n              title={title}\n              buttonText={buttonText}\n              buttonProps={buttonProps}\n              minHeight={minHeight}\n              variant={variant}\n              contained={contained}\n              flip={flip}\n              tuckImage={tuckImage}\n            >\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </SpacedSectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SpacedSectionContainer component='section' maxWidth={false}>\n    {title ? (\n      <Box mb={{ xs: 2, md: 5 }}>\n        <Typography variant={variant}>{title}</Typography>\n      </Box>\n    ) : null}\n    <StyledImage src={src} />\n    {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n  </SpacedSectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","import Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport Li, { LiText } from 'src/components/Li';\nimport Page from 'src/components/Page';\nimport { DigitalTwinPreviewBox, SimulationPreviewBox } from 'src/components/PagePreviewBox';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcCloudImg1 from 'src/images/cloud1.png';\nimport srcCloudImg2 from 'src/images/cloud2.png';\nimport srcCloudImg3 from 'src/images/cloud3.png';\nimport srcCloudImg4 from 'src/images/cloud4.png';\nimport srcCloudVideo from 'src/videos/cloud-simulation.mp4';\n\nconst ListItemWrapper: MapFunction = (str, i) => (\n  <Li key={`${str}${i}`}>\n    <LiText>{str}</LiText>\n  </Li>\n);\n\nexport default function CloudSimAAS() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('cloud.title')}>\n      <Section\n        buttonText='getDemo'\n        src={srcCloudImg1}\n        video={srcCloudVideo}\n        title={t('cloud.title')}\n        tuckImage\n        variant='h3'\n      >\n        {t('cloud.body')}\n      </Section>\n\n      <Section title={t('cloud.section1.title')} flip src={srcCloudImg2}>\n        {t('cloud.section1.body')}\n      </Section>\n\n      <Section title={t('cloud.section2.title')} src={srcCloudImg3}>\n        {t('cloud.section2.body')}\n      </Section>\n\n      <Section title={t('cloud.section3.title')} flip src={srcCloudImg4}>\n        {t('cloud.section3.body')}\n      </Section>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText, { ListItemTextProps } from '@material-ui/core/ListItemText';\nimport { withTheme } from '@material-ui/core/styles';\nimport styled from 'styled-components';\n\nexport type LiProps = ListItemProps;\nexport type LiTextProps = ListItemTextProps;\n\nconst LiText = withTheme(styled(ListItemText)`\n  .MuiTypography-displayBlock {\n    display: inline-block;\n\n    &::before {\n      content: '–';\n      display: inline-block;\n      color: ${({ theme }) => theme.palette.text.secondary};\n      // color: ${({ theme }) => theme.palette.secondary.dark};\n      text-indent: -1.6ex; // Position the - just inside the Mui-LI's padding\n\n      ol & {\n        content: counter(list-item-counter) '.\\x0000a0 '; // Inject a \"hard\" space, since trailing spaces get trimmed.\n        text-align: right;\n        text-indent: -8ex;\n      }\n    }\n  }\n`) as React.FC<LiTextProps>;\n\nconst Li = withTheme(styled(ListItem)`\n  padding-top: initial;\n  padding-bottom: initial;\n  counter-increment: list-item-counter;\n\n  .MuiListItemText-root {\n    margin-top: initial;\n    margin-bottom: initial;\n  }\n`) as React.FC<LiProps>;\n\nexport default Li;\nexport { Li, LiText };\n","module.exports = __webpack_public_path__ + \"static/cloud2-bda050ed42af57dbf25289ceb0a36d4d.png\";"],"sourceRoot":""}