{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/components/Button.tsx"],"names":["Center","withTheme","styled","Container","theme","px","spacing","HeroGrid","Grid","TypoWrapper","str","paragraph","About","useTranslation","t","tMap","title","height","container","alignItems","justify","variant","item","xs","sm","mb","gutterBottom","only","StyledButton","MuiButton","Button","React","forwardRef","props","ref","ButtonGetDemo","color","ButtonReadMore"],"mappings":"6FAAA,4MAYMA,EAASC,YAAUC,YAAOC,KAAR,oEAACD,CAAD,sCAET,gBAAGE,EAAH,EAAGA,MAAH,OAAeC,YAAGD,EAAME,QAAQ,UAGzCC,EAAWN,YAAUC,YAAOM,KAAR,sEAACN,CAAD,mBAIpBO,EAAc,SAACC,GAAD,OAAiB,kBAAC,IAAD,CAAYC,WAAS,GAAED,IAE7C,SAASE,IAAQ,MACVC,cAAZC,EADsB,EACtBA,EAAGC,EADmB,EACnBA,KACX,OACE,kBAAC,IAAD,CAAMC,MAAOF,EAAE,gBACb,kBAAC,IAAD,CAAKG,OAAO,QACV,kBAACV,EAAD,CAAUW,WAAS,EAACC,WAAW,SAASC,QAAQ,UAC9C,kBAACpB,EAAD,KACE,kBAAC,IAAD,CAAYqB,QAAQ,MAAMP,EAAE,kBAIlC,kBAAC,IAAD,CAAMI,WAAS,GACb,kBAAC,IAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAYJ,QAAQ,KAAKK,cAAY,GAClCZ,EAAE,wBAEJC,EAAK,qBAAsBN,IAE9B,kBAAC,IAAD,CAAKgB,GAAI,GACP,kBAAC,IAAD,CAAYJ,QAAQ,KAAKK,cAAY,GAClCZ,EAAE,uBAEJC,EAAK,oBAAqBN,IAE7B,kBAAC,IAAD,CAAKgB,GAAI,GACP,kBAAC,IAAD,QAGJ,kBAAC,IAAD,CAAQE,KAAK,MACX,kBAAC,IAAD,CAAML,MAAI,EAACE,GAAI,KAEjB,kBAAC,IAAD,CAAMF,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CAAKC,GAAI,GAAIV,EAAK,gBAAiBN,S,kCCxD7C,6IAMMmB,EAAe3B,YAAUC,YAAO2B,KAAR,2EAAC3B,CAAD,OAExB4B,EAASC,IAAMC,YAAW,SAACC,EAAoBC,GAArB,OAA6B,kBAACN,EAAD,eAAcP,QAAQ,YAAeY,EAArC,CAA4CC,IAAKA,QAExGC,EAAgBJ,IAAMC,YAAW,SAACC,EAAoBC,GAAQ,IAC1DpB,EAAMD,cAANC,EACR,OACE,kBAACgB,EAAD,eAAQM,MAAM,UAAUf,QAAQ,aAAgBY,EAAhD,CAAuDC,IAAKA,IACzDpB,EAAE,4BAKHuB,EAAiBN,IAAMC,YAAW,SAACC,EAAoBC,GAAQ,IAC3DpB,EAAMD,cAANC,EACR,OACE,kBAACgB,EAAD,iBAAYG,EAAZ,CAAmBC,IAAKA,IACrBpB,EAAE,6BAKMgB","file":"component---src-pages-about-tsx-22227c241ea1311f77a9.js","sourcesContent":["import Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { Hidden, withTheme } from '@material-ui/core';\nimport React from 'react';\nimport Page from 'src/components/Page';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { ButtonGetDemo } from 'src/components/Button';\n\nconst Center = withTheme(styled(Container)`\n  text-align: center;\n  max-width: ${({ theme }) => px(theme.spacing(100))};\n`);\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n`);\n\nconst TypoWrapper = (str: string) => <Typography paragraph>{str}</Typography>;\n\nexport default function About() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('about.title')}>\n      <Box height='70vh'>\n        <HeroGrid container alignItems='center' justify='center'>\n          <Center>\n            <Typography variant='h6'>{t('about.body')}</Typography>\n          </Center>\n        </HeroGrid>\n      </Box>\n      <Grid container>\n        <Grid item xs={12} sm={5}>\n          <Box mb={7}>\n            <Typography variant='h6' gutterBottom>\n              {t('about.mission.title')}\n            </Typography>\n            {tMap('about.mission.body', TypoWrapper)}\n          </Box>\n          <Box mb={7}>\n            <Typography variant='h6' gutterBottom>\n              {t('about.vision.title')}\n            </Typography>\n            {tMap('about.vision.body', TypoWrapper)}\n          </Box>\n          <Box mb={7}>\n            <ButtonGetDemo />\n          </Box>\n        </Grid>\n        <Hidden only='xs'>\n          <Grid item sm={1} />\n        </Hidden>\n        <Grid item xs={12} sm={6}>\n          <Box mb={7}>{tMap('about.details', TypoWrapper)}</Box>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n}\n","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button = React.forwardRef((props: ButtonProps, ref) => <StyledButton variant='outlined' {...props} ref={ref} />);\n\nconst ButtonGetDemo = React.forwardRef((props: ButtonProps, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore = React.forwardRef((props: ButtonProps, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </Button>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n"],"sourceRoot":""}