{"version":3,"sources":["webpack:///./src/components/Image.tsx","webpack:///./src/images/simulation-platform.jpg","webpack:///./src/components/PagePreviewBox.tsx","webpack:///./src/images/cloud-simulation.jpg","webpack:///./src/components/GridBox.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/pages/product/cloud.tsx","webpack:///./src/components/Li.tsx","webpack:///./src/images/digital-twin.jpg"],"names":["ImageBase","withTheme","styled","src","rest","Image","props","height","width","minHeight","module","exports","PagePreviewBox","title","link","buttonText","mt","xs","md","p","alignItems","display","flexDirection","mb","to","CloudPreviewBox","t","useTranslation","srcCloudPoster","DigitalTwinPreviewBox","srcDigitalTwinPoster","SimulationPreviewBox","srcSimulationPoster","GridBox","addSpacing","Grid","SectionContainer","Container","theme","px","spacing","StyledPaper","Paper","TitleGridBox","BodyGridBox","contained","flip","tuckImage","fade","palette","background","default","StyledImage","borderRadius","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","Box","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","children","direction","justify","variant","RequestDemoButton","Button","container","item","Typography","textAlign","undefined","FullWidthSection","component","disableGutters","elevation","React","Children","toArray","filter","c","Boolean","length","countChildren","Section","image","imageTag","ImageContainerComponent","position","ListItemWrapper","str","i","key","CloudSimAAS","tMap","disablePadding","sm","Li","ListItemText"],"mappings":"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","file":"component---src-pages-product-cloud-tsx-4441e14963488973b23f.js","sourcesContent":["import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport interface ImageProps extends BoxProps {\n  src?: HTMLImageElement['src'];\n}\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ src, ...rest }) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image = (props: ImageProps) => <ImageBase height={1} width={1} minHeight='100px' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","module.exports = __webpack_public_path__ + \"static/simulation-platform-37a96777ce2c1bf70b36ca13b1c9c458.jpg\";","import Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { ButtonReadMore } from 'src/components/Button';\nimport { ImageBase, ImageProps } from 'src/components/Image';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\n\nexport interface PagePreviewBoxProps extends ImageProps {\n  buttonText?: string;\n  link: string;\n}\n\nconst PagePreviewBox = ({ title, buttonText, link, ...rest }: PagePreviewBoxProps) => (\n  <ImageBase mt={{ xs: 8, md: 16 }} p={4} alignItems='center' display='flex' flexDirection='column' {...rest}>\n    <Box mb={3}>\n      <Typography>{title}</Typography>\n    </Box>\n    <Box>\n      <ButtonReadMore to={link} />\n    </Box>\n  </ImageBase>\n);\n\nconst CloudPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('cloud.title')} link='/product/cloud' src={srcCloudPoster} />;\n};\n\nconst DigitalTwinPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('digitaltwin.title')} link='/product/digitaltwin' src={srcDigitalTwinPoster} />;\n};\n\nconst SimulationPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('simulation.title')} link='/product/simulation' src={srcSimulationPoster} />;\n};\n\nexport default PagePreviewBox;\nexport { PagePreviewBox, CloudPreviewBox, SimulationPreviewBox, DigitalTwinPreviewBox };\n","module.exports = __webpack_public_path__ + \"static/cloud-simulation-b834b11be46add0489efb4c057935af7.jpg\";","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","import { ButtonProps, withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport Container, { ContainerProps } from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonReadMore } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport RequestDemoButton from 'src/components/RequestDemoButton';\nimport { fade, px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { LinkProps } from './Link';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as typeof Container;\n\nconst StyledPaper = withTheme(styled(Paper)``) as React.FC<PaperProps>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`) as React.FC<BoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`) as React.FC<BoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  tuckImage?: boolean;\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <RequestDemoButton {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      <TitleGridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </TitleGridBox>\n      <BodyGridBox item mt={{ xs: 2, md: 5 }} flip={flip} contained={contained} tuckImage={tuckImage}>\n        {children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box textAlign={!flip && contained ? 'end' : undefined}>{button}</Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  children,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant\n}: SectionProps) => {\n  let imageTag = image || <StyledImage src={src} />;\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  return (\n    <SectionContainer component='section' disableGutters>\n      <StyledPaper elevation={0}>\n        <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={6}>\n            {imageTag}\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box position='relative'>\n              <Content\n                title={title}\n                buttonText={buttonText}\n                minHeight={minHeight}\n                variant={variant}\n                contained={contained}\n                flip={flip}\n                tuckImage={tuckImage}\n              >\n                {children}\n              </Content>\n            </Box>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </SectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SectionContainer component='section' disableGutters>\n    <StyledPaper elevation={0}>\n      <Box>\n        {title ? (\n          <Box mb={{ xs: 2, md: 5 }}>\n            <Typography variant={variant}>{title}</Typography>\n          </Box>\n        ) : null}\n        <StyledImage src={src} />\n        {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n      </Box>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","import Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport Li from 'src/components/Li';\nimport Page from 'src/components/Page';\nimport { SimulationPreviewBox, DigitalTwinPreviewBox } from 'src/components/PagePreviewBox';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\n\nconst ListItemWrapper: MapFunction = (str, i) => (\n  <ListItem key={`${str}${i}`}>\n    <Li>{str}</Li>\n  </ListItem>\n);\n\nexport default function CloudSimAAS() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('cloud.title')}>\n      <Section buttonText='getDemo' flip src={srcCloudPoster} title={t('cloud.title')} tuckImage variant='h3'>\n        <List disablePadding>{tMap('cloud.body', ListItemWrapper)}</List>\n      </Section>\n\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <SimulationPreviewBox />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <DigitalTwinPreviewBox />\n        </Grid>\n      </Grid>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import ListItemText, { ListItemTextProps } from '@material-ui/core/ListItemText';\nimport { withTheme } from '@material-ui/core/styles';\nimport styled from 'styled-components';\n\nconst Li = withTheme(styled(ListItemText)`\n  .MuiTypography-displayBlock {\n    display: inline-block;\n    text-indent: -1em;\n\n    &::before {\n      content: '–';\n      display: inline-block;\n      width: 1em;\n      text-indent: 0.2em;\n    }\n  }\n`);\n\nexport default Li;\nexport { Li };\n","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}