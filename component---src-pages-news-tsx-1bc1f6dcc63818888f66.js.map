{"version":3,"sources":["webpack:///./src/components/LayoutGrid.tsx","webpack:///./src/pages/news.tsx"],"names":["StyledBox","withTheme","styled","xs","sm","md","lg","xl","spacing","rest","theme","px","breakpoints","up","LayoutGrid","props","newsBoxCategoryColors","news","event","article","announcement","StyledNewsBox","Paper","category","colSpan","rowSpan","only","NewsBox","children","title","t","useTranslation","elevation","variant","News"],"mappings":"gLAkBMA,EAAYC,YAAUC,aAFZ,SAAC,GAAD,EAAGC,GAAH,EAAOC,GAAP,EAAWC,GAAX,EAAeC,GAAf,EAAmBC,GAAnB,EAAuBC,QAAvB,IAAmCC,EAAnC,2DAA+D,kBAAC,IAAQA,MAE7D,wEAACP,CAAD,SACvB,gBAAGQ,EAAH,EAAGA,MAAOP,EAAV,EAAUA,GAAIC,EAAd,EAAcA,GAAIC,EAAlB,EAAkBA,GAAIC,EAAtB,EAAsBA,GAAIC,EAA1B,EAA0BA,GAAIC,EAA9B,EAA8BA,QAA9B,yCAEUG,YAAGD,EAAMF,QAAQA,IAF3B,wDAKAL,GAAMO,EAAME,YAAYC,GAAG,OAL3B,yCAMgCV,EANhC,oBAQAC,GAAMM,EAAME,YAAYC,GAAG,OAR3B,yCASgCT,EAThC,oBAWAC,GAAMK,EAAME,YAAYC,GAAG,OAX3B,yCAYgCR,EAZhC,oBAcAC,GAAMI,EAAME,YAAYC,GAAG,OAd3B,yCAegCP,EAfhC,oBAiBAC,GAAMG,EAAME,YAAYC,GAAG,OAjB3B,yCAkBgCV,EAlBhC,qBAyBWW,IAF0C,SAAAC,GAAK,OAAI,kBAACf,EAAce,K,sNChC3EC,EAAwB,CAC5BC,KAAM,GACNC,MAAO,wBACPC,QAAS,0BACTC,aAAc,yBAUVC,EAAgBpB,YAAUC,YAAOoB,KAAR,sEAACpB,CAAD,SAC3B,gBAAGQ,EAAH,EAAGA,MAAOa,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,QAA7B,+BACiBD,EAAU,QAAQA,EAAY,QAD/C,uBAEcC,EAAU,QAAQA,EAAY,QAF5C,iBAGSd,YAAGD,EAAMF,QAAQ,IAH1B,0BAIkBQ,EAAsBO,GAJxC,UAMAb,EAAME,YAAYc,KAAK,MANvB,6BAOmBF,EAAU,EAAI,OAAd,QAA+BA,GAPlD,aASAd,EAAME,YAAYc,KAAK,MATvB,6BAUmBF,EAAU,EAAI,OAAd,QAA+BA,GAVlD,iBAgBEG,EAAU,SAAC,GAAqG,IAAnGC,EAAmG,EAAnGA,SAAmG,IAAzFL,gBAAyF,MAA9E,OAA8E,MAAtEC,eAAsE,MAA5D,EAA4D,MAAzDC,eAAyD,MAA/C,EAA+C,EAA5CI,EAA4C,EAA5CA,MAAUpB,EAAkC,mEAC5GqB,EAAMC,cAAND,EACR,OACE,kBAACT,EAAD,eAAeW,UAAW,GAAOvB,EAAjC,CAAuCc,SAAUA,EAAUC,QAASA,EAASC,QAASA,IACpF,kBAAC,IAAD,CAAYQ,QAAQ,WAAWH,EAAE,mBAAmBP,IACnDM,GAAS,kBAAC,IAAD,CAAYI,QAAQ,MAAMJ,GACnCD,IAKQ,SAASM,IAAO,IACrBJ,EAAMC,cAAND,EACR,OACE,kBAAC,IAAD,CAAMD,MAAOC,EAAE,eACb,kBAAC,IAAD,CAAYG,QAAQ,MAAMH,EAAE,eAC5B,kBAAC,IAAD,CAAY1B,GAAI,EAAGC,GAAI,EAAGG,QAAS,GACjC,kBAACmB,EAAD,CAASE,MAAM,UACb,kBAAC,IAAD,qBAEF,kBAACF,EAAD,CAASJ,SAAS,SAChB,kBAAC,IAAD,gBAEF,kBAACI,EAAD,CAASH,QAAS,EAAGD,SAAS,WAC5B,kBAAC,IAAD,gBAEF,kBAACI,EAAD,CAASH,QAAS,EAAGD,SAAS,gBAC5B,kBAAC,IAAD,gBAEF,kBAACI,EAAD,CAASJ,SAAS,QAChB,kBAAC,IAAD,gBAEF,kBAACI,EAAD,CAASJ,SAAS,WAChB,kBAAC,IAAD","file":"component---src-pages-news-tsx-1bc1f6dcc63818888f66.js","sourcesContent":["import Box, { BoxProps } from '@material-ui/core/Box';\nimport { GridProps } from '@material-ui/core/Grid';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { px } from 'src/utils/theme';\n\ninterface LayoutGridProps {\n  xs?: GridProps['xs'];\n  sm?: GridProps['sm'];\n  md?: GridProps['md'];\n  lg?: GridProps['lg'];\n  xl?: GridProps['xl'];\n  spacing?: GridProps['spacing'];\n}\n\nconst JustBox = ({ xs, sm, md, lg, xl, spacing, ...rest }: LayoutGridProps) => <Box {...rest} />;\n\nconst StyledBox = withTheme(styled(JustBox)`\n  ${({ theme, xs, sm, md, lg, xl, spacing }) => `\n  display: grid;\n  grid-gap: ${px(theme.spacing(spacing))};\n  // grid-template-columns: repeat(4, 1fr);\n\n  ${xs && theme.breakpoints.up('xs')} {\n    grid-template-columns: repeat(${xs}, 1fr);\n  }\n  ${sm && theme.breakpoints.up('sm')} {\n    grid-template-columns: repeat(${sm}, 1fr);\n  }\n  ${md && theme.breakpoints.up('md')} {\n    grid-template-columns: repeat(${md}, 1fr);\n  }\n  ${lg && theme.breakpoints.up('lg')} {\n    grid-template-columns: repeat(${lg}, 1fr);\n  }\n  ${xl && theme.breakpoints.up('xl')} {\n    grid-template-columns: repeat(${xs}, 1fr);\n  }\n`}\n`);\n\nconst LayoutGrid: React.FC<BoxProps & LayoutGridProps> = props => <StyledBox {...props} />;\n\nexport default LayoutGrid;\nexport { LayoutGrid };\n","import { withTheme } from '@material-ui/core';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Page from 'src/components/Page';\nimport LayoutGrid from 'src/components/LayoutGrid';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\n\nconst newsBoxCategoryColors = {\n  news: '',\n  event: 'rgba(0, 0, 255, 0.05)',\n  article: 'rgba(255, 255, 0, 0.05)',\n  announcement: 'rgba(0, 255, 0, 0.05)'\n};\ntype NewsBoxCategory = keyof typeof newsBoxCategoryColors;\n\ninterface NewsBoxProps extends PaperProps {\n  colSpan: number;\n  rowSpan: number;\n  category: NewsBoxCategory;\n}\n\nconst StyledNewsBox = withTheme(styled(Paper)<NewsBoxProps>`\n  ${({ theme, category, colSpan, rowSpan }) => `\n  grid-column-end: ${colSpan ? `span ${colSpan}` : 'auto'};\n  grid-row-end: ${rowSpan ? `span ${rowSpan}` : 'auto'};\n  padding: ${px(theme.spacing(1))};\n  background-color: ${newsBoxCategoryColors[category]};\n\n  ${theme.breakpoints.only('sm')} {\n    grid-column-end: ${colSpan > 2 ? 'auto' : `span ${colSpan}`};\n  }\n  ${theme.breakpoints.only('xs')} {\n    grid-column-end: ${colSpan > 1 ? 'auto' : `span ${colSpan}`};\n  }\n  `}\n`);\n// ` as React.FC<NewsBoxProps>;\n\nconst NewsBox = ({ children, category = 'news', colSpan = 1, rowSpan = 1, title, ...rest }: Partial<NewsBoxProps>) => {\n  const { t } = useTranslation();\n  return (\n    <StyledNewsBox elevation={4} {...rest} category={category} colSpan={colSpan} rowSpan={rowSpan}>\n      <Typography variant='caption'>{t(`news.categories.${category}`)}</Typography>\n      {title && <Typography variant='h3'>{title}</Typography>}\n      {children}\n    </StyledNewsBox>\n  );\n};\n\nexport default function News() {\n  const { t } = useTranslation();\n  return (\n    <Page title={t('news.title')}>\n      <Typography variant='h1'>{t('news.title')}</Typography>\n      <LayoutGrid sm={2} md={4} spacing={2}>\n        <NewsBox title='News 1'>\n          <Typography>News 1 Body</Typography>\n        </NewsBox>\n        <NewsBox category='event'>\n          <Typography>News 2</Typography>\n        </NewsBox>\n        <NewsBox colSpan={2} category='article'>\n          <Typography>News 3</Typography>\n        </NewsBox>\n        <NewsBox colSpan={2} category='announcement'>\n          <Typography>News 4</Typography>\n        </NewsBox>\n        <NewsBox category='news'>\n          <Typography>News 5</Typography>\n        </NewsBox>\n        <NewsBox category='article'>\n          <Typography>News 6</Typography>\n        </NewsBox>\n      </LayoutGrid>\n    </Page>\n  );\n}\n"],"sourceRoot":""}