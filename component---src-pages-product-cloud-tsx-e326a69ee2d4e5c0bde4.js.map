{"version":3,"sources":["webpack:///./src/images/cloud3.png","webpack:///./src/components/Image.tsx","webpack:///./src/images/cloud4.png","webpack:///./src/videos/vis-borregas.mp4","webpack:///./src/images/cloud1.png","webpack:///./src/components/VisualizationFrame.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/pages/product/cloud.tsx","webpack:///./src/components/Li.tsx","webpack:///./src/images/cloud2.png"],"names":["module","exports","ImageBase","withTheme","styled","fit","src","rest","Image","props","height","width","minHeight","role","StyledPaper","Paper","DimBox","Box","FakeWiseHeader","pb","display","alignItems","flexBasis","p","borderRadius","Grid","container","item","xs","sm","component","Typography","color","ml","whiteSpace","style","pointerEvents","variant","VisualizationFrame","children","poster","useTheme","flexDirection","boxSizing","BackgroundVideo","zIndex","SpacedSectionContainer","PageSection","theme","px","spacing","TitleGridBox","GridBox","BodyGridBox","contained","flip","tuckImage","fade","palette","background","default","ShadowBox","paper","StyledImage","roundTo","num","toPlaces","Math","round","pow","TuckingBox","imageColumns","breakpoints","up","ReverseTuckingBox","offset","Content","button","buttonProps","buttonText","direction","justify","title","mode","RequestDemoFormMode","ContactUs","Button","mb","md","mt","mr","VisualizationSection","animate","image","video","columnsForImage","columnsForText","EntranceAnimation","disabled","overflow","position","right","Section","imageTag","ImageContainerComponent","id","toLowerCase","replace","undefined","alignSelf","addSpacing","CloudSimAAS","t","useTranslation","srcCloudImg1","videoSrcWiseVis","srcCloudImg2","srcCloudImg3","srcCloudImg4","LiText","ListItemText","text","secondary","Li","ListItem"],"mappings":"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","file":"component---src-pages-product-cloud-tsx-e326a69ee2d4e5c0bde4.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/cloud3-a47824904df357ec3e563783df0798e2.png\";","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & { fit?: 'cover' | 'contain'; src?: HTMLImageElement['src'] };\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit, src, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: ${({ fit = 'cover' }) => fit};\n  background-position: center center;\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","module.exports = __webpack_public_path__ + \"static/cloud4-f1b597bce5bb128991401f2b8de9ee87.png\";","module.exports = __webpack_public_path__ + \"static/vis-borregas-9e78e30df0e056c705e5dcb9294089d6.mp4\";","module.exports = __webpack_public_path__ + \"static/cloud1-594fd86ee546a9070aa3641372ca7ae6.png\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport React from 'react';\n// import { LinkButton, LinkButtonProps } from 'src/components/Button';\nimport BackgroundVideo, { BackgroundVideoProps } from 'src/components/BackgroundVideo';\nimport styled from 'styled-components';\n\nconst StyledPaper = withTheme(styled(Paper)`\n  border-radius: 16px;\n`) as React.FC<PaperProps>;\n\nconst DimBox = withTheme(styled(Box)`\n  background-color: rgba(0, 0, 0, 0.2);\n\n  dt,\n  dd {\n    display: inline-block;\n  }\n  dt {\n    margin-right: 1ex;\n  }\n`) as React.FC<BoxProps>;\n\nconst FakeWiseHeader: React.FC<BoxProps> = props => (\n  <Box pb={2} display='flex' alignItems='center' {...props}>\n    <DimBox flexBasis='100%' p={2} borderRadius='borderRadius'>\n      <Grid container>\n        <Grid item xs={12} sm={6} component='dl'>\n          <Typography component='dt' color='textSecondary'>\n            Bridge:\n          </Typography>\n          <Typography component='dd'>ROS1</Typography>\n          <br />\n          <Typography component='dt' color='textSecondary'>\n            Sensors configuration:\n          </Typography>\n          <Typography component='dd'>My config</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} component='dl'>\n          <Typography component='dt' color='textSecondary'>\n            Asset bundle version:\n          </Typography>\n          <Typography component='dd'>A</Typography>\n          <br />\n          <Typography component='dt' color='textSecondary'>\n            Connection:\n          </Typography>\n          <Typography component='dd'>localhost:9090</Typography>\n        </Grid>\n      </Grid>\n    </DimBox>\n    <DimBox ml={2} p={1} borderRadius='borderRadius' whiteSpace='nowrap' style={{ pointerEvents: 'none' }}>\n      <Button style={{ width: '50%' }}>Analysis</Button>\n      <Button style={{ width: '50%' }} variant='contained' color='primary'>\n        Visualization\n      </Button>\n    </DimBox>\n  </Box>\n);\n\nexport type VisualizationFrameProps = PaperProps & Pick<BackgroundVideoProps, 'src' | 'poster'>;\n\nconst VisualizationFrame = ({ children, poster, src, ...rest }: VisualizationFrameProps) => {\n  const theme = useTheme();\n  // const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n  // const iconSize = isXs ? 42 : 80;\n  return (\n    <StyledPaper {...rest}>\n      <Box p={2} width={992} height={1} display='flex' flexDirection='column' boxSizing='border-box'>\n        <FakeWiseHeader />\n        <Box flexBasis='100%'>\n          <BackgroundVideo poster={poster} src={src} zIndex='auto'>\n            {children}\n          </BackgroundVideo>\n        </Box>\n      </Box>\n    </StyledPaper>\n  );\n};\n\nexport default VisualizationFrame;\nexport { VisualizationFrame };\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { fade, withTheme } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ReadMoreButton, RequestDemoButton } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { PageSection, PageSectionProps } from 'src/components/Page';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport BackgroundVideo from './BackgroundVideo';\nimport EntranceAnimation from './EntranceAnimation';\nimport { LinkProps } from './Link';\nimport VisualizationFrame, { VisualizationFrameProps } from 'src/components/VisualizationFrame';\nimport { RequestDemoFormMode } from 'src/@types/shared.d';\n\n// Top of section is offset 9 spacing units so any section hash-linking\n// will link at that document scroll position, which accounts for extra\n// space for the floating fixed app bar header.\nconst SpacedSectionContainer = withTheme(styled(PageSection)`\n  margin-top: ${({ theme }) => px(theme.spacing(-9))};\n  padding-top: ${({ theme }) => px(theme.spacing(9))};\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as React.FC<PageSectionProps<'section', { component: string }>>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  /** Adds a little faded background behind the text, but only if `tuckImage` is also true. */\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\ninterface ShadowBoxProps extends BoxProps {\n  flip?: boolean;\n}\nconst ShadowBox = withTheme(styled(({ flip, ...rest }: ShadowBoxProps) => <Box {...rest} />)`\n  -webkit-mask-image: -webkit-gradient(\n    linear,\n    ${({ flip }) => (flip ? 'left top, right top' : 'right top, left top')},\n    color-stop(0, ${({ theme }) => fade(theme.palette.background.paper, 1)}),\n    color-stop(0.85, ${({ theme }) => fade(theme.palette.background.paper, 1)}),\n    color-stop(0.9, ${({ theme }) => fade(theme.palette.background.paper, 0.7)}),\n    color-stop(0.95, ${({ theme }) => fade(theme.palette.background.paper, 0.3)}),\n    color-stop(1, ${({ theme }) => fade(theme.palette.background.paper, 0)})\n  );\n`) as React.FC<ShadowBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleOneColumn = 2 / 12;\n\nexport type ColumnsType = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nexport type TuckingBoxProps = BoxProps & {\n  imageColumns: ColumnsType;\n};\n\nconst TuckingBox = withTheme(styled(({ imageColumns, ...rest }) => <Box {...rest} />)`\n  ${({ imageColumns, theme }) => `\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${theme.breakpoints.up('md')} {\n    width: ${roundTo(doubleOneColumn * imageColumns * 100, 4)}%;\n  }\n`}\n`) as React.FC<TuckingBoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ imageColumns, theme }) => {\n    // Avoid the godforsaken prettier rule that takes out mandatory parenthesis\n    const offset = doubleOneColumn * imageColumns * -100;\n    return `\n      ${theme.breakpoints.up('md')} {\n        margin-inline-start: ${roundTo(offset + 100, 4)}%;\n      }\n    `;\n  }}\n`) as React.FC<TuckingBoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title?: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  imageColumns?: ColumnsType;\n  tuckImage?: boolean;\n  video?: React.VideoHTMLAttributes<HTMLVideoElement>['src'];\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'contactUs':\n      button = (\n        <RequestDemoButton mode={RequestDemoFormMode.ContactUs} color='secondary' variant='outlined' {...buttonProps} />\n      );\n      break;\n    case 'getDemo':\n      button = <RequestDemoButton {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ReadMoreButton {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      {title && (\n        <TitleGridBox item mb={{ xs: 2, md: 5 }}>\n          <Typography variant={variant}>{title}</Typography>\n        </TitleGridBox>\n      )}\n      <BodyGridBox item flip={flip} contained={contained} tuckImage={tuckImage}>\n        {typeof children === 'string' || typeof children === 'number' ? <Typography>{children}</Typography> : children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box ml={!flip && contained ? -2 : 0} mr={flip && contained ? -2 : 0}>\n            {button}\n          </Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  buttonProps,\n  children,\n  imageColumns,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video\n}: SectionProps) => {\n  // If an amount of imageColumns was not set, but it is a tuckImage, go ahead and set a default value.\n  if (!imageColumns) {\n    imageColumns = tuckImage ? 8 : 6;\n  }\n\n  let imageTag =\n    image ||\n    (video ? (\n      <BackgroundVideo src={video} poster={src} borderRadius='borderRadius' fit='cover' />\n    ) : (\n      <StyledImage src={src} />\n    ));\n\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent imageColumns={imageColumns}>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  let columnsForImage: GridBoxProps['md'] = imageColumns;\n  let columnsForText: GridBoxProps['md'] =\n    typeof columnsForImage === 'number' ? ((12 - columnsForImage) as GridBoxProps['md']) : columnsForImage;\n\n  if (tuckImage) {\n    columnsForImage = 6;\n    columnsForText = 6;\n  }\n\n  return (\n    <SpacedSectionContainer component='section' id={title ? title.toLowerCase().replace(/\\s+/g, '-') : undefined}>\n      <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'} alignItems='center'>\n        <Grid item xs={12} md={columnsForImage} style={{ alignSelf: 'stretch' }}>\n          {imageTag}\n        </Grid>\n        <Grid item xs={12} md={columnsForText}>\n          <Box position='relative'>\n            <Content\n              title={title}\n              buttonText={buttonText}\n              buttonProps={buttonProps}\n              minHeight={minHeight}\n              variant={variant}\n              contained={contained}\n              flip={flip}\n              tuckImage={tuckImage}\n            >\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </SpacedSectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SpacedSectionContainer component='section' maxWidth={false}>\n    {title ? (\n      <Box mb={{ xs: 2, md: 5 }}>\n        <Typography variant={variant}>{title}</Typography>\n      </Box>\n    ) : null}\n    <StyledImage src={src} />\n    {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n  </SpacedSectionContainer>\n);\n\nexport type VisualizationSectionProps = BoxProps & SectionProps & { animate?: boolean };\n\nconst VisualizationSection: React.FC<VisualizationSectionProps> = ({\n  animate,\n  buttonProps,\n  buttonText = 'contactUs',\n  children,\n  contained,\n  flip,\n  image,\n  imageColumns,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video,\n  ...rest\n}) => {\n  // If an amount of imageColumns was not set, but it is a tuckImage, go ahead and set a default value.\n  if (!imageColumns) {\n    imageColumns = tuckImage ? 8 : 6;\n  }\n\n  let columnsForImage: GridBoxProps['md'] = imageColumns;\n  let columnsForText: GridBoxProps['md'] =\n    typeof columnsForImage === 'number' ? ((12 - columnsForImage) as GridBoxProps['md']) : columnsForImage;\n\n  if (tuckImage) {\n    columnsForImage = 6;\n    columnsForText = 6;\n  }\n\n  return (\n    <Box {...rest}>\n      <EntranceAnimation disabled={!animate}>\n        <Grid container spacing={2} alignItems='center' direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={columnsForImage} style={{ overflow: 'hidden', height: 570 }}>\n            <ShadowBox position='relative' height={1} overflow='hidden' flip={flip}>\n              <VisualizationFrame\n                poster={src}\n                src={video}\n                style={{ position: 'absolute', right: flip ? 'auto' : 0, height: '100%' }}\n              />\n            </ShadowBox>\n          </Grid>\n          <Grid item xs={12} md={columnsForText}>\n            {/* <Typography variant='h4'>{title}</Typography>\n          {children}\n          <RequestDemoButton mode={RequestDemoFormMode.ContactUs} /> */}\n            <EntranceAnimation disabled={!animate}>\n              <Content\n                title={title}\n                buttonText={buttonText}\n                buttonProps={buttonProps}\n                minHeight={minHeight}\n                variant={variant}\n                contained={contained}\n                flip={flip}\n              >\n                {children}\n              </Content>\n            </EntranceAnimation>\n          </Grid>\n        </Grid>\n      </EntranceAnimation>\n    </Box>\n  );\n};\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection, VisualizationSection };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","import React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport Li, { LiText } from 'src/components/Li';\nimport Page from 'src/components/Page';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudImg1 from 'src/images/cloud1.png';\nimport srcCloudImg2 from 'src/images/cloud2.png';\nimport srcCloudImg3 from 'src/images/cloud3.png';\nimport srcCloudImg4 from 'src/images/cloud4.png';\nimport videoSrcWiseVis from 'src/videos/vis-borregas.mp4';\n\nconst ListItemWrapper: MapFunction = (str, i) => (\n  <Li key={`${str}${i}`}>\n    <LiText>{str}</LiText>\n  </Li>\n);\n\nexport default function CloudSimAAS() {\n  const { t } = useTranslation();\n  return (\n    <Page title={t('cloud.title')}>\n      <Section\n        buttonText='getDemo'\n        contained\n        src={srcCloudImg1}\n        title={t('cloud.title')}\n        tuckImage\n        variant='h3'\n        video={videoSrcWiseVis}\n      >\n        {t('cloud.body')}\n      </Section>\n\n      <Section title={t('cloud.section1.title')} flip src={srcCloudImg2}>\n        {t('cloud.section1.body')}\n      </Section>\n\n      <Section title={t('cloud.section2.title')} src={srcCloudImg3}>\n        {t('cloud.section2.body')}\n      </Section>\n\n      <Section title={t('cloud.section3.title')} flip src={srcCloudImg4}>\n        {t('cloud.section3.body')}\n      </Section>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText, { ListItemTextProps } from '@material-ui/core/ListItemText';\nimport { withTheme } from '@material-ui/core/styles';\nimport styled from 'styled-components';\n\nexport type LiProps = ListItemProps;\nexport type LiTextProps = ListItemTextProps;\n\nconst LiText = withTheme(styled(ListItemText)`\n  .MuiTypography-displayBlock {\n    display: inline-block;\n\n    &::before {\n      content: '–';\n      display: inline-block;\n      color: ${({ theme }) => theme.palette.text.secondary};\n      // color: ${({ theme }) => theme.palette.secondary.dark};\n      text-indent: -1.6ex; // Position the - just inside the Mui-LI's padding\n\n      ol & {\n        content: counter(list-item-counter) '.\\x0000a0 '; // Inject a \"hard\" space, since trailing spaces get trimmed.\n        text-align: right;\n        text-indent: -8ex;\n      }\n    }\n  }\n`) as React.FC<LiTextProps>;\n\nconst Li = withTheme(styled(ListItem)`\n  padding-top: initial;\n  padding-bottom: initial;\n  counter-increment: list-item-counter;\n\n  .MuiListItemText-root {\n    margin-top: initial;\n    margin-bottom: initial;\n  }\n`) as React.FC<LiProps>;\n\nexport default Li;\nexport { Li, LiText };\n","module.exports = __webpack_public_path__ + \"static/cloud2-bda050ed42af57dbf25289ceb0a36d4d.png\";"],"sourceRoot":""}