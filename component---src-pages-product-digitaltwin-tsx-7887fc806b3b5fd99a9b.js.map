{"version":3,"sources":["webpack:///./src/images/digital-twin-full-environment.jpg","webpack:///./src/pages/product/digitaltwin.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/utils/addSpacing.ts","webpack:///./src/components/Section.tsx","webpack:///./src/images/digital-twin-lite-environment.jpg","webpack:///./src/images/digital-twin.jpg"],"names":["module","exports","TypoWrapper","str","i","paragraph","key","DigitalTwin","useTranslation","t","tMap","title","variant","buttonText","src","srcDigitalTwinPoster","tuckImage","container","spacing","item","xs","md","srcDigitalTwinFull","srcDigitalTwinLite","StyledButton","withTheme","styled","MuiButton","Button","React","forwardRef","props","ref","ButtonGetDemo","color","ButtonReadMore","buttonVariant","GridBox","Comp","muiStyled","addSpacing","Grid","SectionContainer","Container","theme","px","StyledPaper","Paper","Image","rest","Box","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","children","direction","Typography","my","FullWidthSection","component","disableGutters","elevation","mb","Children","toArray","filter","c","Boolean","length","countChildren","mt","Section","flip","image","imageTag","ImageContainerComponent","position"],"mappings":"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","file":"component---src-pages-product-digitaltwin-tsx-7887fc806b3b5fd99a9b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/digital-twin-full-environment-111153efacfce6debe7581342a733b97.jpg\";","import Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport Page from 'src/components/Page';\nimport Section, { FullWidthSection } from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcDigitalTwinFull from 'src/images/digital-twin-full-environment.jpg';\nimport srcDigitalTwinLite from 'src/images/digital-twin-lite-environment.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function DigitalTwin() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('digitaltwin.title')}>\n      <Section title={t('digitaltwin.title')} variant='h2' buttonText='getDemo' src={srcDigitalTwinPoster} tuckImage>\n        {tMap('digitaltwin.body', TypoWrapper)}\n      </Section>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <FullWidthSection title={t('digitaltwin.section1.title')} src={srcDigitalTwinFull}>\n            {tMap('digitaltwin.section1.body', TypoWrapper)}\n          </FullWidthSection>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <FullWidthSection title={t('digitaltwin.section2.title')} src={srcDigitalTwinLite}>\n            {tMap('digitaltwin.section2.body', TypoWrapper)}\n          </FullWidthSection>\n        </Grid>\n      </Grid>\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport Link from './Link';\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button: React.ForwardRefExoticComponent<ButtonProps> = React.forwardRef((props, ref) => (\n  <StyledButton variant='outlined' {...props} ref={ref} />\n));\n\nconst ButtonGetDemo: typeof Button = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore: typeof LinkButton = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <LinkButton buttonVariant='outlined' {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </LinkButton>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import Grid from '@material-ui/core/Grid';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\n\nexport default GridBox;\nexport { GridBox };\n","import { styled as muiStyled } from '@material-ui/core/styles';\nimport { spacing, SpacingProps } from '@material-ui/system';\n\ntype SpacedComponent<T> = React.FC<\n  T &\n    SpacingProps & {\n      component?: React.ComponentType | keyof JSX.IntrinsicElements;\n    }\n>;\n\n// Add the `spacing` props to the component\nconst addSpacing = <T>(Comp: React.FC<T>) => muiStyled(Comp)(spacing) as SpacedComponent<T>;\n\nexport default addSpacing;\nexport { addSpacing };\n","import { ButtonProps, withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonGetDemo, ButtonReadMore } from 'src/components/Button';\nimport GridBox from 'src/components/GridBox';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { LinkProps } from './Link';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst Image = withTheme(styled(({ src, ...rest }) => <Box {...rest} />)`\n  height: 100%;\n  width: 100%;\n  min-height: 300px;\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 8px;\n`);\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`);\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`);\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n  direction?: GridProps['direction'];\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  tuckImage?: boolean;\n}\n\nconst Content = ({ buttonProps, buttonText, children, title, variant = 'h5' }: ContentProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <Grid container direction='column'>\n      <GridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </GridBox>\n      <GridBox item my={{ xs: 2, md: 5 }}>\n        {children}\n      </GridBox>\n      {buttonText && <GridBox item>{button}</GridBox>}\n    </Grid>\n  );\n};\n\nconst Section = ({ buttonText, children, flip, image, src, title, tuckImage, variant }: SectionProps) => {\n  let imageTag = image || <Image src={src} />;\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n  return (\n    <SectionContainer component='section' disableGutters>\n      <StyledPaper elevation={0}>\n        <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={6}>\n            {imageTag}\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box position='relative'>\n              <Content title={title} buttonText={buttonText} variant={variant}>\n                {children}\n              </Content>\n            </Box>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </SectionContainer>\n  );\n};\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SectionContainer component='section' disableGutters>\n    <StyledPaper elevation={0}>\n      <Box>\n        {title ? (\n          <Box mb={{ xs: 2, md: 5 }}>\n            <Typography variant={variant}>{title}</Typography>\n          </Box>\n        ) : null}\n        <Image src={src} />\n        {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n      </Box>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","module.exports = __webpack_public_path__ + \"static/digital-twin-lite-environment-30a281d97996f210a5e9e4d56a118a34.jpg\";","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}