{"version":3,"sources":["webpack:///./src/videos/Placeholder2.mp4","webpack:///./src/components/LayoutGrid.tsx","webpack:///./src/components/MoreArrows.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/videos/Placeholder1.mp4","webpack:///./src/components/Button.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/videos/Hero.mp4"],"names":["module","exports","StyledBox","withTheme","styled","xs","sm","md","lg","xl","spacing","rest","theme","px","breakpoints","up","LayoutGrid","props","ArrowsContainer","Box","Arrow","Arrows","Center","Container","Image","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingImage","ReverseTuckingImage","SmallImage","down","HeroBox","HeroGrid","Grid","TypoWrapper","str","Typography","brandIconProps","color","height","width","Home","useTranslation","t","tMap","Page","mb","position","BackgroundVideo","src","videoSrcHero","style","container","direction","alignItems","justify","item","variant","disableGutters","mt","Button","p","textAlign","MoreArrows","my","videoSrcPlaceholder1","Section","title","buttonText","videoSrcPlaceholder2","buttonProps","to","SubscribeBox","StyledButton","MuiButton","React","forwardRef","ref","ButtonGetDemo","ButtonReadMore","buttonVariant","SectionContainer","StyledPaper","Paper","Content","button","children","flip","tuckImage","component","elevation"],"mappings":"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","file":"component---src-pages-index-tsx-8d570dc80d3820f6bd1f.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/Placeholder2-540f40301efe4358902edea758f8db57.mp4\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { GridProps } from '@material-ui/core/Grid';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { px } from 'src/utils/theme';\n\ninterface LayoutGridProps {\n  xs?: GridProps['xs'];\n  sm?: GridProps['sm'];\n  md?: GridProps['md'];\n  lg?: GridProps['lg'];\n  xl?: GridProps['xl'];\n  spacing?: GridProps['spacing'];\n}\n\nconst JustBox = ({ xs, sm, md, lg, xl, spacing, ...rest }: LayoutGridProps) => <Box {...rest} />;\n\nconst StyledBox = withTheme(styled(JustBox)`\n  ${({ theme, xs, sm, md, lg, xl, spacing }) => `\n  display: grid;\n  grid-gap: ${px(theme.spacing(spacing))};\n  // grid-template-columns: repeat(4, 1fr);\n\n  ${xs && theme.breakpoints.up('xs')} {\n    grid-template-columns: repeat(${xs}, 1fr);\n  }\n  ${sm && theme.breakpoints.up('sm')} {\n    grid-template-columns: repeat(${sm}, 1fr);\n  }\n  ${md && theme.breakpoints.up('md')} {\n    grid-template-columns: repeat(${md}, 1fr);\n  }\n  ${lg && theme.breakpoints.up('lg')} {\n    grid-template-columns: repeat(${lg}, 1fr);\n  }\n  ${xl && theme.breakpoints.up('xl')} {\n    grid-template-columns: repeat(${xs}, 1fr);\n  }\n`}\n`);\n\nconst LayoutGrid: React.FC<BoxProps & LayoutGridProps> = props => <StyledBox {...props} />;\n\nexport default LayoutGrid;\nexport { LayoutGrid };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst ArrowsContainer = withTheme(styled(Box)`\n  width: 40px;\n  height: 80px;\n  display: inline-block;\n`);\n\nconst Arrow = withTheme(styled(Box)`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-bottom: 2px solid white;\n  border-right: 2px solid white;\n  transform: translate(20px, -10px) rotate(45deg);\n  margin: -10px;\n  animation: animate 2s infinite;\n  will-change: transform, opacity;\n\n  &:nth-child(2) {\n    animation-delay: -0.2s;\n  }\n\n  &:nth-child(3) {\n    animation-delay: -0.4s;\n  }\n\n  @keyframes animate {\n    0% {\n      opacity: 0;\n      transform: translate(20px, -10px) rotate(45deg) translate(0, 0);\n    }\n    50% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n      transform: translate(20px, -10px) rotate(45deg) translate(30px, 30px);\n    }\n  }\n`);\n\nconst Arrows = () => (\n  <ArrowsContainer>\n    <Arrow />\n    <Arrow />\n    <Arrow />\n  </ArrowsContainer>\n);\n\nexport default Arrows;\nexport { Arrows };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport BackgroundVideo from 'src/components/BackgroundVideo';\nimport { ButtonGetDemo } from 'src/components/Button';\nimport { IconApollo, IconBaidu, IconUnity, IconVelodyne } from 'src/components/Icons';\nimport LayoutGrid from 'src/components/LayoutGrid';\nimport MoreArrows from 'src/components/MoreArrows';\nimport Page from 'src/components/Page';\nimport { SectionContent } from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport videoSrcHero from '../videos/Hero.mp4';\nimport videoSrcPlaceholder1 from '../videos/Placeholder1.mp4';\nimport videoSrcPlaceholder2 from '../videos/Placeholder2.mp4';\n\nconst Center = withTheme(styled(Container)`\n  text-align: center;\n  max-width: ${({ theme }) => px(theme.spacing(90))};\n`);\n\nconst Image = withTheme(styled(Box)`\n  width: 100%;\n`);\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingImage = withTheme(styled(Image)`\n  min-height: 300px;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('sm')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`);\n\nconst ReverseTuckingImage = withTheme(styled(TuckingImage)`\n  ${({ theme }) => theme.breakpoints.up('sm')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`);\n\nconst SmallImage = withTheme(styled(Image)`\n  height: 456px;\n\n  ${({ theme }) => `\n    ${theme.breakpoints.down('sm')} {\n      height: 300px;\n    }\n    ${theme.breakpoints.down('xs')} {\n      height: 200px;\n    }\n  `}\n`);\n\nconst HeroBox = withTheme(styled(Box)``);\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n  position: relative;\n`);\n\nconst TypoWrapper = (str: string) => <Typography>{str}</Typography>;\n\nconst brandIconProps = { color: '#6D7B97', height: 40, width: '100%' };\n\nexport default function Home() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page>\n      <HeroBox mb={15} height='70vh' position='relative'>\n        <BackgroundVideo src={videoSrcHero} position='absolute' style={{ position: 'absolute' }} />\n        <HeroGrid container direction='column' alignItems='center' justify='center'>\n          <Grid item>\n            <Typography variant='h1'>{t('home.title')}</Typography>\n          </Grid>\n          <Grid item>\n            <Center disableGutters>\n              {tMap('home.body', TypoWrapper)}\n              <Box mt={6}>\n                <ButtonGetDemo />\n              </Box>\n            </Center>\n          </Grid>\n        </HeroGrid>\n        <Box p={2} textAlign='center'>\n          <MoreArrows />\n        </Box>\n      </HeroBox>\n\n      <Box my={15}>\n        <Grid container>\n          <Grid item xs={12} sm={6}>\n            <TuckingImage>\n              <BackgroundVideo src={videoSrcPlaceholder1} />\n            </TuckingImage>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <SectionContent title={t('home.section1.title')} buttonText='getDemo'>\n              {tMap('home.section1.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box my={15}>\n        <Grid container direction='row-reverse'>\n          <Grid item xs={12} sm={6}>\n            <ReverseTuckingImage>\n              <BackgroundVideo src={videoSrcPlaceholder2} />\n            </ReverseTuckingImage>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <SectionContent title={t('home.section2.title')} buttonText='getDemo'>\n              {tMap('home.section2.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box my={15}>\n        <Center disableGutters>\n          <LayoutGrid xs={2} sm={4} spacing={2}>\n            <IconBaidu {...brandIconProps} />\n            <IconApollo {...brandIconProps} />\n            <IconUnity {...brandIconProps} />\n            <IconVelodyne {...brandIconProps} />\n          </LayoutGrid>\n        </Center>\n      </Box>\n\n      <Box my={15}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent\n              title={t('home.features.0.title')}\n              buttonText='readMore'\n              buttonProps={{ to: '/product/simulation/' }}\n            >\n              {tMap('home.features.0.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent\n              title={t('home.features.1.title')}\n              buttonText='readMore'\n              buttonProps={{ to: '/product/cloud/' }}\n            >\n              {tMap('home.features.1.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent\n              title={t('home.features.2.title')}\n              buttonText='readMore'\n              buttonProps={{ to: '/product/digitaltwin/' }}\n            >\n              {tMap('home.features.2.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/Placeholder1-ff812648a3da601af0c9cd069ea5eef8.mp4\";","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport Link from './Link';\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button: React.ExoticComponent<ButtonProps> = React.forwardRef((props, ref) => (\n  <StyledButton variant='outlined' {...props} ref={ref} />\n));\n\nconst ButtonGetDemo: typeof Button = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore: typeof LinkButton = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <LinkButton buttonVariant='outlined' {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </LinkButton>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import { ButtonProps, withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonGetDemo, ButtonReadMore } from 'src/components/Button';\nimport GridBox from 'src/components/GridBox';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { LinkProps } from './Link';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst Image = withTheme(styled(Box)`\n  height: 100%;\n  width: 100%;\n  min-height: 300px;\n  background-image: linear-gradient(-205deg, #e83d95, #862155 30%, black);\n  border-radius: 8px;\n`);\n\ntype ContentProps = {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n  children: React.ReactNode;\n  direction?: GridProps['direction'];\n  title: string;\n  variant?: TypographyProps['variant'];\n};\nconst Content = ({ buttonProps, buttonText, children, title, variant = 'h5' }: ContentProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <Grid container direction='column'>\n      <GridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </GridBox>\n      <GridBox item my={5}>\n        {children}\n      </GridBox>\n      {buttonText && <GridBox item>{button}</GridBox>}\n    </Grid>\n  );\n};\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\nconst Section = ({ buttonText, children, flip, title, tuckImage, variant }: SectionProps) => (\n  <SectionContainer component='section'>\n    <StyledPaper elevation={0}>\n      <Grid container spacing={2} direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={6}>\n          <Image />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box px={2}>\n            <Content title={title} buttonText={buttonText} variant={variant}>\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent };\n","module.exports = __webpack_public_path__ + \"static/Hero-861ea2e104a649286f705560432326ce.mp4\";"],"sourceRoot":""}