{"version":3,"sources":["webpack:///./src/components/Image.tsx","webpack:///./src/images/simulation-platform.jpg","webpack:///./src/components/PagePreviewBox.tsx","webpack:///./src/images/cloud-simulation.jpg","webpack:///./src/components/Button.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/utils/addSpacing.ts","webpack:///./src/components/Section.tsx","webpack:///./src/pages/product/cloud.tsx","webpack:///./src/components/Li.tsx","webpack:///./src/images/digital-twin.jpg"],"names":["Image","withTheme","styled","src","rest","module","exports","StyledPagePreviewBox","PagePreviewBox","title","link","buttonText","mt","xs","md","p","alignItems","wrap","display","flexDirection","mb","to","CloudPreviewBox","t","useTranslation","srcCloudPoster","DigitalTwinPreviewBox","srcDigitalTwinPoster","SimulationPreviewBox","srcSimulationPoster","StyledButton","MuiButton","Button","React","forwardRef","props","ref","variant","ButtonGetDemo","color","ButtonReadMore","buttonVariant","GridBox","Comp","muiStyled","compose","spacing","sizing","addSpacing","Grid","SectionContainer","Container","theme","px","StyledPaper","Paper","TitleGridBox","BodyGridBox","StyledImage","minHeight","borderRadius","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","Box","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","children","direction","justify","container","item","Typography","FullWidthSection","component","disableGutters","elevation","Children","toArray","filter","c","Boolean","length","countChildren","Section","flip","image","tuckImage","imageTag","ImageContainerComponent","position","ListItemWrapper","str","i","key","CloudSimAAS","tMap","sm","Li","ListItemText"],"mappings":"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","file":"component---src-pages-product-cloud-tsx-76272f3cf322e4726a4b.js","sourcesContent":["import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport interface ImageProps extends BoxProps {\n  src?: HTMLImageElement['src'];\n}\n\nconst Image = withTheme(styled(({ src, ...rest }) => <Box {...rest} />)`\n  // height: 100%;\n  width: 100%;\n  min-height: 100px; // Arbitrarily assigned this to a non-zero value, so it's never invisible.\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n`) as React.FC<ImageProps>;\n\nexport default Image;\nexport { Image };\n","module.exports = __webpack_public_path__ + \"static/simulation-platform-37a96777ce2c1bf70b36ca13b1c9c458.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { withTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { ButtonReadMore } from 'src/components/Button';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\n\nconst StyledPagePreviewBox = withTheme(styled(({ src, ...rest }) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n`);\n\nconst PagePreviewBox = ({\n  title,\n  buttonText,\n  link,\n  ...rest\n}: BoxProps & { buttonText?: string; link: string; src: string }) => (\n  <StyledPagePreviewBox\n    mt={{ xs: 8, md: 16 }}\n    p={4}\n    alignItems='center'\n    wrap='nowrap'\n    display='flex'\n    flexDirection='column'\n    {...rest}\n  >\n    <Box mb={3}>\n      <Typography>{title}</Typography>\n    </Box>\n    <Box>\n      <ButtonReadMore to={link} />\n    </Box>\n  </StyledPagePreviewBox>\n);\n\nconst CloudPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('cloud.title')} link='/product/cloud' src={srcCloudPoster} />;\n};\n\nconst DigitalTwinPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('digitaltwin.title')} link='/product/digitaltwin' src={srcDigitalTwinPoster} />;\n};\n\nconst SimulationPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('simulation.title')} link='/product/simulation' src={srcSimulationPoster} />;\n};\n\nexport default PagePreviewBox;\nexport { PagePreviewBox, CloudPreviewBox, SimulationPreviewBox, DigitalTwinPreviewBox };\n","module.exports = __webpack_public_path__ + \"static/cloud-simulation-b834b11be46add0489efb4c057935af7.jpg\";","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport Link from './Link';\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button: React.ForwardRefExoticComponent<ButtonProps> = React.forwardRef((props, ref) => (\n  <StyledButton variant='outlined' {...props} ref={ref} />\n));\n\nconst ButtonGetDemo: typeof Button = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore: typeof LinkButton = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <LinkButton buttonVariant='outlined' {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </LinkButton>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","import { styled as muiStyled } from '@material-ui/core/styles';\nimport { compose, spacing, SpacingProps, sizing, SizingProps } from '@material-ui/system';\n\ntype SpacedProps<T = {}> = T &\n  SpacingProps &\n  SizingProps & {\n    component?: React.ComponentType | React.ReactHTMLElement<HTMLElement>;\n  };\n\ntype SpacedComponent<T> = React.FC<SpacedProps<T>>;\n\n// Add the `spacing` and `sizing` props to the component\nconst addSpacing = <T>(Comp: SpacedComponent<T>) => muiStyled(Comp)(compose(spacing, sizing));\n\nexport default addSpacing;\nexport { addSpacing };\nexport type { SpacedComponent, SpacedProps };\n","import { ButtonProps, withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonGetDemo, ButtonReadMore } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { LinkProps } from './Link';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`);\n\nconst BodyGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`) as typeof GridBox;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`) as typeof Box;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`) as typeof TuckingBox;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  tuckImage?: boolean;\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  direction = 'column',\n  justify = 'center',\n  title,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      <TitleGridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </TitleGridBox>\n      <BodyGridBox item mt={{ xs: 2, md: 5 }}>\n        {children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          {button}\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({ buttonText, children, flip, minHeight, image, src, title, tuckImage, variant }: SectionProps) => {\n  let imageTag = image || <StyledImage src={src} />;\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  return (\n    <SectionContainer component='section' disableGutters>\n      <StyledPaper elevation={0}>\n        <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={6}>\n            {imageTag}\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box position='relative'>\n              <Content title={title} buttonText={buttonText} minHeight={minHeight} variant={variant}>\n                {children}\n              </Content>\n            </Box>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </SectionContainer>\n  );\n};\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SectionContainer component='section' disableGutters>\n    <StyledPaper elevation={0}>\n      <Box>\n        {title ? (\n          <Box mb={{ xs: 2, md: 5 }}>\n            <Typography variant={variant}>{title}</Typography>\n          </Box>\n        ) : null}\n        <StyledImage src={src} />\n        {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n      </Box>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","import Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport Li from 'src/components/Li';\nimport Page from 'src/components/Page';\nimport { SimulationPreviewBox, DigitalTwinPreviewBox } from 'src/components/PagePreviewBox';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\n\nconst ListItemWrapper: MapFunction = (str, i) => (\n  <ListItem key={`${str}${i}`}>\n    <Li>{str}</Li>\n  </ListItem>\n);\n\nexport default function CloudSimAAS() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('cloud.title')}>\n      <Section buttonText='getDemo' flip src={srcCloudPoster} title={t('cloud.title')} tuckImage variant='h3'>\n        <List>{tMap('cloud.body', ListItemWrapper)}</List>\n      </Section>\n\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <SimulationPreviewBox />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <DigitalTwinPreviewBox />\n        </Grid>\n      </Grid>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import ListItemText, { ListItemTextProps } from '@material-ui/core/ListItemText';\nimport { withTheme } from '@material-ui/core/styles';\nimport styled from 'styled-components';\n\nconst Li = withTheme(styled(ListItemText)`\n  .MuiTypography-displayBlock {\n    display: inline-block;\n    text-indent: -1em;\n\n    &::before {\n      content: '–';\n      display: inline-block;\n      width: 1em;\n      text-indent: 0.2em;\n    }\n  }\n`);\n\nexport default Li;\nexport { Li };\n","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}