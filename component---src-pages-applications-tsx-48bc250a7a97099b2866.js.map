{"version":3,"sources":["webpack:///./src/components/Button.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/pages/applications.tsx"],"names":["StyledButton","withTheme","styled","MuiButton","Button","React","forwardRef","props","ref","variant","ButtonGetDemo","t","useTranslation","color","ButtonReadMore","SectionContainer","Container","theme","px","spacing","StyledPaper","Paper","Image","Box","Content","button","buttonText","children","title","container","direction","item","Section","flip","component","elevation","xs","md","p","TypoWrapper","str","Applications","tMap"],"mappings":"oPAMMA,EAAeC,YAAUC,YAAOC,KAAR,uEAACD,CAAD,OAExBE,EAASC,IAAMC,YAAW,SAACC,EAAoBC,GAArB,OAA6B,cAACR,EAAD,eAAcS,QAAQ,YAAeF,EAArC,CAA4CC,IAAKA,QAExGE,EAAgBL,IAAMC,YAAW,SAACC,EAAoBC,GAAQ,IAC1DG,EAAMC,cAAND,EACR,OACE,cAACP,EAAD,eAAQS,MAAM,UAAUJ,QAAQ,aAAgBF,EAAhD,CAAuDC,IAAKA,EAA5D,SACGG,EAAE,8BAKHG,EAAiBT,IAAMC,YAAW,SAACC,EAAoBC,GAAQ,IAC3DG,EAAMC,cAAND,EACR,OACE,cAACP,EAAD,iBAAYG,EAAZ,CAAmBC,IAAKA,EAAxB,SACGG,EAAE,+BAKMP,O,4MCjBTW,EAAmBd,YAAUC,YAAOc,KAAR,gFAACd,CAAD,sDACf,gBAAGe,EAAH,EAAGA,MAAH,OAAeC,YAAGD,EAAME,QAAQ,QAM7CC,EAAcnB,YAAUC,YAAOmB,KAAR,2EAACnB,CAAD,OAEvBoB,EAAQrB,YAAUC,YAAOqB,KAAR,qEAACrB,CAAD,mHAcjBsB,EAAU,SAAC,GAAkE,IAC7EC,EADaC,EAAgE,EAAhEA,WAAYC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,MAA0C,IAAnCnB,eAAmC,MAAzB,KAAyB,EAEjF,OAAQiB,GACN,IAAK,UACHD,EAAS,cAAC,IAAD,IACT,MACF,IAAK,WACHA,EAAS,cAAC,IAAD,IACT,MACF,QACEA,EAAS,cAAC,IAAD,UAASC,IAEtB,OACE,eAAC,IAAD,CAAMG,WAAS,EAACC,UAAU,SAASX,QAAS,EAA5C,UACE,cAAC,IAAD,CAAMY,MAAI,EAAV,SACE,cAAC,IAAD,CAAYtB,QAASA,EAArB,SAA+BmB,MAEjC,cAAC,IAAD,CAAMG,MAAI,EAAV,SAAYJ,IACXD,GAAc,cAAC,IAAD,CAAMK,MAAI,EAAV,SAAYN,QA4BlBO,IAnBC,SAAC,GAAD,IAAGN,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUM,EAAzB,EAAyBA,KAAML,EAA/B,EAA+BA,MAAOnB,EAAtC,EAAsCA,QAAtC,OACd,cAACM,EAAD,CAAkBmB,UAAU,UAA5B,SACE,cAACd,EAAD,CAAae,UAAW,EAAxB,SACE,eAAC,IAAD,CAAMN,WAAS,EAACV,QAAS,EAAGW,UAAWG,EAAO,cAAgB,MAA9D,UACE,cAAC,IAAD,CAAMF,MAAI,EAACK,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACf,EAAD,MAEF,cAAC,IAAD,CAAMS,MAAI,EAACK,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CAAKC,EAAG,EAAR,SACE,cAACd,EAAD,CAASI,MAAOA,EAAOF,WAAYA,EAAYjB,QAASA,EAAxD,SACGkB,iB,6JChETY,EAAc,SAACC,GAAD,OAAiB,cAAC,IAAD,UAAaA,KAEnC,SAASC,IAAe,MACjB7B,cAAZD,EAD6B,EAC7BA,EAAG+B,EAD0B,EAC1BA,KAEX,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASd,MAAOjB,EAAE,sBAAuBF,QAAQ,KAAKiB,WAAW,UAAjE,SACGgB,EAAK,oBAAqBH,KAG7B,cAAC,IAAD,CAASN,MAAI,EAACL,MAAOjB,EAAE,+BAAvB,SACG+B,EAAK,6BAA8BH,KAGtC,cAAC,IAAD,CAASX,MAAOjB,EAAE,+BAAlB,SAAmD+B,EAAK,6BAA8BH,KAEtF,cAAC,IAAD,CAASN,MAAI,EAACL,MAAOjB,EAAE,+BAAvB,SACG+B,EAAK,6BAA8BH","file":"component---src-pages-applications-tsx-48bc250a7a97099b2866.js","sourcesContent":["import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button = React.forwardRef((props: ButtonProps, ref) => <StyledButton variant='outlined' {...props} ref={ref} />);\n\nconst ButtonGetDemo = React.forwardRef((props: ButtonProps, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore = React.forwardRef((props: ButtonProps, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </Button>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport { px } from 'src/utils/theme';\nimport Button, { ButtonReadMore, ButtonGetDemo } from 'src/components/Button';\nimport styled from 'styled-components';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst Image = withTheme(styled(Box)`\n  height: 100%;\n  width: 100%;\n  background-image: linear-gradient(-205deg, white, #9c27b0 30%, black);\n  border-radius: 20px;\n`);\n\ntype ContentProps = {\n  buttonText?: string;\n  children: React.ReactNode;\n  direction?: GridProps['direction'];\n  title: string;\n  variant?: TypographyProps['variant'];\n};\nconst Content = ({ buttonText, children, title, variant = 'h5' }: ContentProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore />;\n      break;\n    default:\n      button = <Button>{buttonText}</Button>;\n  }\n  return (\n    <Grid container direction='column' spacing={5}>\n      <Grid item>\n        <Typography variant={variant}>{title}</Typography>\n      </Grid>\n      <Grid item>{children}</Grid>\n      {buttonText && <Grid item>{button}</Grid>}\n    </Grid>\n  );\n};\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n}\n\nconst Section = ({ buttonText, children, flip, title, variant }: SectionProps) => (\n  <SectionContainer component='section'>\n    <StyledPaper elevation={3}>\n      <Grid container spacing={2} direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={6}>\n          <Image />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box p={2}>\n            <Content title={title} buttonText={buttonText} variant={variant}>\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent };\n","import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Page from 'src/components/Page';\nimport Section from 'src/components/Section';\nimport { useTranslation } from 'src/hooks/useTranslations';\n\nconst TypoWrapper = (str: string) => <Typography>{str}</Typography>;\n\nexport default function Applications() {\n  const { t, tMap } = useTranslation();\n\n  return (\n    <Page>\n      <Section title={t('applications.title')} variant='h2' buttonText='getDemo'>\n        {tMap('applications.body', TypoWrapper)}\n      </Section>\n\n      <Section flip title={t('applications.section1.title')}>\n        {tMap('applications.section1.body', TypoWrapper)}\n      </Section>\n\n      <Section title={t('applications.section2.title')}>{tMap('applications.section2.body', TypoWrapper)}</Section>\n\n      <Section flip title={t('applications.section3.title')}>\n        {tMap('applications.section3.body', TypoWrapper)}\n      </Section>\n    </Page>\n  );\n}\n"],"sourceRoot":""}