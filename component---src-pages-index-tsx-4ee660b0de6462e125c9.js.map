{"version":3,"sources":["webpack:///./src/videos/lidar.mp4","webpack:///./src/components/Image.tsx","webpack:///./src/components/LayoutGrid.tsx","webpack:///./src/images/simulation-platform.jpg","webpack:///./src/components/MoreArrows.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Center.tsx","webpack:///./src/videos/vis-borregas.mp4","webpack:///./src/videos/digital-twin.mp4","webpack:///./src/images/cloud-simulation.jpg","webpack:///./src/components/VisualizationFrame.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/videos/vis-1.mp4","webpack:///./src/images/digital-twin.jpg"],"names":["module","exports","ImageBase","withTheme","styled","fit","src","rest","Image","props","height","width","minHeight","role","StyledBox","xs","sm","md","lg","xl","spacing","dense","theme","px","breakpoints","up","LayoutGrid","ArrowsContainer","div","ARROW_SIZE","ARROW_TRAVEL_DISTANCE","Arrow","Arrows","SmallVideo","BackgroundVideo","mb","borderRadius","HeroGrid","Grid","SilhouettedContent","Box","brandIconProps","Home","useTranslation","t","tMap","useTheme","isXs","useMediaQuery","Page","animate","maxHeight","position","videoSrcHero","style","Typography","container","direction","alignItems","justify","item","EntranceAnimation","variant","Center","disableGutters","maxWidth","mt","color","buttonVariant","to","target","p","textAlign","MoreArrows","my","title","video","videoSrcWiseVis","flip","poster","srcSimulationPoster","videoSrcLidar","Section","order","delay","srcCloudPoster","srcDigitalTwinPoster","srcDigitalTwinVideo","SubscribeBox","addSpacing","Container","StyledPaper","Paper","DimBox","FakeWiseHeader","pb","display","flexBasis","component","ml","whiteSpace","pointerEvents","VisualizationFrame","children","flexDirection","boxSizing","zIndex","SpacedSectionContainer","PageSection","TitleGridBox","GridBox","BodyGridBox","contained","tuckImage","fade","palette","background","default","StyledImage","roundTo","num","toPlaces","Math","round","pow","TuckingBox","imageColumns","ReverseTuckingBox","offset","Content","button","buttonProps","buttonText","mode","RequestDemoFormMode","ContactUs","Button","mr","VisualizationSection","image","columnsForImage","columnsForText","disabled","overflow","right","imageTag","ImageContainerComponent","id","toLowerCase","replace","undefined","alignSelf"],"mappings":"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","file":"component---src-pages-index-tsx-4ee660b0de6462e125c9.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/lidar-17dce665ef3ded5a31f82e49e8d621d8.mp4\";","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & { fit?: 'cover' | 'contain'; src?: HTMLImageElement['src'] };\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit, src, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: ${({ fit = 'cover' }) => fit};\n  background-position: center center;\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { GridProps } from '@material-ui/core/Grid';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { px } from 'src/utils/theme';\n\ninterface LayoutGridProps {\n  xs?: GridProps['xs'];\n  sm?: GridProps['sm'];\n  md?: GridProps['md'];\n  lg?: GridProps['lg'];\n  xl?: GridProps['xl'];\n  spacing?: GridProps['spacing'];\n  dense?: boolean;\n}\n\nconst JustBox = ({ xs, sm, md, lg, xl, spacing, dense, ...rest }: LayoutGridProps) => <Box {...rest} />;\n\nconst StyledBox = withTheme(styled(JustBox)`\n  ${({ theme, xs, sm, md, lg, xl, spacing, dense }) => `\n  display: grid;\n  grid-gap: ${px(theme.spacing(spacing))};\n  ${dense ? 'grid-auto-flow: dense;' : ''}\n  // grid-template-columns: repeat(4, 1fr);\n\n  ${xs && theme.breakpoints.up('xs')} {\n    grid-template-columns: repeat(${xs}, 1fr);\n  }\n  ${sm && theme.breakpoints.up('sm')} {\n    grid-template-columns: repeat(${sm}, 1fr);\n  }\n  ${md && theme.breakpoints.up('md')} {\n    grid-template-columns: repeat(${md}, 1fr);\n  }\n  ${lg && theme.breakpoints.up('lg')} {\n    grid-template-columns: repeat(${lg}, 1fr);\n  }\n  ${xl && theme.breakpoints.up('xl')} {\n    grid-template-columns: repeat(${xs}, 1fr);\n  }\n`}\n`);\n\nconst LayoutGrid: React.FC<BoxProps & LayoutGridProps> = props => <StyledBox {...props} />;\n\nexport default LayoutGrid;\nexport { LayoutGrid };\n","module.exports = __webpack_public_path__ + \"static/simulation-platform-37a96777ce2c1bf70b36ca13b1c9c458.jpg\";","import { withTheme } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst ARROW_THICKNESS = 2;\nconst ARROW_SIZE = 14;\n// prettier-ignore\nconst ARROW_TRAVEL_DISTANCE = ((ARROW_SIZE + ARROW_THICKNESS) * 2) + 1;\n\n// prettier-ignore\nconst ArrowsContainer = withTheme(styled.div`\n  width: ${(ARROW_SIZE * 2) + ARROW_THICKNESS}px;\n  height: ${ARROW_TRAVEL_DISTANCE + ((ARROW_SIZE + ARROW_THICKNESS) * 3)}px;\n  display: inline-block;\n`);\n\nconst Arrow = withTheme(styled.div`\n  display: block;\n  width: ${ARROW_SIZE}px;\n  height: ${ARROW_SIZE}px;\n  border-bottom: ${ARROW_THICKNESS}px solid white;\n  border-right: ${ARROW_THICKNESS}px solid white;\n  transform: rotate(45deg);\n  transform-origin: bottom right;\n  animation: animate 2s infinite;\n  will-change: transform, opacity;\n\n  &:nth-child(2) {\n    animation-delay: -0.2s;\n  }\n\n  &:nth-child(3) {\n    animation-delay: -0.4s;\n  }\n\n  @keyframes animate {\n    0% {\n      opacity: 0;\n      transform: translateY(0) rotate(45deg);\n    }\n    50% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(${ARROW_TRAVEL_DISTANCE}px) rotate(45deg);\n    }\n  }\n`);\n\nconst Arrows = () => (\n  <ArrowsContainer>\n    <Arrow />\n    <Arrow />\n    <Arrow />\n  </ArrowsContainer>\n);\n\nexport default Arrows;\nexport { Arrows };\n","import { useTheme, withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport React from 'react';\nimport BackgroundVideo, { BackgroundVideoProps } from 'src/components/BackgroundVideo';\nimport { LinkButton, ReadMoreButton, RequestDemoButton } from 'src/components/Button';\nimport Center from 'src/components/Center';\nimport EntranceAnimation from 'src/components/EntranceAnimation';\nimport { IconApollo, IconUnity, IconVelodyne } from 'src/components/Icons';\nimport LayoutGrid from 'src/components/LayoutGrid';\nimport MoreArrows from 'src/components/MoreArrows';\nimport Page, { PageSection } from 'src/components/Page';\nimport { SectionContent, VisualizationSection } from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\nimport srcDigitalTwinVideo from 'src/videos/digital-twin.mp4';\nimport videoSrcLidar from 'src/videos/lidar.mp4';\nimport videoSrcHero from 'src/videos/vis-1.mp4';\nimport videoSrcWiseVis from 'src/videos/vis-borregas.mp4';\nimport styled from 'styled-components';\n\nconst SmallVideo: React.FC<BackgroundVideoProps> = props => (\n  <BackgroundVideo\n    height={{ xs: 200, sm: 300, md: 456 }}\n    mb={{ xs: 2, md: 5 }}\n    borderRadius='borderRadius'\n    fit='cover'\n    {...props}\n  />\n);\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n  position: relative;\n`) as React.FC<GridProps>;\n\nconst SilhouettedContent = withTheme(styled(Box)`\n  // Commented out shadow, in case there's a picture or video behind the logos in the future. -BS\n  // ${({ theme }) => `\n  //   filter:\n  //     drop-shadow(0px 0px 2px ${theme.palette.background.default})\n  //     drop-shadow(0 0px 4px ${theme.palette.background.default})\n  //     drop-shadow(0 0px 20px ${theme.palette.background.default});\n  // `}\n`) as React.FC<BoxProps>;\n\nconst brandIconProps = { height: 40, width: '100%' };\n\nexport default function Home() {\n  const { t, tMap } = useTranslation();\n  const theme = useTheme();\n  const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n\n  return (\n    <Page animate>\n      <PageSection>\n        <Box mb={15} height='70vh' maxHeight={720} position='relative'>\n          <BackgroundVideo src={videoSrcHero} position='absolute' style={{ position: 'absolute' }}>\n            <Typography>\n              A video of Lidar scanning an environment, with a simulated vehicle driving down a street.\n            </Typography>\n          </BackgroundVideo>\n          <HeroGrid container direction='column' alignItems='center' justify='center'>\n            <Grid item>\n              <EntranceAnimation>\n                <Typography variant='h1'>{t('home.title')}</Typography>\n              </EntranceAnimation>\n            </Grid>\n            <Grid item>\n              <EntranceAnimation>\n                <Center disableGutters maxWidth={720}>\n                  <Typography>{t('home.body')}</Typography>\n                  <Box mt={6}>\n                    <Grid container spacing={4} justify='center'>\n                      <Grid item>\n                        <RequestDemoButton variant='outlined' />\n                      </Grid>\n                      <Grid item>\n                        <LinkButton\n                          color='primary'\n                          buttonVariant='contained'\n                          to='/docs/getting-started/'\n                          target='_blank'\n                        >\n                          {t('main.buttons.getStarted')}\n                        </LinkButton>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Center>\n              </EntranceAnimation>\n            </Grid>\n          </HeroGrid>\n          <Box p={2} textAlign='center'>\n            <MoreArrows />\n          </Box>\n        </Box>\n      </PageSection>\n\n      <PageSection>\n        <Box my={15}>\n          <VisualizationSection title={t('home.section1.title')} variant='h3' video={videoSrcWiseVis} animate>\n            {t('home.section1.body')}\n          </VisualizationSection>\n        </Box>\n      </PageSection>\n\n      <PageSection>\n        <Box my={15}>\n          <VisualizationSection title={t('home.section2.title')} flip variant='h3' video={videoSrcWiseVis} animate>\n            {t('home.section2.body')}\n          </VisualizationSection>\n        </Box>\n      </PageSection>\n\n      <SilhouettedContent my={15}>\n        <Center maxWidth={720}>\n          <LayoutGrid xs={2} sm={2 /* Set to the amount of logos for one row */} spacing={2} alignItems='center'>\n            {/* <IconBaidu {...brandIconProps} /> */}\n            <IconApollo {...brandIconProps} color={'#1E64DD'} />\n            {/* <IconUnity {...brandIconProps} height={30} color={'#FFFFFF'} /> */}\n            <IconVelodyne {...brandIconProps} color={'#0038A5'} />\n          </LayoutGrid>\n        </Center>\n      </SilhouettedContent>\n\n      <Box my={15}>\n        <PageSection>\n          <LayoutGrid xs={1} sm={3} spacing={3}>\n            <EntranceAnimation>\n              <Box>\n                <SmallVideo poster={srcSimulationPoster} src={videoSrcLidar} />\n                <SectionContent title={t('home.features.0.title')}>{t('home.features.0.body')}</SectionContent>\n              </Box>\n              <Box order={isXs ? null : 4}>\n                {/* DEV NOTE: Rather than using the normal readMore button that's built into SectionContent,\n                 * We've specifically broken the button out into its own grid element box, so it can be\n                 * assigned a custom order based on the screen size. When the screen is sm or larger,\n                 * the grid is actually a 3x2 matrix, with the content on the first row and the buttons\n                 * on the second row, so they all vertically line up. `4` used below just represents a\n                 * number, greater than 3. When order number is the same, DOM order is used.\n                 */}\n                <ReadMoreButton to='/product/simulation/' />\n              </Box>\n            </EntranceAnimation>\n            <EntranceAnimation delay={isXs ? 0 : 0.4}>\n              <Box>\n                <SmallVideo poster={srcCloudPoster} src={videoSrcWiseVis} />\n                <SectionContent title={t('home.features.1.title')}>{t('home.features.1.body')}</SectionContent>\n              </Box>\n              <Box order={isXs ? null : 4}>\n                <ReadMoreButton to='/product/cloud/' />\n              </Box>\n            </EntranceAnimation>\n            <EntranceAnimation delay={isXs ? 0 : 0.8}>\n              <Box>\n                <SmallVideo poster={srcDigitalTwinPoster} src={srcDigitalTwinVideo} />\n                <SectionContent title={t('home.features.2.title')}>{t('home.features.2.body')}</SectionContent>\n              </Box>\n              <Box order={isXs ? null : 4}>\n                <ReadMoreButton to='/product/digitaltwin/' />\n              </Box>\n            </EntranceAnimation>\n          </LayoutGrid>\n        </PageSection>\n      </Box>\n      <SubscribeBox animate />\n    </Page>\n  );\n}\n","import Container, { ContainerProps } from '@material-ui/core/Container';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport addSpacing from 'src/utils/addSpacing';\nimport styled from 'styled-components';\nimport { PropsFor } from '@material-ui/system';\n\nconst Center = addSpacing(\n  withTheme(styled(Container)`\n    text-align: center;\n  `) as React.FC<ContainerProps>\n);\nexport type CenterProps = PropsFor<typeof Center>;\n\nexport default Center;\nexport { Center };\n","module.exports = __webpack_public_path__ + \"static/vis-borregas-9e78e30df0e056c705e5dcb9294089d6.mp4\";","module.exports = __webpack_public_path__ + \"static/digital-twin-cad342468901a0479c8b992438ce4192.mp4\";","module.exports = __webpack_public_path__ + \"static/cloud-simulation-b834b11be46add0489efb4c057935af7.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport React from 'react';\n// import { LinkButton, LinkButtonProps } from 'src/components/Button';\nimport BackgroundVideo, { BackgroundVideoProps } from 'src/components/BackgroundVideo';\nimport styled from 'styled-components';\n\nconst StyledPaper = withTheme(styled(Paper)`\n  border-radius: 16px;\n`) as React.FC<PaperProps>;\n\nconst DimBox = withTheme(styled(Box)`\n  background-color: rgba(0, 0, 0, 0.2);\n\n  dt,\n  dd {\n    display: inline-block;\n  }\n  dt {\n    margin-right: 1ex;\n  }\n`) as React.FC<BoxProps>;\n\nconst FakeWiseHeader: React.FC<BoxProps> = props => (\n  <Box pb={2} display='flex' alignItems='center' {...props}>\n    <DimBox flexBasis='100%' p={2} borderRadius='borderRadius'>\n      <Grid container>\n        <Grid item xs={12} sm={6} component='dl'>\n          <Typography component='dt' color='textSecondary'>\n            Bridge:\n          </Typography>\n          <Typography component='dd'>ROS1</Typography>\n          <br />\n          <Typography component='dt' color='textSecondary'>\n            Sensors configuration:\n          </Typography>\n          <Typography component='dd'>My config</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} component='dl'>\n          <Typography component='dt' color='textSecondary'>\n            Asset bundle version:\n          </Typography>\n          <Typography component='dd'>A</Typography>\n          <br />\n          <Typography component='dt' color='textSecondary'>\n            Connection:\n          </Typography>\n          <Typography component='dd'>localhost:9090</Typography>\n        </Grid>\n      </Grid>\n    </DimBox>\n    <DimBox ml={2} p={1} borderRadius='borderRadius' whiteSpace='nowrap' style={{ pointerEvents: 'none' }}>\n      <Button style={{ width: '50%' }}>Analysis</Button>\n      <Button style={{ width: '50%' }} variant='contained' color='primary'>\n        Visualization\n      </Button>\n    </DimBox>\n  </Box>\n);\n\nexport type VisualizationFrameProps = PaperProps & Pick<BackgroundVideoProps, 'src' | 'poster'>;\n\nconst VisualizationFrame = ({ children, poster, src, ...rest }: VisualizationFrameProps) => {\n  const theme = useTheme();\n  // const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n  // const iconSize = isXs ? 42 : 80;\n  return (\n    <StyledPaper {...rest}>\n      <Box p={2} width={992} height={1} display='flex' flexDirection='column' boxSizing='border-box'>\n        <FakeWiseHeader />\n        <Box flexBasis='100%'>\n          <BackgroundVideo poster={poster} src={src} zIndex='auto'>\n            {children}\n          </BackgroundVideo>\n        </Box>\n      </Box>\n    </StyledPaper>\n  );\n};\n\nexport default VisualizationFrame;\nexport { VisualizationFrame };\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { fade, withTheme } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ReadMoreButton, RequestDemoButton } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { PageSection, PageSectionProps } from 'src/components/Page';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport BackgroundVideo from './BackgroundVideo';\nimport EntranceAnimation from './EntranceAnimation';\nimport { LinkProps } from './Link';\nimport VisualizationFrame, { VisualizationFrameProps } from 'src/components/VisualizationFrame';\nimport { RequestDemoFormMode } from 'src/@types/shared.d';\n\n// Top of section is offset 9 spacing units so any section hash-linking\n// will link at that document scroll position, which accounts for extra\n// space for the floating fixed app bar header.\nconst SpacedSectionContainer = withTheme(styled(PageSection)`\n  margin-top: ${({ theme }) => px(theme.spacing(-9))};\n  padding-top: ${({ theme }) => px(theme.spacing(9))};\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as React.FC<PageSectionProps<'section', { component: string }>>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  /** Adds a little faded background behind the text, but only if `tuckImage` is also true. */\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleOneColumn = 2 / 12;\n\nexport type ColumnsType = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nexport type TuckingBoxProps = BoxProps & {\n  imageColumns: ColumnsType;\n};\n\nconst TuckingBox = withTheme(styled(({ imageColumns, ...rest }) => <Box {...rest} />)`\n  ${({ imageColumns, theme }) => `\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${theme.breakpoints.up('md')} {\n    width: ${roundTo(doubleOneColumn * imageColumns * 100, 4)}%;\n  }\n`}\n`) as React.FC<TuckingBoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ imageColumns, theme }) => {\n    // Avoid the godforsaken prettier rule that takes out mandatory parenthesis\n    const offset = doubleOneColumn * imageColumns * -100;\n    return `\n      ${theme.breakpoints.up('md')} {\n        margin-inline-start: ${roundTo(offset + 100, 4)}%;\n      }\n    `;\n  }}\n`) as React.FC<TuckingBoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title?: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  imageColumns?: ColumnsType;\n  tuckImage?: boolean;\n  video?: React.VideoHTMLAttributes<HTMLVideoElement>['src'];\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'contactUs':\n      button = (\n        <RequestDemoButton mode={RequestDemoFormMode.ContactUs} color='secondary' variant='outlined' {...buttonProps} />\n      );\n      break;\n    case 'getDemo':\n      button = <RequestDemoButton {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ReadMoreButton {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      {title && (\n        <TitleGridBox item mb={{ xs: 2, md: 5 }}>\n          <Typography variant={variant}>{title}</Typography>\n        </TitleGridBox>\n      )}\n      <BodyGridBox item flip={flip} contained={contained} tuckImage={tuckImage}>\n        {typeof children === 'string' || typeof children === 'number' ? <Typography>{children}</Typography> : children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box ml={!flip && contained ? -2 : 0} mr={flip && contained ? -2 : 0}>\n            {button}\n          </Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  buttonProps,\n  children,\n  imageColumns,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video\n}: SectionProps) => {\n  // If an amount of imageColumns was not set, but it is a tuckImage, go ahead and set a default value.\n  if (!imageColumns) {\n    imageColumns = tuckImage ? 8 : 6;\n  }\n\n  let imageTag =\n    image ||\n    (video ? (\n      <BackgroundVideo src={video} poster={src} borderRadius='borderRadius' fit='cover' />\n    ) : (\n      <StyledImage src={src} />\n    ));\n\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent imageColumns={imageColumns}>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  let columnsForImage: GridBoxProps['md'] = imageColumns;\n  let columnsForText: GridBoxProps['md'] =\n    typeof columnsForImage === 'number' ? ((12 - columnsForImage) as GridBoxProps['md']) : columnsForImage;\n\n  if (tuckImage) {\n    columnsForImage = 6;\n    columnsForText = 6;\n  }\n\n  return (\n    <SpacedSectionContainer component='section' id={title ? title.toLowerCase().replace(/\\s+/g, '-') : undefined}>\n      <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'} alignItems='center'>\n        <Grid item xs={12} md={columnsForImage} style={{ alignSelf: 'stretch' }}>\n          {imageTag}\n        </Grid>\n        <Grid item xs={12} md={columnsForText}>\n          <Box position='relative'>\n            <Content\n              title={title}\n              buttonText={buttonText}\n              buttonProps={buttonProps}\n              minHeight={minHeight}\n              variant={variant}\n              contained={contained}\n              flip={flip}\n              tuckImage={tuckImage}\n            >\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </SpacedSectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SpacedSectionContainer component='section' maxWidth={false}>\n    {title ? (\n      <Box mb={{ xs: 2, md: 5 }}>\n        <Typography variant={variant}>{title}</Typography>\n      </Box>\n    ) : null}\n    <StyledImage src={src} />\n    {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n  </SpacedSectionContainer>\n);\n\nexport type VisualizationSectionProps = BoxProps & SectionProps & { animate?: boolean };\n\nconst VisualizationSection: React.FC<VisualizationSectionProps> = ({\n  animate,\n  buttonProps,\n  buttonText = 'contactUs',\n  children,\n  contained,\n  flip,\n  image,\n  imageColumns,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video,\n  ...rest\n}) => {\n  // If an amount of imageColumns was not set, but it is a tuckImage, go ahead and set a default value.\n  if (!imageColumns) {\n    imageColumns = tuckImage ? 8 : 6;\n  }\n\n  let columnsForImage: GridBoxProps['md'] = imageColumns;\n  let columnsForText: GridBoxProps['md'] =\n    typeof columnsForImage === 'number' ? ((12 - columnsForImage) as GridBoxProps['md']) : columnsForImage;\n\n  if (tuckImage) {\n    columnsForImage = 6;\n    columnsForText = 6;\n  }\n\n  return (\n    <Box {...rest}>\n      <EntranceAnimation disabled={!animate}>\n        <Grid container spacing={2} alignItems='center' direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={columnsForImage} style={{ overflow: 'hidden', height: 570 }}>\n            <Box position='relative' height={1} overflow='hidden'>\n              <VisualizationFrame\n                poster={src}\n                src={video}\n                style={{ position: 'absolute', right: flip ? 'auto' : 0, height: '100%' }}\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12} md={columnsForText}>\n            {/* <Typography variant='h4'>{title}</Typography>\n          {children}\n          <RequestDemoButton mode={RequestDemoFormMode.ContactUs} /> */}\n            <EntranceAnimation disabled={!animate}>\n              <Content\n                title={title}\n                buttonText={buttonText}\n                buttonProps={buttonProps}\n                minHeight={minHeight}\n                variant={variant}\n                contained={contained}\n                flip={flip}\n              >\n                {children}\n              </Content>\n            </EntranceAnimation>\n          </Grid>\n        </Grid>\n      </EntranceAnimation>\n    </Box>\n  );\n};\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection, VisualizationSection };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","module.exports = __webpack_public_path__ + \"static/vis-1-bb2f8363d0f767f782c8e3860ae9c677.mp4\";","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}