{"version":3,"sources":["webpack:///./src/components/MoreArrows.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/Section.tsx"],"names":["ArrowsContainer","withTheme","styled","Box","Arrow","Arrows","Center","Container","theme","px","spacing","Image","SmallImage","breakpoints","down","HeroBox","HeroGrid","Grid","TypoWrapper","str","Typography","brandIconProps","color","height","width","Home","useTranslation","t","tMap","Page","mb","container","direction","alignItems","justify","item","variant","disableGutters","mt","Button","MoreArrows","my","xs","Section","title","buttonText","sm","StyledButton","MuiButton","React","forwardRef","props","ref","ButtonGetDemo","ButtonReadMore","SectionContainer","StyledPaper","Paper","Content","button","children","flip","component","elevation","md","p"],"mappings":"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","file":"component---src-pages-index-tsx-548b93d0bd8519010ddf.js","sourcesContent":["import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n// import Container from '@material-ui/core/Container';\n// import Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\n// import Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\n// import { px } from 'src/utils/theme';\nimport styled from 'styled-components';\n\nconst ArrowsContainer = withTheme(styled(Box)`\n  position: absolute;\n  top: 90%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`);\n\nconst Arrow = withTheme(styled(Box)`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-bottom: 2px solid white;\n  border-right: 2px solid white;\n  transform: rotate(45deg);\n  margin: -10px;\n  animation: animate 2s infinite;\n  will-change: transform, opacity;\n\n  &:nth-child(2) {\n    animation-delay: -0.2s;\n  }\n\n  &:nth-child(3) {\n    animation-delay: -0.4s;\n  }\n\n  @keyframes animate {\n    0% {\n      opacity: 0;\n      transform: rotate(45deg) translate(-20px, -20px);\n    }\n    50% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n      transform: rotate(45deg) translate(20px, 20px);\n    }\n  }\n`);\n\nconst Arrows = () => (\n  <ArrowsContainer>\n    <Arrow />\n    <Arrow />\n    <Arrow />\n  </ArrowsContainer>\n);\n\nexport default Arrows;\nexport { Arrows };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport MoreArrows from 'src/components/MoreArrows';\nimport Page from 'src/components/Page';\nimport { SectionContent } from 'src/components/Section';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport styled from 'styled-components';\nimport { px } from 'src/utils/theme';\nimport { ButtonGetDemo } from 'src/components/Button';\nimport { IconApollo, IconBaidu, IconUnity, IconVelodyne } from 'src/components/Icons';\n\nconst Center = withTheme(styled(Container)`\n  text-align: center;\n  max-width: ${({ theme }) => px(theme.spacing(90))};\n`);\n\nconst Image = withTheme(styled(Box)`\n  height: 100%;\n  width: 100%;\n  background-image: linear-gradient(-205deg, white, #9c27b0 30%, black);\n  border-radius: 20px;\n`);\n\nconst SmallImage = withTheme(styled(Image)`\n  height: 456px;\n\n  ${({ theme }) => `\n    ${theme.breakpoints.down('sm')} {\n      height: 300px;\n    }\n    ${theme.breakpoints.down('xs')} {\n      height: 200px;\n    }\n  `}\n`);\n\nconst HeroBox = withTheme(styled(Box)`\n  // height: 70vh;\n  background-image: linear-gradient(-205deg, white, #9c27b0 30%, black);\n`);\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n`);\n\nconst TypoWrapper = (str: string) => <Typography>{str}</Typography>;\n\n// type SectionProps = {\n//   buttonText?: string;\n//   children: React.ReactNode;\n//   direction?: GridProps['direction'];\n//   title: string;\n// };\n// const Section = ({ buttonText, children, direction, title }: SectionProps) => (\n//   <Grid container direction='column' spacing={5}>\n//     <Grid item>\n//       <Typography variant='h3'>{title}</Typography>\n//     </Grid>\n//     <Grid item>{children}</Grid>\n//     {buttonText && (\n//       <Grid item>\n//         <Button color='primary' variant='contained'>\n//           {buttonText}\n//         </Button>\n//         {/* <Button variant='outlined'>{buttonText}</Button> */}\n//       </Grid>\n//     )}\n//   </Grid>\n// );\n\nconst brandIconProps = { color: '#6D7B97', height: '100%', width: '100%' };\n\nexport default function Home() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page>\n      <HeroBox mb={15} height='70vh'>\n        <HeroGrid container direction='column' alignItems='center' justify='center'>\n          <Grid item>\n            <Typography variant='h1'>{t('home.title')}</Typography>\n          </Grid>\n          <Grid item>\n            <Center disableGutters>\n              {tMap('home.body', TypoWrapper)}\n              <Box mt={6}>\n                <ButtonGetDemo />\n              </Box>\n            </Center>\n          </Grid>\n        </HeroGrid>\n        <MoreArrows />\n      </HeroBox>\n\n      <Box my={15}>\n        <Grid container>\n          <Grid item xs={6}>\n            <Image />\n          </Grid>\n          <Grid item xs={6}>\n            <SectionContent title={t('home.section1.title')} buttonText='getDemo'>\n              {tMap('home.section1.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box my={15}>\n        <Grid container direction='row-reverse'>\n          <Grid item xs={6}>\n            <Image />\n          </Grid>\n          <Grid item xs={6}>\n            <SectionContent title={t('home.section2.title')} buttonText='getDemo'>\n              {tMap('home.section2.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box my={15}>\n        <Center disableGutters>\n          <Grid container spacing={8}>\n            <Grid item xs={6} sm={3}>\n              <IconBaidu {...brandIconProps} />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <IconApollo {...brandIconProps} />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <IconUnity {...brandIconProps} />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <IconVelodyne {...brandIconProps} />\n            </Grid>\n          </Grid>\n        </Center>\n      </Box>\n\n      <Box my={15}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent title={t('home.features.0.title')} buttonText='Read More'>\n              {tMap('home.features.0.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent title={t('home.features.1.title')} buttonText='Read More'>\n              {tMap('home.features.1.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent title={t('home.features.2.title')} buttonText='Read More'>\n              {tMap('home.features.2.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n    </Page>\n  );\n}\n","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button = React.forwardRef((props: ButtonProps, ref) => <StyledButton variant='outlined' {...props} ref={ref} />);\n\nconst ButtonGetDemo = React.forwardRef((props: ButtonProps, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore = React.forwardRef((props: ButtonProps, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </Button>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport { px } from 'src/utils/theme';\nimport Button, { ButtonReadMore, ButtonGetDemo } from 'src/components/Button';\nimport styled from 'styled-components';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst Image = withTheme(styled(Box)`\n  height: 100%;\n  width: 100%;\n  background-image: linear-gradient(-205deg, white, #9c27b0 30%, black);\n  border-radius: 20px;\n`);\n\ntype ContentProps = {\n  buttonText?: string;\n  children: React.ReactNode;\n  direction?: GridProps['direction'];\n  title: string;\n  variant?: TypographyProps['variant'];\n};\nconst Content = ({ buttonText, children, title, variant = 'h5' }: ContentProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore />;\n      break;\n    default:\n      button = <Button>{buttonText}</Button>;\n  }\n  return (\n    <Grid container direction='column' spacing={5}>\n      <Grid item>\n        <Typography variant={variant}>{title}</Typography>\n      </Grid>\n      <Grid item>{children}</Grid>\n      {buttonText && <Grid item>{button}</Grid>}\n    </Grid>\n  );\n};\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n}\n\nconst Section = ({ buttonText, children, flip, title, variant }: SectionProps) => (\n  <SectionContainer component='section'>\n    <StyledPaper elevation={3}>\n      <Grid container spacing={2} direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={6}>\n          <Image />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box p={2}>\n            <Content title={title} buttonText={buttonText} variant={variant}>\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent };\n"],"sourceRoot":""}