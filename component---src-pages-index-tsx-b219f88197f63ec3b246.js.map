{"version":3,"sources":["webpack:///./src/components/MoreArrows.tsx","webpack:///./src/components/Icons/Apollo.tsx","webpack:///./src/components/Icons/Baidu.tsx","webpack:///./src/components/Icons/Unity.tsx","webpack:///./src/components/Icons/Velodyne.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/Section.tsx"],"names":["ArrowsContainer","withTheme","styled","Box","Arrow","Arrows","IconApollo","color","rest","width","height","viewBox","fill","preserveAspectRatio","xmlns","fillRule","clipRule","d","IconBaidu","IconUnity","IconVelodyne","Center","Container","theme","px","spacing","Image","SmallImage","breakpoints","down","HeroBox","HeroGrid","Grid","TypoWrapper","str","Typography","brandIconProps","Home","useTranslation","t","tMap","Page","mb","container","direction","alignItems","justify","item","variant","disableGutters","mt","Button","MoreArrows","my","xs","Section","title","buttonText","sm","StyledButton","MuiButton","React","forwardRef","props","ref","ButtonGetDemo","ButtonReadMore","SectionContainer","StyledPaper","Paper","Content","button","children","flip","component","elevation","md","p"],"mappings":"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","file":"component---src-pages-index-tsx-b219f88197f63ec3b246.js","sourcesContent":["import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n// import Container from '@material-ui/core/Container';\n// import Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\n// import Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\n// import { px } from 'src/utils/theme';\nimport styled from 'styled-components';\n\nconst ArrowsContainer = withTheme(styled(Box)`\n  position: absolute;\n  top: 90%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`);\n\nconst Arrow = withTheme(styled(Box)`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-bottom: 2px solid white;\n  border-right: 2px solid white;\n  transform: rotate(45deg);\n  margin: -10px;\n  animation: animate 2s infinite;\n  will-change: transform, opacity;\n\n  &:nth-child(2) {\n    animation-delay: -0.2s;\n  }\n\n  &:nth-child(3) {\n    animation-delay: -0.4s;\n  }\n\n  @keyframes animate {\n    0% {\n      opacity: 0;\n      transform: rotate(45deg) translate(-20px, -20px);\n    }\n    50% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n      transform: rotate(45deg) translate(20px, 20px);\n    }\n  }\n`);\n\nconst Arrows = () => (\n  <ArrowsContainer>\n    <Arrow />\n    <Arrow />\n    <Arrow />\n  </ArrowsContainer>\n);\n\nexport default Arrows;\nexport { Arrows };\n","/* eslint-disable max-len */\nimport React from 'react';\n\nexport const IconApollo: React.FC<BaseSvg> = ({ color = 'currentColor', ...rest }) => (\n  <svg\n    width='150'\n    height='80'\n    viewBox='0 0 150 80'\n    fill='none'\n    preserveAspectRatio='true'\n    xmlns='http://www.w3.org/2000/svg'\n    {...rest}\n  >\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M131.998 24.9981C129.032 24.9985 126.132 25.8783 123.666 27.5264C121.2 29.1745 119.277 31.5167 118.142 34.2571C117.007 36.9974 116.71 40.0128 117.289 42.9219C117.868 45.831 119.296 48.5032 121.393 50.6007C123.491 52.6982 126.163 54.1267 129.072 54.7057C131.982 55.2847 134.998 54.9881 137.738 53.8535C140.479 52.7189 142.822 50.7971 144.47 48.3312C146.119 45.8654 146.999 42.9661 147 40C147 38.0303 146.612 36.0798 145.858 34.26C145.104 32.4403 143.999 30.7868 142.606 29.3941C141.213 28.0014 139.559 26.8966 137.739 26.143C135.919 25.3894 133.968 25.0017 131.998 25.0019V24.9981ZM131.998 49.0019C130.219 49.0015 128.479 48.4735 126.999 47.4846C125.519 46.4956 124.366 45.0902 123.685 43.446C123.004 41.8018 122.826 39.9926 123.173 38.2471C123.521 36.5017 124.378 34.8984 125.636 33.6399C126.895 32.3815 128.498 31.5244 130.244 31.177C131.989 30.8296 133.799 31.0075 135.443 31.6882C137.087 32.3689 138.493 33.5219 139.482 35.0014C140.472 36.4808 141 38.2204 141 40C141 41.1819 140.767 42.3522 140.315 43.4441C139.862 44.536 139.199 45.528 138.363 46.3637C137.527 47.1993 136.535 47.8621 135.443 48.3143C134.351 48.7665 133.18 48.9992 131.998 48.999V49.0019ZM17.9878 24.999C15.6119 25.0009 13.2704 25.5671 11.1562 26.651C9.04197 27.7349 7.21549 29.3054 5.82718 31.2333C4.43887 33.1612 3.52843 35.3913 3.17085 37.7399C2.81327 40.0885 3.01878 42.4884 3.77044 44.7421C4.52211 46.9957 5.79845 49.0385 7.49431 50.7024C9.19018 52.3662 11.2571 53.6035 13.5248 54.3122C15.7925 55.021 18.1962 55.1809 20.5378 54.7789C22.8794 54.3769 25.0921 53.4245 26.9935 52V54.9952H32.9941V40C32.9946 38.0295 32.6068 36.0783 31.8528 34.2577C31.0988 32.4372 29.9934 30.7831 28.5998 29.3899C27.2062 27.9967 25.5517 26.8917 23.7308 26.1382C21.91 25.3846 19.9584 24.9972 17.9878 24.9981V24.999ZM17.9878 48.9981C16.2079 48.9969 14.4684 48.4682 12.9891 47.4786C11.5098 46.489 10.3572 45.0831 9.67692 43.4386C8.99664 41.7941 8.81928 39.9848 9.16728 38.2395C9.51527 36.4942 10.373 34.8913 11.632 33.6334C12.891 32.3755 14.4947 31.519 16.2404 31.1724C17.9862 30.8257 19.7955 31.0044 21.4397 31.6858C23.0839 32.3673 24.489 33.5209 25.4776 35.0007C26.4662 36.4806 26.9937 38.2204 26.9935 40C26.9932 42.3868 26.0448 44.6757 24.3569 46.3633C22.6689 48.051 20.3796 48.999 17.9926 48.999L17.9878 48.9981ZM104.147 54.9981H98.1473V16H104.147V54.9952V54.9981ZM113.762 54.9981H107.762V16H113.762V54.9952V54.9981ZM79.8997 24.9981C77.9012 24.9955 75.9224 25.3934 74.0802 26.1683C72.2381 26.9433 70.57 28.0796 69.1744 29.5101C68.6278 30.0689 68.1149 30.6597 67.6383 31.2794L71.1407 36.8829L71.1724 36.831C71.7668 35.8084 72.4563 34.8442 73.2318 33.951C74.4526 32.6046 76.0525 31.6593 77.8209 31.2395C79.5893 30.8197 81.4434 30.9452 83.1392 31.5993C84.8349 32.2535 86.2929 33.4057 87.3211 34.9044C88.3493 36.403 88.8996 38.1778 88.8996 39.9952C88.8996 41.8126 88.3493 43.5874 87.3211 45.086C86.2929 46.5847 84.8349 47.7369 83.1392 48.391C81.4434 49.0452 79.5893 49.1707 77.8209 48.7509C76.0525 48.3311 74.4526 47.3858 73.2318 46.0394C72.4565 45.1461 71.767 44.1819 71.1724 43.1594L65.2294 33.6496C64.3571 32.1576 63.3201 30.7681 62.1379 29.5072C60.0532 27.3753 57.3804 25.9131 54.4608 25.307C51.5411 24.701 48.5071 24.9788 45.746 26.1049C42.9849 27.2309 40.6221 29.1542 38.9593 31.6292C37.2964 34.1041 36.4089 37.0184 36.4102 40V64H42.4108V52C45.323 54.1819 48.929 55.231 52.5573 54.9519C56.1856 54.6729 59.5888 53.0847 62.1331 50.4832C62.6798 49.9244 63.1928 49.3336 63.6693 48.7139L60.1668 43.1104L60.1351 43.1622C59.5406 44.1847 58.8511 45.149 58.0757 46.0422C56.8549 47.3887 55.2551 48.334 53.4866 48.7538C51.7182 49.1736 49.8641 49.0481 48.1684 48.3939C46.4726 47.7398 45.0147 46.5875 43.9865 45.0889C42.9582 43.5903 42.4079 41.8155 42.4079 39.9981C42.4079 38.1807 42.9582 36.4059 43.9865 34.9073C45.0147 33.4086 46.4726 32.2564 48.1684 31.6022C49.8641 30.9481 51.7182 30.8226 53.4866 31.2424C55.2551 31.6621 56.8549 32.6075 58.0757 33.9539C58.8512 34.847 59.5408 35.8113 60.1351 36.8339L66.0782 46.3379C66.9747 47.8138 68.0098 49.2009 69.1696 50.4803C70.8993 52.2491 73.0396 53.5626 75.3998 54.3039C77.7601 55.0453 80.2672 55.1914 82.6976 54.7292C85.1281 54.267 87.4065 53.211 89.3299 51.6551C91.2533 50.0993 92.7619 48.0919 93.7215 45.8118C94.681 43.5317 95.0617 41.0497 94.8296 38.5868C94.5974 36.124 93.7597 33.7568 92.391 31.6961C91.0222 29.6354 89.165 27.9452 86.9848 26.7761C84.8045 25.607 82.3689 24.9952 79.8949 24.9952'\n      fill={color}\n    />\n  </svg>\n);\n","/* eslint-disable max-len */\nimport React from 'react';\n\nexport const IconBaidu: React.FC<BaseSvg> = ({ color = 'currentColor', ...rest }) => (\n  <svg\n    width='174'\n    height='80'\n    viewBox='0 0 174 80'\n    fill='none'\n    preserveAspectRatio='true'\n    xmlns='http://www.w3.org/2000/svg'\n    {...rest}\n  >\n    <g>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M72.889 21.3336C73.0705 23.0306 73.8372 30.1949 67.8095 31.4946L67.8409 31.471C61.7462 32.7817 59.5107 25.7495 60.1774 22.4531C60.1774 22.4531 60.8991 15.3424 65.825 14.9029C69.6999 14.5576 72.5785 18.8428 72.8845 21.2915C72.8859 21.3052 72.8874 21.3192 72.889 21.3336ZM85.1679 10.6333C85.1679 15.3973 82.4539 19.2666 79.0968 19.2666C75.7396 19.2666 73.0178 15.4052 73.0178 10.6333C73.0178 5.86145 75.7396 2 79.0968 2C82.4539 2 85.1679 5.8693 85.1679 10.6333ZM101.514 11.9911C100.934 15.6328 98.0553 20.4282 93.5687 19.8396V19.8317C89.082 19.2509 88.0623 15.1933 88.5015 11.1199C88.8624 7.79217 92.847 2.69851 96.0238 3.42057C99.2005 4.14263 102.095 8.34941 101.514 11.9911ZM104.589 18.9919C109.947 18.9919 111.382 24.2269 111.382 25.9692C111.382 26.1013 111.386 26.266 111.391 26.4577C111.451 28.7961 111.615 35.1542 105.46 35.2775C98.8005 35.4109 98.5181 30.7568 98.5181 27.429C98.5181 23.9365 99.2319 18.9919 104.589 18.9919ZM93.5765 30.0583C97.6161 35.8661 104.558 41.2424 104.558 41.2424C104.558 41.2424 109.798 45.3236 106.472 53.172C103.146 61.0205 90.988 56.9393 90.988 56.9393C87.8274 56.0612 84.5017 55.9589 81.293 56.6411C78.1174 57.3414 74.8581 57.5845 71.6138 57.3631C71.6138 57.3631 65.5034 57.5122 63.7699 49.8129C62.3025 43.2953 67.67 39.2804 69.7043 37.7587C70.0731 37.4828 70.3324 37.2889 70.4215 37.1768C70.5657 36.9955 70.9251 36.688 71.4234 36.2617C72.9303 34.9725 75.7083 32.5959 77.6535 29.3284C80.242 24.9803 88.0858 21.4878 93.5765 30.0583ZM80.1801 33.7227V38.887H75.9679C74.6238 39.0909 73.3691 39.6853 72.3595 40.5964C71.35 41.5075 70.63 42.6952 70.289 44.012C69.9113 45.8629 70.1282 47.7859 70.9087 49.5059C71.4235 50.4096 72.135 51.1857 72.9905 51.7767C73.8459 52.3677 74.8233 52.7585 75.8503 52.92H83.7569V33.7854L80.1801 33.7227ZM80.1173 49.7571H76.9327C76.2306 49.6749 75.5724 49.3724 75.0525 48.8931C74.5326 48.4138 74.1776 47.7821 74.0384 47.0886C73.8253 46.1038 73.9043 45.0781 74.2658 44.1376C74.4817 43.6151 74.8134 43.1485 75.2361 42.7732C75.6587 42.3979 76.1611 42.1237 76.7053 41.9714H80.1173V49.7571ZM85.6942 39.3577V49.4273C85.6942 49.4273 85.8589 51.9309 89.3886 52.8414H98.4796V39.3577H94.5577V49.4822H90.8162C90.8162 49.4822 89.6161 49.3095 89.3965 48.3442V39.3027L85.6942 39.3577Z'\n        fill={color}\n      />\n      <path\n        d='M141.801 32.7499V28.5117H113.869V32.8127H125.878L124.717 35.387H114.52V56.6799H138.758C141.299 56.6799 141.072 54.1213 141.072 54.1213V35.387H130.875L131.777 32.7499H141.801ZM136.373 52.1356C136.373 52.1356 136.083 52.842 135.667 52.842H119.564V47.8739H136.373V52.1356ZM136.373 43.777H119.587V39.1229H136.373V43.777Z'\n        fill={color}\n      />\n      <path\n        d='M173.718 28.6221H162.736V26.4795H157.661V28.5201H145.111V56.6412H149.629V32.1461H173.781L173.718 28.6221ZM170.761 34.4457V32.8132H166.345V34.4457H157.254V32.876H153.073V34.4457H150.241L150.296 37.5851H153.073V43.597H168.36C170.478 43.597 170.761 41.3602 170.761 41.3602V37.6243H174V34.4849L170.761 34.4457ZM166.345 39.8062C166.345 39.8062 165.952 40.5283 165.45 40.5283H157.207V37.5694H166.345V39.8062ZM150.861 47.9765L157.92 52.0577C157.363 52.6698 154.955 53.4468 154.955 53.4468H150.249V56.5862H156.618C158.491 56.0374 160.306 55.3093 162.038 54.4122C163.497 55.7464 166.298 56.3037 166.298 56.3037H173.553V53.1643H168.062C167.072 52.9846 166.123 52.6255 165.262 52.1048L173.53 47.3486V44.7821H150.861V47.9765ZM165.505 47.9215L161.481 50.0406L157.787 47.9215H165.505Z'\n        fill={color}\n      />\n      <path\n        d='M51.7148 33.1037H57.8095V27.7275H51.7148V33.1037ZM51.7148 56.5236H57.8095V35.4426H51.7148V56.5236Z'\n        fill={color}\n      />\n      <path\n        d='M41.7998 35.458H28.7947V39.8924H40.1997C40.1997 39.8924 42.9137 40.5595 42.9137 42.2469V43.8166H32.5912C32.5912 43.8166 28.5281 44.1855 27.226 49.0437C27.0267 50.3115 27.1043 51.6075 27.4534 52.8424C27.8846 53.8293 28.5578 54.6914 29.4107 55.3486C30.2636 56.0058 31.2685 56.4369 32.3323 56.6018H48.8044V41.5013C48.8044 41.5013 48.02 36.3213 41.8391 35.458H41.7998ZM42.9529 52.4264H34.607C33.9253 52.1905 33.3624 51.6977 33.0383 51.0529C32.9298 50.8055 32.8738 50.5382 32.8738 50.2681C32.8738 49.9979 32.9298 49.7307 33.0383 49.4832C33.4053 48.7454 34.0477 48.1816 34.8267 47.9135H42.9137L42.9529 52.4264Z'\n        fill={color}\n      />\n      <path\n        d='M25.8847 49.1306C25.931 47.668 25.5339 46.2256 24.7458 44.9929C23.9576 43.7602 22.8152 42.795 21.4686 42.224C25.3905 40.1834 24.865 35.0426 24.865 35.0426C24.4414 27.1941 14.8405 27.5473 14.8405 27.5473H0V56.8614H16.7544C26.5985 56.8221 25.8847 49.1306 25.8847 49.1306ZM16.4172 51.4459H6.38489V45.0965H16.3701L16.7074 45.1671C17.2688 45.2853 17.795 45.5326 18.2442 45.8895C18.6935 46.2464 19.0536 46.7031 19.2958 47.2234C19.5122 48.183 19.3432 49.1892 18.8252 50.0253C18.5505 50.4224 18.193 50.7551 17.7772 51.0004C17.3614 51.2457 16.8974 51.3977 16.4172 51.4459ZM18.5507 37.8602C18.2752 38.278 17.9108 38.6296 17.4837 38.8901C17.0566 39.1506 16.5772 39.3135 16.0799 39.3671H6.38489V33.261H16.0407C16.0407 33.261 18.1428 33.1668 18.8331 34.8307C19.0625 35.8319 18.9635 36.8805 18.5507 37.821'\n        fill={color}\n      />\n    </g>\n  </svg>\n);\n","/* eslint-disable max-len */\nimport React from 'react';\n\nexport const IconUnity: React.FC<BaseSvg> = ({ color = 'currentColor', ...rest }) => (\n  <svg\n    width='150'\n    height='80'\n    viewBox='0 0 150 80'\n    fill='none'\n    preserveAspectRatio='true'\n    xmlns='http://www.w3.org/2000/svg'\n    {...rest}\n  >\n    <g>\n      <path\n        d='M54.5505 29.1987L48.58 7L26.3111 12.9686L22.9779 18.7585L16.2887 18.778L0 35.0016L16.2042 51.2382H22.9063L26.2167 57.0834L48.4532 63L54.5602 40.6357L51.1588 34.9594L54.5505 29.1987ZM23.4624 19.6645L40.5869 15.3131L30.8605 32.2219L11.141 32.2804L23.4624 19.6645ZM23.4982 50.3842L11.141 37.7651H30.8149L40.5869 54.6511L23.4982 50.3842ZM45.3769 52.102L35.5139 35.0016L45.3704 18.0182L50.1019 35.0828L45.3769 52.102Z'\n        fill={color}\n      />\n      <path\n        d='M60.7618 30.2607H66.4754V46.2928C66.4754 46.2928 66.2022 50.1636 74.2799 46.2928V30.2607H79.9252V53.0082H75.6522L75.0409 51.2417C75.0409 51.2417 68.5143 54.3656 64.5698 53.4823C60.6252 52.599 60.7618 49.1374 60.7618 48.7315V30.2607Z'\n        fill={color}\n      />\n      <path\n        d='M102.158 53.1116H96.4477V37.0731C96.4477 37.0731 96.7176 33.2023 88.6432 37.0731V53.1116H82.9849V30.3512H87.2676L87.879 32.1177C87.879 32.1177 94.4088 28.9938 98.35 29.8771C102.291 30.7603 102.158 34.222 102.158 34.6311V53.1116Z'\n        fill={color}\n      />\n      <path d='M109.989 20.2812H104.347V26.935H109.989V20.2812Z' fill={color} />\n      <path d='M109.989 30.2607H104.347V53.0991H109.989V30.2607Z' fill={color} />\n      <path\n        d='M114.951 30.2608V24.5552L120.684 23.7109L120.733 30.2608H126.586L126.199 34.7486H120.697L120.746 47.2183C120.746 47.2183 120.746 49.8161 125.624 48.2639L126.274 52.7452C126.274 52.7452 116.135 56.3595 114.948 48.6114V34.7323H111.504V30.2608H114.951Z'\n        fill={color}\n      />\n      <path\n        d='M127.725 30.2607H133.578L138.833 47.4585L143.984 30.2607H150L139.594 62.289H134.118L137.045 53.0991H134.931L127.725 30.2607Z'\n        fill={color}\n      />\n    </g>\n  </svg>\n);\n","/* eslint-disable max-len */\nimport React from 'react';\n\nexport const IconVelodyne: React.FC<BaseSvg> = ({ color = 'currentColor', ...rest }) => (\n  <svg\n    width='332'\n    height='80'\n    viewBox='0 0 332 80'\n    fill='none'\n    preserveAspectRatio='true'\n    xmlns='http://www.w3.org/2000/svg'\n    {...rest}\n  >\n    <g>\n      <path\n        d='M332.147 31.9389V26.4824H329.143C321.394 26.4824 316.454 32.0988 316.454 40.1134V53.756H321.853V40.7123C321.853 35.6221 324.514 31.9389 329.199 31.9389H332.147Z'\n        fill={color}\n      />\n      <path d='M0 17H5.7003L15.2985 44.7475L24.8967 17H30.896L17.9977 53.7592H12.5993L0 17Z' fill={color} />\n      <path d='M61.4927 17H56.0942V53.7563H61.4927V17Z' fill={color} />\n      <path\n        d='M77.2703 48.6435C81.946 48.6435 85.7366 44.8469 85.7366 40.1637C85.7366 35.4834 81.946 31.6868 77.2703 31.6868C72.5974 31.6868 68.8069 35.4834 68.8069 40.1637C68.8069 44.844 72.5974 48.6435 77.2703 48.6435ZM63.5884 40.0503C63.5884 32.4776 69.7153 26.3438 77.2703 26.3438C84.8281 26.3438 90.9551 32.4776 90.9551 40.0503C90.9551 47.6202 84.8281 53.7569 77.2703 53.7569C69.7182 53.7598 63.5884 47.6202 63.5884 40.0503Z'\n        fill={color}\n      />\n      <path\n        d='M163.922 26.4824C156.172 26.4824 151.232 32.0988 151.232 40.1134V53.756H156.631V40.7123C156.631 35.6221 159.292 31.9389 163.974 31.9389C168.656 31.9389 170.606 36.3372 170.606 40.7123C170.606 41.1047 170.559 50.2676 170.539 53.7589H175.949C175.949 53.7589 175.949 40.8809 175.949 40.1163C175.955 33.2238 171.416 26.4824 163.922 26.4824Z'\n        fill={color}\n      />\n      <path\n        d='M200.431 43.6492C199.104 46.594 196.147 48.6435 192.713 48.6435C190.71 48.6435 188.873 47.9429 187.425 46.7801L205.736 35.8293C203.96 30.3264 198.802 26.3438 192.713 26.3438C185.161 26.3438 179.031 32.4776 179.031 40.0503C179.031 47.6202 185.161 53.7569 192.713 53.7569C198.376 53.7569 203.234 50.3121 205.315 45.4021C203.826 44.8789 201.725 44.1172 200.431 43.6492ZM184.25 40.1637C184.25 35.4834 188.037 31.6868 192.71 31.6868C194.91 31.6868 196.913 32.5241 198.416 33.902L184.505 42.2277C184.34 41.5678 184.25 40.8759 184.25 40.1637Z'\n        fill={color}\n      />\n      <path\n        d='M48.8969 43.6492C47.5676 46.594 44.613 48.6435 41.1795 48.6435C39.1768 48.6435 37.3396 47.9429 35.8913 46.7801L54.1996 35.8293C52.4233 30.3264 47.2658 26.3438 41.1795 26.3438C33.6274 26.3438 27.4976 32.4776 27.4976 40.0503C27.4976 47.6202 33.6274 53.7569 41.1795 53.7569C46.842 53.7569 51.7006 50.3121 53.7817 45.4021C52.2927 44.8789 50.1914 44.1172 48.8969 43.6492ZM32.7161 40.1637C32.7161 35.4834 36.5037 31.6868 41.1765 31.6868C43.3737 31.6868 45.3763 32.5241 46.8827 33.902L32.9715 42.2277C32.806 41.5678 32.7161 40.8759 32.7161 40.1637Z'\n        fill={color}\n      />\n      <path\n        d='M142.354 26.4824H142.342V40.0756C142.157 44.878 139.521 48.2996 135.008 48.2996C130.326 48.2996 128.376 43.9042 128.376 39.5262C128.376 39.1338 128.422 29.9708 128.443 26.4824H123.03C123.03 26.4824 123.03 39.3605 123.03 40.125C123.03 47.0176 127.572 53.756 135.063 53.756C137.902 53.756 140.36 53.0002 142.339 51.6514V52.006C142.339 57.0177 140.314 61.8259 131.679 61.8259C130.797 61.8259 124.208 61.8259 123.285 61.8259V67.0004H131.679C145.1 67.0004 147.749 59.9422 147.749 51.2066V40.128V26.4824H142.354Z'\n        fill={color}\n      />\n      <path\n        d='M120.034 40.323C120.037 40.2329 120.04 40.1398 120.04 40.0497C120.04 39.9567 120.034 39.8666 120.034 39.7736V32.9072V29.9595V17H114.348V28.9275C112.099 27.3054 109.342 26.3461 106.355 26.3461C98.8032 26.3461 92.6733 32.4799 92.6733 40.0526C92.6733 47.6225 98.8032 53.7592 106.355 53.7592C113.774 53.7592 119.811 47.8434 120.028 40.4625H120.031V40.323H120.034ZM106.355 48.6429C101.682 48.6429 97.8948 44.8463 97.8948 40.1631C97.8948 35.4828 101.682 31.6862 106.355 31.6862C111.031 31.6862 114.819 35.4828 114.819 40.1631C114.819 44.8434 111.031 48.6429 106.355 48.6429Z'\n        fill={color}\n      />\n      <path\n        d='M282.774 40.448C282.777 40.3579 282.78 40.2648 282.78 40.1747C282.78 40.0817 282.774 39.9916 282.774 39.8986V33.0322V30.0845V17H277.088V29.0525C274.839 27.4304 272.082 26.4711 269.095 26.4711C261.543 26.4711 255.413 32.6049 255.413 40.1776C255.413 47.7475 261.543 53.8842 269.095 53.8842C276.513 53.8842 282.55 47.9684 282.768 40.5875H282.771V40.448H282.774ZM269.095 48.7679C264.422 48.7679 260.634 44.9713 260.634 40.2881C260.634 35.6078 264.422 31.8112 269.095 31.8112C273.771 31.8112 277.558 35.6078 277.558 40.2881C277.561 44.9713 273.771 48.7679 269.095 48.7679Z'\n        fill={color}\n      />\n      <path\n        d='M225.768 38.8985V38.5439V26.9711V17H225.757H220.361V27.0205V38.0991C220.361 46.8289 223.011 53.8842 236.423 53.8842H243.342V48.7126C240.434 48.7126 237.306 48.7126 236.423 48.7126C227.791 48.7126 225.768 43.9044 225.768 38.8985Z'\n        fill={color}\n      />\n      <path d='M308.005 40.0674L307.973 40.7651C307.993 40.5325 308.005 40.2999 308.005 40.0674Z' fill={color} />\n      <path\n        d='M313.217 39.904V39.7645H313.214C312.997 32.3835 306.96 26.4678 299.541 26.4678C291.989 26.4678 285.859 32.6074 285.859 40.1744C285.859 47.7471 291.989 53.8809 299.541 53.8809C302.432 53.8809 305.43 52.9274 307.378 50.8024L304.679 46.7994C303.253 47.8896 301.474 48.5407 299.541 48.5407C294.868 48.5407 291.081 44.7442 291.081 40.0639C291.081 35.3807 294.868 31.5841 299.541 31.5841C304.217 31.5841 308.005 35.3807 308.005 40.0639C308.005 40.2994 307.993 40.529 307.973 40.7616L307.532 50.7443V53.6426H313.217V50.2675V47.3198V40.4534C313.22 40.3604 313.223 40.2703 313.223 40.1773C313.226 40.0871 313.22 39.997 313.217 39.904Z'\n        fill={color}\n      />\n      <path\n        d='M252.105 23.389C251.414 24.0809 250.572 24.4297 249.583 24.4297C248.593 24.4297 247.754 24.0838 247.063 23.389C246.373 22.6972 246.024 21.8541 246.024 20.8657C246.024 19.8744 246.37 19.0343 247.063 18.3395C247.757 17.6448 248.596 17.2988 249.583 17.2988C250.572 17.2988 251.411 17.6448 252.105 18.3395C252.796 19.0314 253.144 19.8744 253.144 20.8657C253.144 21.8541 252.799 22.6942 252.105 23.389ZM246.915 53.8836V26.8542H252.253V53.8836H246.915Z'\n        fill={color}\n      />\n    </g>\n  </svg>\n);\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport MoreArrows from 'src/components/MoreArrows';\nimport Page from 'src/components/Page';\nimport { SectionContent } from 'src/components/Section';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport styled from 'styled-components';\nimport { px } from 'src/utils/theme';\nimport { ButtonGetDemo } from 'src/components/Button';\nimport { IconApollo, IconBaidu, IconUnity, IconVelodyne } from 'src/components/Icons';\n\nconst Center = withTheme(styled(Container)`\n  text-align: center;\n  max-width: ${({ theme }) => px(theme.spacing(90))};\n`);\n\nconst Image = withTheme(styled(Box)`\n  height: 100%;\n  width: 100%;\n  background-image: linear-gradient(-205deg, white, #9c27b0 30%, black);\n  border-radius: 20px;\n`);\n\nconst SmallImage = withTheme(styled(Image)`\n  height: 456px;\n\n  ${({ theme }) => `\n    ${theme.breakpoints.down('sm')} {\n      height: 300px;\n    }\n    ${theme.breakpoints.down('xs')} {\n      height: 200px;\n    }\n  `}\n`);\n\nconst HeroBox = withTheme(styled(Box)`\n  // height: 70vh;\n  background-image: linear-gradient(-205deg, white, #9c27b0 30%, black);\n`);\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n`);\n\nconst TypoWrapper = (str: string) => <Typography>{str}</Typography>;\n\n// type SectionProps = {\n//   buttonText?: string;\n//   children: React.ReactNode;\n//   direction?: GridProps['direction'];\n//   title: string;\n// };\n// const Section = ({ buttonText, children, direction, title }: SectionProps) => (\n//   <Grid container direction='column' spacing={5}>\n//     <Grid item>\n//       <Typography variant='h3'>{title}</Typography>\n//     </Grid>\n//     <Grid item>{children}</Grid>\n//     {buttonText && (\n//       <Grid item>\n//         <Button color='primary' variant='contained'>\n//           {buttonText}\n//         </Button>\n//         {/* <Button variant='outlined'>{buttonText}</Button> */}\n//       </Grid>\n//     )}\n//   </Grid>\n// );\n\nconst brandIconProps = { color: '#6D7B97', height: '100%', width: '100%' };\n\nexport default function Home() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page>\n      <HeroBox mb={15} height='70vh'>\n        <HeroGrid container direction='column' alignItems='center' justify='center'>\n          <Grid item>\n            <Typography variant='h1'>{t('home.title')}</Typography>\n          </Grid>\n          <Grid item>\n            <Center disableGutters>\n              {tMap('home.body', TypoWrapper)}\n              <Box mt={6}>\n                <ButtonGetDemo />\n              </Box>\n            </Center>\n          </Grid>\n        </HeroGrid>\n        <MoreArrows />\n      </HeroBox>\n\n      <Box my={15}>\n        <Grid container>\n          <Grid item xs={6}>\n            <Image />\n          </Grid>\n          <Grid item xs={6}>\n            <SectionContent title={t('home.section1.title')} buttonText='getDemo'>\n              {tMap('home.section1.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box my={15}>\n        <Grid container direction='row-reverse'>\n          <Grid item xs={6}>\n            <Image />\n          </Grid>\n          <Grid item xs={6}>\n            <SectionContent title={t('home.section2.title')} buttonText='getDemo'>\n              {tMap('home.section2.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Box my={15}>\n        <Center disableGutters>\n          <Grid container spacing={8}>\n            <Grid item xs={6} sm={3}>\n              <IconBaidu {...brandIconProps} />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <IconApollo {...brandIconProps} />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <IconUnity {...brandIconProps} />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <IconVelodyne {...brandIconProps} />\n            </Grid>\n          </Grid>\n        </Center>\n      </Box>\n\n      <Box my={15}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent title={t('home.features.0.title')} buttonText='Read More'>\n              {tMap('home.features.0.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent title={t('home.features.1.title')} buttonText='Read More'>\n              {tMap('home.features.1.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SmallImage />\n            <SectionContent title={t('home.features.2.title')} buttonText='Read More'>\n              {tMap('home.features.2.body', TypoWrapper)}\n            </SectionContent>\n          </Grid>\n        </Grid>\n      </Box>\n    </Page>\n  );\n}\n","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button = React.forwardRef((props: ButtonProps, ref) => <StyledButton variant='outlined' {...props} ref={ref} />);\n\nconst ButtonGetDemo = React.forwardRef((props: ButtonProps, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore = React.forwardRef((props: ButtonProps, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </Button>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport { px } from 'src/utils/theme';\nimport Button, { ButtonReadMore, ButtonGetDemo } from 'src/components/Button';\nimport styled from 'styled-components';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst Image = withTheme(styled(Box)`\n  height: 100%;\n  width: 100%;\n  background-image: linear-gradient(-205deg, white, #9c27b0 30%, black);\n  border-radius: 20px;\n`);\n\ntype ContentProps = {\n  buttonText?: string;\n  children: React.ReactNode;\n  direction?: GridProps['direction'];\n  title: string;\n  variant?: TypographyProps['variant'];\n};\nconst Content = ({ buttonText, children, title, variant = 'h5' }: ContentProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore />;\n      break;\n    default:\n      button = <Button>{buttonText}</Button>;\n  }\n  return (\n    <Grid container direction='column' spacing={5}>\n      <Grid item>\n        <Typography variant={variant}>{title}</Typography>\n      </Grid>\n      <Grid item>{children}</Grid>\n      {buttonText && <Grid item>{button}</Grid>}\n    </Grid>\n  );\n};\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n}\n\nconst Section = ({ buttonText, children, flip, title, variant }: SectionProps) => (\n  <SectionContainer component='section'>\n    <StyledPaper elevation={3}>\n      <Grid container spacing={2} direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={6}>\n          <Image />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box p={2}>\n            <Content title={title} buttonText={buttonText} variant={variant}>\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent };\n"],"sourceRoot":""}