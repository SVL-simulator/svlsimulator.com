{"version":3,"sources":["webpack:///./src/videos/simulation-platform.mp4","webpack:///./src/components/Image.tsx","webpack:///./src/images/academics.jpg","webpack:///./src/images/use-cases.png","webpack:///./src/images/robotics.jpg","webpack:///./src/images/future-mobility.png","webpack:///./src/pages/use-cases.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/components/GridBox.tsx"],"names":["module","exports","ImageBase","withTheme","styled","fit","src","rest","Image","props","height","width","minHeight","role","OverlayBox","Box","TypoWrapper","str","i","paragraph","key","UseCases","useTranslation","t","tMap","title","component","maxWidth","position","p","mb","display","alignItems","borderRadius","overflow","top","left","zIndex","srcUseCases","variant","align","contained","srcFutureMobility","video","srcSimulationVideo","flip","srcAcademics","srcRobotics","SpacedSectionContainer","PageSection","theme","px","spacing","TitleGridBox","GridBox","BodyGridBox","tuckImage","fade","palette","background","default","StyledImage","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","buttonText","children","direction","justify","container","item","mt","xs","md","textAlign","undefined","Section","image","imageTag","poster","ImageContainerComponent","id","toLowerCase","replace","addSpacing","Grid"],"mappings":"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","file":"component---src-pages-use-cases-tsx-052a0e53b3e6afbd2440.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/simulation-platform-8970e30d9ed0544d6382c5e0578eaeb5.mp4\";","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & { fit?: 'cover' | 'contain'; src?: HTMLImageElement['src'] };\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit, src, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: ${({ fit = 'cover' }) => fit};\n  background-position: center center;\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","module.exports = __webpack_public_path__ + \"static/academics-223a3d8e22838a0dd005226c0ee0cdfd.jpg\";","module.exports = __webpack_public_path__ + \"static/use-cases-06b4501462e6a50222b66601a09d2096.png\";","module.exports = __webpack_public_path__ + \"static/robotics-adebb36459231768f4d1529e553bbf25.jpg\";","module.exports = __webpack_public_path__ + \"static/future-mobility-fab0424708a1119c5e59b5f2bbfa97fa.png\";","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { MapFunction } from 'src/@types/utils';\nimport DocumentBox from 'src/components/DocumentBox';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { withTheme } from '@material-ui/core/styles';\nimport Image from 'src/components/Image';\nimport Page, { PageSection } from 'src/components/Page';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcAcademics from 'src/images/academics.jpg';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcUseCases from 'src/images/use-cases.png';\nimport srcFutureMobility from 'src/images/future-mobility.png';\nimport srcRobotics from 'src/images/robotics.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\nimport srcCloudVideo from 'src/videos/cloud-simulation.mp4';\nimport srcDigitalTwinVideo from 'src/videos/digital-twin.mp4';\nimport srcSimulationVideo from 'src/videos/simulation-platform.mp4';\n\nconst OverlayBox = withTheme(styled(Box)`\n  text-shadow: 0px 1px 3px black, 0px 1px 20px rgba(0, 0, 0, 0.7);\n`) as React.FC<BoxProps>;\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function UseCases() {\n  const { t, tMap } = useTranslation();\n\n  return (\n    <Page title={t('usecases.navTitle')}>\n      <Container component='section' maxWidth='lg'>\n        <OverlayBox\n          position='relative'\n          p={6}\n          mb={9}\n          height={300}\n          display='flex'\n          alignItems='center'\n          borderRadius='borderRadius'\n          overflow='hidden'\n        >\n          <Image position='absolute' top={0} left={0} zIndex={-1} src={srcUseCases} />\n          <Typography variant='h3' align='center'>\n            {t('usecases.title')}\n          </Typography>\n        </OverlayBox>\n      </Container>\n\n      <Section contained title={t('usecases.section1.title')} src={srcFutureMobility} video={srcSimulationVideo}>\n        {tMap('usecases.section1.body', TypoWrapper)}\n      </Section>\n\n      <Section contained flip title={t('usecases.section2.title')} src={srcAcademics}>\n        {tMap('usecases.section2.body', TypoWrapper)}\n      </Section>\n\n      <Section contained title={t('usecases.section3.title')} src={srcRobotics}>\n        {tMap('usecases.section3.body', TypoWrapper)}\n      </Section>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { fade, withTheme } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ReadMoreButton, RequestDemoButton } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { PageSection, PageSectionProps } from 'src/components/Page';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport BackgroundVideo from './BackgroundVideo';\nimport { LinkProps } from './Link';\n\n// Top of section is offset 9 spacing units so any section hash-linking\n// will link at that document scroll position, which accounts for extra\n// space for the floating fixed app bar header.\nconst SpacedSectionContainer = withTheme(styled(PageSection)`\n  margin-top: ${({ theme }) => px(theme.spacing(-9))};\n  padding-top: ${({ theme }) => px(theme.spacing(9))};\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as React.FC<PageSectionProps<'section', { component: string }>>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`) as React.FC<BoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`) as React.FC<BoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title?: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  tuckImage?: boolean;\n  video?: React.VideoHTMLAttributes<HTMLVideoElement>['src'];\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <RequestDemoButton {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ReadMoreButton {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      {title && (\n        <TitleGridBox item>\n          <Typography variant={variant}>{title}</Typography>\n        </TitleGridBox>\n      )}\n      <BodyGridBox item mt={{ xs: 2, md: 5 }} flip={flip} contained={contained} tuckImage={tuckImage}>\n        {typeof children === 'string' || typeof children === 'number' ? <Typography>{children}</Typography> : children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box textAlign={!flip && contained ? 'end' : undefined}>{button}</Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  buttonProps,\n  children,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video\n}: SectionProps) => {\n  let imageTag =\n    image ||\n    (video ? (\n      <BackgroundVideo src={video} poster={src} borderRadius='borderRadius' fit='cover' />\n    ) : (\n      <StyledImage src={src} />\n    ));\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  return (\n    <SpacedSectionContainer component='section' id={title ? title.toLowerCase().replace(/\\s+/g, '-') : undefined}>\n      <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={6}>\n          {imageTag}\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box position='relative'>\n            <Content\n              title={title}\n              buttonText={buttonText}\n              buttonProps={buttonProps}\n              minHeight={minHeight}\n              variant={variant}\n              contained={contained}\n              flip={flip}\n              tuckImage={tuckImage}\n            >\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </SpacedSectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SpacedSectionContainer component='section' maxWidth={false}>\n    {title ? (\n      <Box mb={{ xs: 2, md: 5 }}>\n        <Typography variant={variant}>{title}</Typography>\n      </Box>\n    ) : null}\n    <StyledImage src={src} />\n    {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n  </SpacedSectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n"],"sourceRoot":""}