{"version":3,"sources":["webpack:///./src/images/lidar.png","webpack:///./src/images/object-detection.png","webpack:///./src/components/Image.tsx","webpack:///./src/images/use-cases.png","webpack:///./src/images/firetruck.jpg","webpack:///./src/components/DocumentBox.tsx","webpack:///./src/pages/use-cases.tsx","webpack:///./src/components/VisualizationFrame.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/components/GridBox.tsx"],"names":["module","exports","ImageBase","withTheme","styled","fit","src","rest","Image","props","height","width","minHeight","role","StyledDocumentBox","Box","theme","palette","background","paper","LabelTypo","Typography","secondary","dark","DocumentBox","title","label","buttonText","to","useTheme","isXs","useMediaQuery","breakpoints","up","iconSize","border","my","p","alignItems","wrap","display","flexDirection","borderRadius","flexGrow","ml","mt","textAlign","variant","buttonVariant","TypoWrapper","str","i","paragraph","key","UseCases","useTranslation","t","tMap","Page","Section","tuckImage","contained","srcUseCases","flip","srcLidar","srcObjectDetection","srcFiretruck","SubscribeBox","StyledPaper","Paper","DimBox","FakeWiseHeader","pb","flexBasis","Grid","container","item","xs","sm","component","color","whiteSpace","style","pointerEvents","VisualizationFrame","children","poster","boxSizing","BackgroundVideo","zIndex","SpacedSectionContainer","PageSection","px","spacing","TitleGridBox","GridBox","BodyGridBox","fade","default","ShadowBox","StyledImage","roundTo","num","toPlaces","Math","round","pow","TuckingBox","imageColumns","ReverseTuckingBox","offset","Content","button","buttonProps","direction","justify","mode","RequestDemoFormMode","ContactUs","Button","mb","md","mr","VisualizationSection","animate","image","video","columnsForImage","columnsForText","EntranceAnimation","disabled","overflow","position","right","imageTag","ImageContainerComponent","id","toLowerCase","replace","undefined","alignSelf","addSpacing"],"mappings":"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","file":"component---src-pages-use-cases-tsx-e0c81754dfdd51a27aa4.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/lidar-fab0424708a1119c5e59b5f2bbfa97fa.png\";","module.exports = __webpack_public_path__ + \"static/object-detection-2063bf771c5b8f4bf973a7b0ad9499c7.png\";","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & { fit?: 'cover' | 'contain'; src?: HTMLImageElement['src'] };\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit, src, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: ${({ fit = 'cover' }) => fit};\n  background-position: center center;\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","module.exports = __webpack_public_path__ + \"static/use-cases-2cc779ccac50ba93ebc6e9b5b60652d6.png\";","module.exports = __webpack_public_path__ + \"static/firetruck-d45466e2016b23fe305a411993c03a35.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport React from 'react';\nimport { LinkButton, LinkButtonProps } from 'src/components/Button';\nimport { IconDocument } from 'src/components/Icons';\nimport styled from 'styled-components';\n\nconst StyledDocumentBox = withTheme(styled(Box)`\n  border-color: ${({ theme }) => theme.palette.background.paper};\n`);\n\nconst LabelTypo = withTheme(styled(Typography)`\n  color: ${({ theme }) => theme.palette.secondary.dark};\n`);\n\nexport interface DocumentBoxProps extends BoxProps {\n  label?: string;\n  buttonText?: string;\n  to?: LinkButtonProps['to'];\n}\n\nconst DocumentBox = ({ title, label, buttonText, to, ...rest }: DocumentBoxProps) => {\n  const theme = useTheme();\n  const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n  const iconSize = isXs ? 42 : 80;\n  return (\n    <StyledDocumentBox\n      border={1}\n      my={4}\n      p={2}\n      alignItems='center'\n      wrap='nowrap'\n      display='flex'\n      flexDirection={isXs ? 'column' : 'row'}\n      borderRadius='borderRadius'\n      {...rest}\n    >\n      <Box>\n        <IconDocument height={iconSize} width={iconSize} />\n      </Box>\n      <Box flexGrow={1} ml={isXs ? 0 : 2} mt={isXs ? 1 : 0} textAlign={isXs ? 'center' : null}>\n        <Typography>{title}</Typography>\n        {label ? <LabelTypo variant='overline'>{label}</LabelTypo> : null}\n      </Box>\n      {buttonText ? (\n        <Box ml={isXs ? 0 : 2} mt={isXs ? 3 : 0}>\n          <LinkButton buttonVariant='outlined' to={to}>\n            {buttonText}\n          </LinkButton>\n        </Box>\n      ) : null}\n    </StyledDocumentBox>\n  );\n};\n\nexport default DocumentBox;\nexport { DocumentBox };\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport DocumentBox from 'src/components/DocumentBox';\nimport Page, { PageSection } from 'src/components/Page';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcUseCases from 'src/images/use-cases.png';\nimport srcFiretruck from 'src/images/firetruck.jpg';\nimport srcLidar from 'src/images/lidar.png';\nimport srcObjectDetection from 'src/images/object-detection.png';\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function UseCases() {\n  const { t, tMap } = useTranslation();\n\n  return (\n    <Page title={t('usecases.navTitle')}>\n      <Section tuckImage contained title={t('usecases.title')} src={srcUseCases} variant='h3'>\n        {t('usecases.body')}\n      </Section>\n\n      <Section flip title={t('usecases.section1.title')} src={srcLidar}>\n        {tMap('usecases.section1.body', TypoWrapper)}\n      </Section>\n\n      <Section title={t('usecases.section2.title')} src={srcObjectDetection}>\n        {tMap('usecases.section2.body', TypoWrapper)}\n      </Section>\n\n      <Section flip title={t('usecases.section3.title')} src={srcFiretruck}>\n        {tMap('usecases.section3.body', TypoWrapper)}\n      </Section>\n\n      <PageSection>\n        <DocumentBox\n          title={t('usecases.files.0')}\n          label={t('main.documentTypes.technical')}\n          buttonText={t('main.buttons.download')}\n          to='https://arxiv.org/pdf/2005.03778.pdf'\n        />\n\n        <DocumentBox\n          title={t('usecases.files.1')}\n          label={t('main.documentTypes.technical')}\n          buttonText={t('main.buttons.download')}\n          to='https://arxiv.org/pdf/2003.07739.pdf'\n        />\n      </PageSection>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport React from 'react';\n// import { LinkButton, LinkButtonProps } from 'src/components/Button';\nimport BackgroundVideo, { BackgroundVideoProps } from 'src/components/BackgroundVideo';\nimport styled from 'styled-components';\n\nconst StyledPaper = withTheme(styled(Paper)`\n  border-radius: 16px;\n`) as React.FC<PaperProps>;\n\nconst DimBox = withTheme(styled(Box)`\n  background-color: rgba(0, 0, 0, 0.2);\n\n  dt,\n  dd {\n    display: inline-block;\n  }\n  dt {\n    margin-right: 1ex;\n  }\n`) as React.FC<BoxProps>;\n\nconst FakeWiseHeader: React.FC<BoxProps> = props => (\n  <Box pb={2} display='flex' alignItems='center' {...props}>\n    <DimBox flexBasis='100%' p={2} borderRadius='borderRadius'>\n      <Grid container>\n        <Grid item xs={12} sm={6} component='dl'>\n          <Typography component='dt' color='textSecondary'>\n            Bridge:\n          </Typography>\n          <Typography component='dd'>ROS1</Typography>\n          <br />\n          <Typography component='dt' color='textSecondary'>\n            Sensors configuration:\n          </Typography>\n          <Typography component='dd'>My config</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} component='dl'>\n          <Typography component='dt' color='textSecondary'>\n            Asset bundle version:\n          </Typography>\n          <Typography component='dd'>A</Typography>\n          <br />\n          <Typography component='dt' color='textSecondary'>\n            Connection:\n          </Typography>\n          <Typography component='dd'>localhost:9090</Typography>\n        </Grid>\n      </Grid>\n    </DimBox>\n    <DimBox ml={2} p={1} borderRadius='borderRadius' whiteSpace='nowrap' style={{ pointerEvents: 'none' }}>\n      <Button style={{ width: '50%' }}>Analysis</Button>\n      <Button style={{ width: '50%' }} variant='contained' color='primary'>\n        Visualization\n      </Button>\n    </DimBox>\n  </Box>\n);\n\nexport type VisualizationFrameProps = PaperProps & Pick<BackgroundVideoProps, 'src' | 'poster'>;\n\nconst VisualizationFrame = ({ children, poster, src, ...rest }: VisualizationFrameProps) => {\n  const theme = useTheme();\n  // const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n  // const iconSize = isXs ? 42 : 80;\n  return (\n    <StyledPaper {...rest}>\n      <Box p={2} width={992} height={1} display='flex' flexDirection='column' boxSizing='border-box'>\n        <FakeWiseHeader />\n        <Box flexBasis='100%'>\n          <BackgroundVideo poster={poster} src={src} zIndex='auto'>\n            {children}\n          </BackgroundVideo>\n        </Box>\n      </Box>\n    </StyledPaper>\n  );\n};\n\nexport default VisualizationFrame;\nexport { VisualizationFrame };\n","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { fade, withTheme } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ReadMoreButton, RequestDemoButton } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { PageSection, PageSectionProps } from 'src/components/Page';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport BackgroundVideo from './BackgroundVideo';\nimport EntranceAnimation from './EntranceAnimation';\nimport { LinkProps } from './Link';\nimport VisualizationFrame, { VisualizationFrameProps } from 'src/components/VisualizationFrame';\nimport { RequestDemoFormMode } from 'src/@types/shared.d';\n\n// Top of section is offset 9 spacing units so any section hash-linking\n// will link at that document scroll position, which accounts for extra\n// space for the floating fixed app bar header.\nconst SpacedSectionContainer = withTheme(styled(PageSection)`\n  margin-top: ${({ theme }) => px(theme.spacing(-9))};\n  padding-top: ${({ theme }) => px(theme.spacing(9))};\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as React.FC<PageSectionProps<'section', { component: string }>>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  /** Adds a little faded background behind the text, but only if `tuckImage` is also true. */\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\ninterface ShadowBoxProps extends BoxProps {\n  flip?: boolean;\n}\nconst ShadowBox = withTheme(styled(({ flip, ...rest }: ShadowBoxProps) => <Box {...rest} />)`\n  -webkit-mask-image: -webkit-gradient(\n    linear,\n    ${({ flip }) => (flip ? 'left top, right top' : 'right top, left top')},\n    color-stop(0, ${({ theme }) => fade(theme.palette.background.paper, 1)}),\n    color-stop(0.85, ${({ theme }) => fade(theme.palette.background.paper, 1)}),\n    color-stop(0.9, ${({ theme }) => fade(theme.palette.background.paper, 0.7)}),\n    color-stop(0.95, ${({ theme }) => fade(theme.palette.background.paper, 0.3)}),\n    color-stop(1, ${({ theme }) => fade(theme.palette.background.paper, 0)})\n  );\n`) as React.FC<ShadowBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleOneColumn = 2 / 12;\n\nexport type ColumnsType = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nexport type TuckingBoxProps = BoxProps & {\n  imageColumns: ColumnsType;\n};\n\nconst TuckingBox = withTheme(styled(({ imageColumns, ...rest }) => <Box {...rest} />)`\n  ${({ imageColumns, theme }) => `\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${theme.breakpoints.up('md')} {\n    width: ${roundTo(doubleOneColumn * imageColumns * 100, 4)}%;\n  }\n`}\n`) as React.FC<TuckingBoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ imageColumns, theme }) => {\n    // Avoid the godforsaken prettier rule that takes out mandatory parenthesis\n    const offset = doubleOneColumn * imageColumns * -100;\n    return `\n      ${theme.breakpoints.up('md')} {\n        margin-inline-start: ${roundTo(offset + 100, 4)}%;\n      }\n    `;\n  }}\n`) as React.FC<TuckingBoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title?: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  imageColumns?: ColumnsType;\n  tuckImage?: boolean;\n  video?: React.VideoHTMLAttributes<HTMLVideoElement>['src'];\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'contactUs':\n      button = (\n        <RequestDemoButton mode={RequestDemoFormMode.ContactUs} color='secondary' variant='outlined' {...buttonProps} />\n      );\n      break;\n    case 'getDemo':\n      button = <RequestDemoButton {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ReadMoreButton {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      {title && (\n        <TitleGridBox item mb={{ xs: 2, md: 5 }}>\n          <Typography variant={variant}>{title}</Typography>\n        </TitleGridBox>\n      )}\n      <BodyGridBox item flip={flip} contained={contained} tuckImage={tuckImage}>\n        {typeof children === 'string' || typeof children === 'number' ? <Typography>{children}</Typography> : children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box ml={!flip && contained ? -2 : 0} mr={flip && contained ? -2 : 0}>\n            {button}\n          </Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  buttonProps,\n  children,\n  imageColumns,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video\n}: SectionProps) => {\n  // If an amount of imageColumns was not set, but it is a tuckImage, go ahead and set a default value.\n  if (!imageColumns) {\n    imageColumns = tuckImage ? 8 : 6;\n  }\n\n  let imageTag =\n    image ||\n    (video ? (\n      <BackgroundVideo src={video} poster={src} borderRadius='borderRadius' fit='cover' />\n    ) : (\n      <StyledImage src={src} />\n    ));\n\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent imageColumns={imageColumns}>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  let columnsForImage: GridBoxProps['md'] = imageColumns;\n  let columnsForText: GridBoxProps['md'] =\n    typeof columnsForImage === 'number' ? ((12 - columnsForImage) as GridBoxProps['md']) : columnsForImage;\n\n  if (tuckImage) {\n    columnsForImage = 6;\n    columnsForText = 6;\n  }\n\n  return (\n    <SpacedSectionContainer component='section' id={title ? title.toLowerCase().replace(/\\s+/g, '-') : undefined}>\n      <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'} alignItems='center'>\n        <Grid item xs={12} md={columnsForImage} style={{ alignSelf: 'stretch' }}>\n          {imageTag}\n        </Grid>\n        <Grid item xs={12} md={columnsForText}>\n          <Box position='relative'>\n            <Content\n              title={title}\n              buttonText={buttonText}\n              buttonProps={buttonProps}\n              minHeight={minHeight}\n              variant={variant}\n              contained={contained}\n              flip={flip}\n              tuckImage={tuckImage}\n            >\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </SpacedSectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SpacedSectionContainer component='section' maxWidth={false}>\n    {title ? (\n      <Box mb={{ xs: 2, md: 5 }}>\n        <Typography variant={variant}>{title}</Typography>\n      </Box>\n    ) : null}\n    <StyledImage src={src} />\n    {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n  </SpacedSectionContainer>\n);\n\nexport type VisualizationSectionProps = BoxProps & SectionProps & { animate?: boolean };\n\nconst VisualizationSection: React.FC<VisualizationSectionProps> = ({\n  animate,\n  buttonProps,\n  buttonText = 'contactUs',\n  children,\n  contained,\n  flip,\n  image,\n  imageColumns,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video,\n  ...rest\n}) => {\n  // If an amount of imageColumns was not set, but it is a tuckImage, go ahead and set a default value.\n  if (!imageColumns) {\n    imageColumns = tuckImage ? 8 : 6;\n  }\n\n  let columnsForImage: GridBoxProps['md'] = imageColumns;\n  let columnsForText: GridBoxProps['md'] =\n    typeof columnsForImage === 'number' ? ((12 - columnsForImage) as GridBoxProps['md']) : columnsForImage;\n\n  if (tuckImage) {\n    columnsForImage = 6;\n    columnsForText = 6;\n  }\n\n  return (\n    <Box {...rest}>\n      <EntranceAnimation disabled={!animate}>\n        <Grid container spacing={2} alignItems='center' direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={columnsForImage} style={{ overflow: 'hidden', height: 570 }}>\n            <ShadowBox position='relative' height={1} overflow='hidden' flip={flip}>\n              <VisualizationFrame\n                poster={src}\n                src={video}\n                style={{ position: 'absolute', right: flip ? 'auto' : 0, height: '100%' }}\n              />\n            </ShadowBox>\n          </Grid>\n          <Grid item xs={12} md={columnsForText}>\n            {/* <Typography variant='h4'>{title}</Typography>\n          {children}\n          <RequestDemoButton mode={RequestDemoFormMode.ContactUs} /> */}\n            <EntranceAnimation disabled={!animate}>\n              <Content\n                title={title}\n                buttonText={buttonText}\n                buttonProps={buttonProps}\n                minHeight={minHeight}\n                variant={variant}\n                contained={contained}\n                flip={flip}\n              >\n                {children}\n              </Content>\n            </EntranceAnimation>\n          </Grid>\n        </Grid>\n      </EntranceAnimation>\n    </Box>\n  );\n};\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection, VisualizationSection };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n"],"sourceRoot":""}