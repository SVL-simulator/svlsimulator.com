{"version":3,"sources":["webpack:///./src/images/simulation-platform.jpg","webpack:///./src/components/PagePreviewBox.tsx","webpack:///./src/images/cloud-simulation.jpg","webpack:///./src/components/Button.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/utils/addSpacing.ts","webpack:///./src/components/Section.tsx","webpack:///./src/pages/product/cloud.tsx","webpack:///./src/components/Li.tsx","webpack:///./src/images/digital-twin.jpg"],"names":["module","exports","StyledPagePreviewBox","withTheme","styled","src","rest","PagePreviewBox","title","link","buttonText","mt","xs","md","p","alignItems","wrap","display","flexDirection","mb","to","CloudPreviewBox","t","useTranslation","srcCloudPoster","DigitalTwinPreviewBox","srcDigitalTwinPoster","SimulationPreviewBox","srcSimulationPoster","StyledButton","MuiButton","Button","React","forwardRef","props","ref","variant","ButtonGetDemo","color","ButtonReadMore","buttonVariant","GridBox","Comp","muiStyled","spacing","addSpacing","Grid","SectionContainer","Container","theme","px","StyledPaper","Paper","TitleGridBox","BodyGridBox","Image","Box","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","children","container","direction","item","Typography","my","FullWidthSection","component","disableGutters","elevation","Children","toArray","filter","c","Boolean","length","countChildren","Section","flip","image","tuckImage","imageTag","ImageContainerComponent","position","ListItemWrapper","str","i","key","CloudSimAAS","tMap","sm","Li","ListItemText"],"mappings":"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","file":"component---src-pages-product-cloud-tsx-f7b1ed57b715b0f7f80d.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/simulation-platform-37a96777ce2c1bf70b36ca13b1c9c458.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { withTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { ButtonReadMore } from 'src/components/Button';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\n\nconst StyledPagePreviewBox = withTheme(styled(({ src, ...rest }) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n`);\n\nconst PagePreviewBox = ({\n  title,\n  buttonText,\n  link,\n  ...rest\n}: BoxProps & { buttonText?: string; link: string; src: string }) => (\n  <StyledPagePreviewBox\n    mt={{ xs: 8, md: 16 }}\n    p={4}\n    alignItems='center'\n    wrap='nowrap'\n    display='flex'\n    flexDirection='column'\n    {...rest}\n  >\n    <Box mb={3}>\n      <Typography>{title}</Typography>\n    </Box>\n    <Box>\n      <ButtonReadMore to={link} />\n    </Box>\n  </StyledPagePreviewBox>\n);\n\nconst CloudPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('cloud.title')} link='/product/cloud' src={srcCloudPoster} />;\n};\n\nconst DigitalTwinPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('digitaltwin.title')} link='/product/digitaltwin' src={srcDigitalTwinPoster} />;\n};\n\nconst SimulationPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('simulation.title')} link='/product/simulation' src={srcSimulationPoster} />;\n};\n\nexport default PagePreviewBox;\nexport { PagePreviewBox, CloudPreviewBox, SimulationPreviewBox, DigitalTwinPreviewBox };\n","module.exports = __webpack_public_path__ + \"static/cloud-simulation-b834b11be46add0489efb4c057935af7.jpg\";","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport Link from './Link';\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button: React.ForwardRefExoticComponent<ButtonProps> = React.forwardRef((props, ref) => (\n  <StyledButton variant='outlined' {...props} ref={ref} />\n));\n\nconst ButtonGetDemo: typeof Button = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore: typeof LinkButton = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <LinkButton buttonVariant='outlined' {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </LinkButton>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import Grid from '@material-ui/core/Grid';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\n\nexport default GridBox;\nexport { GridBox };\n","import { styled as muiStyled } from '@material-ui/core/styles';\nimport { spacing, SpacingProps } from '@material-ui/system';\n\ntype SpacedComponent<T> = React.FC<\n  T &\n    SpacingProps & {\n      component?: React.ComponentType | keyof JSX.IntrinsicElements;\n    }\n>;\n\n// Add the `spacing` props to the component\nconst addSpacing = <T>(Comp: React.FC<T>) => muiStyled(Comp)(spacing) as SpacedComponent<T>;\n\nexport default addSpacing;\nexport { addSpacing };\n","import { ButtonProps, withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonGetDemo, ButtonReadMore } from 'src/components/Button';\nimport GridBox from 'src/components/GridBox';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { LinkProps } from './Link';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as typeof GridBox;\n\nconst BodyGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n`) as typeof GridBox;\n\nconst Image = withTheme(styled(({ src, ...rest }) => <Box {...rest} />)`\n  height: 100%;\n  width: 100%;\n  min-height: 300px;\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 8px;\n`);\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`);\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`);\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n  direction?: GridProps['direction'];\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  tuckImage?: boolean;\n}\n\nconst Content = ({ buttonProps, buttonText, children, title, variant = 'h4' }: ContentProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <Grid container direction='column'>\n      <TitleGridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </TitleGridBox>\n      <BodyGridBox item my={{ xs: 2, md: 5 }}>\n        {children}\n      </BodyGridBox>\n      {buttonText && <GridBox item>{button}</GridBox>}\n    </Grid>\n  );\n};\n\nconst Section = ({ buttonText, children, flip, image, src, title, tuckImage, variant }: SectionProps) => {\n  let imageTag = image || <Image src={src} />;\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n  return (\n    <SectionContainer component='section' disableGutters>\n      <StyledPaper elevation={0}>\n        <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={6}>\n            {imageTag}\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box position='relative'>\n              <Content title={title} buttonText={buttonText} variant={variant}>\n                {children}\n              </Content>\n            </Box>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </SectionContainer>\n  );\n};\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SectionContainer component='section' disableGutters>\n    <StyledPaper elevation={0}>\n      <Box>\n        {title ? (\n          <Box mb={{ xs: 2, md: 5 }}>\n            <Typography variant={variant}>{title}</Typography>\n          </Box>\n        ) : null}\n        <Image src={src} />\n        {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n      </Box>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","import Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport Li from 'src/components/Li';\nimport Page from 'src/components/Page';\nimport { SimulationPreviewBox, DigitalTwinPreviewBox } from 'src/components/PagePreviewBox';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\n\nconst ListItemWrapper: MapFunction = (str, i) => (\n  <ListItem key={`${str}${i}`}>\n    <Li>{str}</Li>\n  </ListItem>\n);\n\nexport default function CloudSimAAS() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('cloud.title')}>\n      <Section title={t('cloud.title')} variant='h3' buttonText='getDemo' src={srcCloudPoster} tuckImage flip>\n        <List>{tMap('cloud.body', ListItemWrapper)}</List>\n      </Section>\n\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <SimulationPreviewBox />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <DigitalTwinPreviewBox />\n        </Grid>\n      </Grid>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import ListItemText, { ListItemTextProps } from '@material-ui/core/ListItemText';\nimport { withTheme } from '@material-ui/core/styles';\nimport styled from 'styled-components';\n\nconst Li = withTheme(styled(ListItemText)`\n  .MuiTypography-displayBlock {\n    display: inline-block;\n    text-indent: -1em;\n\n    &::before {\n      content: '–';\n      display: inline-block;\n      width: 1em;\n      text-indent: 0.2em;\n    }\n  }\n`);\n\nexport default Li;\nexport { Li };\n","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}