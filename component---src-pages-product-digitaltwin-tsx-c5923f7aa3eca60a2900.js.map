{"version":3,"sources":["webpack:///./src/images/digitaltwin4.png","webpack:///./src/components/Image.tsx","webpack:///./src/pages/product/digitaltwin.tsx","webpack:///./src/images/digitaltwin2.png","webpack:///./src/videos/digital-twin.mp4","webpack:///./src/components/Section.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/images/digitaltwin3.png","webpack:///./src/images/digital-twin.jpg"],"names":["module","exports","ImageBase","withTheme","styled","fit","src","rest","Image","props","height","width","minHeight","role","DigitalTwin","useTranslation","t","tMap","title","buttonText","srcTwinImg1","video","srcDigitalTwinVideo","tuckImage","variant","flip","srcTwinImg2","srcTwinImg3","srcTwinImg4","SpacedSectionContainer","PageSection","theme","px","spacing","TitleGridBox","GridBox","BodyGridBox","contained","fade","palette","background","default","StyledImage","borderRadius","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","Box","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","children","direction","justify","container","item","mt","xs","md","textAlign","undefined","Section","image","imageTag","poster","ImageContainerComponent","component","id","toLowerCase","replace","position","addSpacing","Grid"],"mappings":"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","file":"component---src-pages-product-digitaltwin-tsx-c5923f7aa3eca60a2900.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/digitaltwin4-4447591599ff0d6cb12e7b45f5112694.png\";","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & { fit?: 'cover' | 'contain'; src?: HTMLImageElement['src'] };\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit, src, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: ${({ fit = 'cover' }) => fit};\n  background-position: center center;\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","import Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport Page, { PageSection, PageSectionFullWidth } from 'src/components/Page';\nimport { CloudPreviewBox, SimulationPreviewBox } from 'src/components/PagePreviewBox';\nimport Section, { FullWidthSection } from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcDigitalTwinFull from 'src/images/digital-twin-full-environment.jpg';\nimport srcDigitalTwinLite from 'src/images/digital-twin-lite-environment.jpg';\nimport srcTwinImg1 from 'src/images/digital-twin.jpg';\nimport srcTwinImg2 from 'src/images/digitaltwin2.png';\nimport srcTwinImg3 from 'src/images/digitaltwin3.png';\nimport srcTwinImg4 from 'src/images/digitaltwin4.png';\nimport srcDigitalTwinVideo from 'src/videos/digital-twin.mp4';\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function DigitalTwin() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('digitaltwin.title')}>\n      <Section\n        buttonText='getDemo'\n        src={srcTwinImg1}\n        video={srcDigitalTwinVideo}\n        title={t('digitaltwin.title')}\n        tuckImage\n        variant='h3'\n      >\n        {t('digitaltwin.body')}\n      </Section>\n\n      <Section flip src={srcTwinImg2}>\n        {t('digitaltwin.section1.body')}\n      </Section>\n\n      <Section src={srcTwinImg3}>{t('digitaltwin.section2.body')}</Section>\n\n      <Section flip src={srcTwinImg4}>\n        {t('digitaltwin.section3.body')}\n      </Section>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/digitaltwin2-5e97b308b62d9e869ca3c6bf834d861a.png\";","module.exports = __webpack_public_path__ + \"static/digital-twin-cad342468901a0479c8b992438ce4192.mp4\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { fade, withTheme } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ReadMoreButton, RequestDemoButton } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { PageSection, PageSectionProps } from 'src/components/Page';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport BackgroundVideo from './BackgroundVideo';\nimport { LinkProps } from './Link';\n\n// Top of section is offset 9 spacing units so any section hash-linking\n// will link at that document scroll position, which accounts for extra\n// space for the floating fixed app bar header.\nconst SpacedSectionContainer = withTheme(styled(PageSection)`\n  margin-top: ${({ theme }) => px(theme.spacing(-9))};\n  padding-top: ${({ theme }) => px(theme.spacing(9))};\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`) as React.FC<PageSectionProps<'section', { component: string }>>;\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`) as React.FC<GridBoxProps>;\n\ninterface StyledBodyGridBoxProps {\n  contained?: boolean;\n  flip?: boolean;\n  tuckImage?: boolean;\n}\n\ninterface BodyGridBoxProps extends GridBoxProps, StyledBodyGridBoxProps {}\n\nconst BodyGridBox = withTheme(styled(({ contained, flip, tuckImage, ...rest }: BodyGridBoxProps) => (\n  <GridBox {...rest} />\n))`\n  ${({ contained, flip, tuckImage, theme }) => `\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  ${\n    tuckImage && contained\n      ? `\n    padding: ${px(theme.spacing(2, flip ? 2 : 0, 2, !flip ? 2 : 0))};\n    background-color: ${fade(theme.palette.background.default, 0.6)};\n    border-radius: 8px;\n    ${!flip ? `margin-left: ${px(theme.spacing(-2))};` : ''}\n  `\n      : ''\n  }\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`}\n`) as React.FC<BodyGridBoxProps>;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`) as React.FC<BoxProps>;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`) as React.FC<BoxProps>;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title?: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps, StyledBodyGridBoxProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  tuckImage?: boolean;\n  video?: React.VideoHTMLAttributes<HTMLVideoElement>['src'];\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  contained,\n  direction = 'column',\n  flip,\n  justify = 'center',\n  title,\n  tuckImage,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <RequestDemoButton {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ReadMoreButton {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      {title && (\n        <TitleGridBox item>\n          <Typography variant={variant}>{title}</Typography>\n        </TitleGridBox>\n      )}\n      <BodyGridBox item mt={{ xs: 2, md: 5 }} flip={flip} contained={contained} tuckImage={tuckImage}>\n        {typeof children === 'string' || typeof children === 'number' ? <Typography>{children}</Typography> : children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          <Box textAlign={!flip && contained ? 'end' : undefined}>{button}</Box>\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({\n  buttonText,\n  buttonProps,\n  children,\n  contained,\n  flip,\n  image,\n  minHeight,\n  src,\n  title,\n  tuckImage,\n  variant,\n  video\n}: SectionProps) => {\n  let imageTag =\n    image ||\n    (video ? (\n      <BackgroundVideo src={video} poster={src} borderRadius='borderRadius' fit='cover' />\n    ) : (\n      <StyledImage src={src} />\n    ));\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  return (\n    <SpacedSectionContainer component='section' id={title ? title.toLowerCase().replace(/\\s+/g, '-') : undefined}>\n      <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n        <Grid item xs={12} md={6}>\n          {imageTag}\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box position='relative'>\n            <Content\n              title={title}\n              buttonText={buttonText}\n              buttonProps={buttonProps}\n              minHeight={minHeight}\n              variant={variant}\n              contained={contained}\n              flip={flip}\n              tuckImage={tuckImage}\n            >\n              {children}\n            </Content>\n          </Box>\n        </Grid>\n      </Grid>\n    </SpacedSectionContainer>\n  );\n};\n\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SpacedSectionContainer component='section' maxWidth={false}>\n    {title ? (\n      <Box mb={{ xs: 2, md: 5 }}>\n        <Typography variant={variant}>{title}</Typography>\n      </Box>\n    ) : null}\n    <StyledImage src={src} />\n    {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n  </SpacedSectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","module.exports = __webpack_public_path__ + \"static/digitaltwin3-07f34d14867faefb302adf26ee9d5a59.png\";","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}