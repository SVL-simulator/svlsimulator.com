{"version":3,"sources":["webpack:///./src/images/academics.jpg","webpack:///./src/images/robotics.jpg","webpack:///./src/images/future-mobility-solutions.jpg","webpack:///./src/components/DocumentBox.tsx","webpack:///./src/pages/applications.tsx"],"names":["module","exports","StyledDocumentBox","withTheme","styled","Box","theme","palette","background","paper","LabelTypo","Typography","secondary","dark","DocumentBox","title","label","buttonText","rest","useTheme","isXs","useMediaQuery","breakpoints","up","iconSize","border","my","p","alignItems","wrap","display","flexDirection","borderRadius","height","width","flexGrow","ml","mt","textAlign","variant","Button","TypoWrapper","str","i","paragraph","key","Applications","useTranslation","t","tMap","Page","Section","src","srcFuture","tuckImage","flip","srcSimulationPoster","video","srcSimulationVideo","buttonProps","to","srcDigitalTwinPoster","srcDigitalTwinVideo","srcCloudPoster","srcCloudVideo","contained","srcAcademics","srcRobotics","SubscribeBox"],"mappings":"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","file":"component---src-pages-applications-tsx-2168c80a3a7c39d05902.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/academics-223a3d8e22838a0dd005226c0ee0cdfd.jpg\";","module.exports = __webpack_public_path__ + \"static/robotics-adebb36459231768f4d1529e553bbf25.jpg\";","module.exports = __webpack_public_path__ + \"static/future-mobility-solutions-f64da3c83062db99b1f167b80cfbf48e.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { useTheme, withTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button from 'src/components/Button';\nimport { IconDocument } from 'src/components/Icons';\nimport styled from 'styled-components';\n\nconst StyledDocumentBox = withTheme(styled(Box)`\n  border-color: ${({ theme }) => theme.palette.background.paper};\n`);\n\nconst LabelTypo = withTheme(styled(Typography)`\n  color: ${({ theme }) => theme.palette.secondary.dark};\n`);\n\nconst DocumentBox = ({ title, label, buttonText, ...rest }: BoxProps & { label?: string; buttonText?: string }) => {\n  const theme = useTheme();\n  const isXs = !useMediaQuery(theme.breakpoints.up('sm'));\n  const iconSize = isXs ? 42 : 80;\n  return (\n    <StyledDocumentBox\n      border={1}\n      my={4}\n      p={2}\n      alignItems='center'\n      wrap='nowrap'\n      display='flex'\n      flexDirection={isXs ? 'column' : 'row'}\n      borderRadius='borderRadius'\n      {...rest}\n    >\n      <Box>\n        <IconDocument height={iconSize} width={iconSize} />\n      </Box>\n      <Box flexGrow={1} ml={isXs ? 0 : 2} mt={isXs ? 1 : 0} textAlign={isXs ? 'center' : null}>\n        <Typography>{title}</Typography>\n        {label ? <LabelTypo variant='overline'>{label}</LabelTypo> : null}\n      </Box>\n      {buttonText ? (\n        <Box ml={isXs ? 0 : 2} mt={isXs ? 3 : 0}>\n          <Button>{buttonText}</Button>\n        </Box>\n      ) : null}\n    </StyledDocumentBox>\n  );\n};\n\nexport default DocumentBox;\nexport { DocumentBox };\n","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport DocumentBox from 'src/components/DocumentBox';\nimport Page from 'src/components/Page';\nimport Section from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcAcademics from 'src/images/academics.jpg';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcFuture from 'src/images/future-mobility-solutions.jpg';\nimport srcRobotics from 'src/images/robotics.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\nimport srcCloudVideo from 'src/videos/cloud-simulation.mp4';\nimport srcDigitalTwinVideo from 'src/videos/digital-twin.mp4';\nimport srcSimulationVideo from 'src/videos/simulation-platform.mp4';\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function Applications() {\n  const { t, tMap } = useTranslation();\n\n  return (\n    <Page title={t('applications.title')}>\n      <Section buttonText='getDemo' src={srcFuture} title={t('applications.title')} tuckImage variant='h3'>\n        {tMap('applications.body', TypoWrapper)}\n      </Section>\n\n      <Section\n        flip\n        title={t('applications.section1.title')}\n        src={srcSimulationPoster}\n        video={srcSimulationVideo}\n        buttonText='readMore'\n        buttonProps={{ to: '/product/simulation/', title: t('home.features.0.title') }}\n      >\n        {tMap('applications.section1.body', TypoWrapper)}\n      </Section>\n\n      <Section\n        title={t('applications.section2.title')}\n        src={srcDigitalTwinPoster}\n        video={srcDigitalTwinVideo}\n        buttonText='readMore'\n        buttonProps={{ to: '/product/digitaltwin/', title: t('home.features.2.title') }}\n      >\n        {tMap('applications.section2.body', TypoWrapper)}\n      </Section>\n\n      <Section\n        flip\n        title={t('applications.section3.title')}\n        src={srcCloudPoster}\n        video={srcCloudVideo}\n        buttonText='readMore'\n        buttonProps={{ to: '/product/cloud/', title: t('home.features.1.title') }}\n      >\n        {tMap('applications.section3.body', TypoWrapper)}\n      </Section>\n\n      <DocumentBox\n        title={t('applications.files.0')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <Section contained title={t('applications.section4.title')} src={srcAcademics} tuckImage buttonText='getDemo'>\n        {tMap('applications.section4.body', TypoWrapper)}\n      </Section>\n\n      <DocumentBox\n        title={t('applications.files.1')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <Section contained flip title={t('applications.section5.title')} src={srcRobotics} tuckImage buttonText='getDemo'>\n        {tMap('applications.section5.body', TypoWrapper)}\n      </Section>\n\n      <DocumentBox\n        title={t('applications.files.0')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <DocumentBox\n        title={t('applications.files.1')}\n        label={t('main.documentTypes.technical')}\n        buttonText={t('main.buttons.download')}\n      />\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n"],"sourceRoot":""}