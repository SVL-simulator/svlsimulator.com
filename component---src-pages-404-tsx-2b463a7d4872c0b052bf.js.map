{"version":3,"sources":["webpack:///./src/images/subscription.webp","webpack:///./src/components/BackgroundImage.tsx","webpack:///./src/components/Image.tsx","webpack:///./node_modules/supports-webp-sync/index.js","webpack:///./src/images/subscription.jpg","webpack:///./src/components/Center.tsx","webpack:///./src/pages/404.tsx","webpack:///./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","webpack:///./src/components/SubscribeBox.tsx"],"names":["module","exports","BackgroundImage","children","fit","src","zIndex","rest","height","width","minHeight","ImageBase","withTheme","styled","webp","bgPosition","Box","window","match","navigator","userAgent","e","document","createElement","toDataURL","indexOf","checkWebPSupport","Image","props","role","Center","addSpacing","Container","HeroGrid","Grid","About","test","location","pathname","maxHeight","container","alignItems","justify","maxWidth","variant","color","ref","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","other","muiFormControl","FormControlContext","Provider","value","root","hiddenLabel","filled","positionStart","positionEnd","margin","marginDense","Typography","withStyles","display","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","FullHeightGrid","StyledInput","Input","StyledInputAdornment","InputAdornment","TransitioningButton","Button","theme","transitions","create","easing","sharp","duration","enteringScreen","SubscribeBox","animate","t","useTranslation","useFormik","initialValues","b_226621ee7c79910b83d6c77b8_c9a899ac03","EMAIL","validationSchema","yup","email","required","onSubmit","data","setSubmitting","handleChange","handleBlur","isSubmitting","values","touched","errors","dirty","isValid","submitVisible","Boolean","commonTextInputProps","onChange","onBlur","InputLabelProps","shrink","fullWidth","Page","mb","imgSrcSubscribe","webpSrcSubscribe","title","EntranceAnimation","disabled","p","xs","sm","md","item","gutterBottom","noValidate","action","method","target","left","aria-hidden","tabIndex","defaultValue","id","label","placeholder","error","helperText","InputProps","endAdornment","style","undefined","opacity","aria-label","size","type"],"mappings":"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","file":"component---src-pages-404-tsx-2b463a7d4872c0b052bf.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/subscription-15fb96effa2bdd501611f0dc5e63ec8a.webp\";","import React, { useMemo } from 'react';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport { withTheme } from '@material-ui/core/styles';\nimport styled from 'styled-components';\nimport Image from './Image';\n\nexport interface BackgroundImageProps extends BoxProps {\n  fit?: 'cover' | 'contain';\n  src?: HTMLImageElement['src'];\n  webp?: string;\n  bgPosition?: string;\n}\n\nconst BackgroundImage: React.FC<BackgroundImageProps> = ({ children, fit = 'contain', src, zIndex = -1, ...rest }) => (\n  <Image height='100%' width='100%' minHeight={300} src={src} fit={fit} zIndex={zIndex} {...rest}>\n    {children}\n  </Image>\n);\n\nexport default BackgroundImage;\nexport { BackgroundImage };\n","import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport { checkWebPSupport } from 'supports-webp-sync';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport type ImageProps = BoxProps & {\n  fit?: 'cover' | 'contain';\n  src?: HTMLImageElement['src'];\n  webp?: string;\n  bgPosition?: string;\n};\n\n// Set up just a Box with a covering background image.\nconst ImageBase = withTheme(styled(({ fit, src, webp, bgPosition, ...rest }: ImageProps) => <Box {...rest} />)`\n  background-image: url(${({ src, webp }) =>\n    webp && (typeof window === 'undefined' || checkWebPSupport()) ? webp : src});\n  background-size: ${({ fit = 'cover' }) => fit};\n  background-position: ${({ bgPosition = 'center center' }) => bgPosition};\n  background-repeat: no-repeat;\n`) as React.FC<ImageProps>;\n\n// Add the most common sizing rules\n// Arbitrarily assigned a non-zero value to min-height, so it's never invisible.\nconst Image: React.FC<ImageProps> = props => <ImageBase height={1} width={1} minHeight='100px' role='img' {...props} />;\n\nexport default Image;\nexport { Image, ImageBase };\n","export function checkWebPSupport() {\n  // Check FF, Edge by user agent\n  var match = navigator.userAgent.match(/(Edge|Firefox)\\/(\\d+)\\./);\n\n  if (match) {\n    return match[1] === 'Firefox' && +match[2] >= 65 || match[1] === 'Edge' && +match[2] >= 18;\n  } // Use canvas hack for webkit-based browsers\n  // Kudos to Rui Marques: https://stackoverflow.com/a/27232658/7897049\n\n\n  var e = document.createElement('canvas');\n  return e.toDataURL ? e.toDataURL('image/webp').indexOf('data:image/webp') == 0 : false;\n}","module.exports = __webpack_public_path__ + \"static/subscription-33d550b1dcf04a0e1a509bd1c3b71ea6.jpg\";","import Container, { ContainerProps } from '@material-ui/core/Container';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport addSpacing from 'src/utils/addSpacing';\nimport styled from 'styled-components';\nimport { PropsFor } from '@material-ui/system';\n\nconst Center = addSpacing(\n  withTheme(styled(Container)`\n    text-align: center;\n  `) as React.FC<ContainerProps>\n);\nexport type CenterProps = PropsFor<typeof Center>;\n\nexport default Center;\nexport { Center };\n","import { withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Center from 'src/components/Center';\nimport Page from 'src/components/Page';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport styled from 'styled-components';\nimport { navigate } from 'gatsby';\n\nconst HeroGrid = withTheme(styled(Grid)`\n  height: 100%;\n`);\n\nexport default function About() {\n  // const { t } = useTranslation();\n  if (typeof window !== 'undefined' && /^\\/*(!?docs\\/|docs$)/.test(window.location.pathname)) {\n    window.location.pathname = '/docs/404.html';\n    return;\n  }\n  return (\n    <Page>\n      <Box height='70vh' maxHeight={720}>\n        <HeroGrid container alignItems='center' justify='center'>\n          <Center maxWidth={800}>\n            <Typography variant='h1' color='primary'>\n              Oops!\n            </Typography>\n            <Typography variant='h3'>Can't simulate this page.</Typography>\n            <Typography variant='caption' color='textSecondary'>\n              (Status: 404, page not found)\n            </Typography>\n            <Typography>\n              You can simulate most of the things most of the time, but this page isn't one of them.\n            </Typography>\n          </Center>\n        </HeroGrid>\n      </Box>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import Box, { BoxProps } from '@material-ui/core/Box';\n// import Collapse from '@material-ui/core/Collapse';\nimport Grid, { GridProps } from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputAdornment, { InputAdornmentProps } from '@material-ui/core/InputAdornment';\n// import Paper, { PaperProps } from '@material-ui/core/Paper';\n// import Snackbar from '@material-ui/core/Snackbar';\nimport { withTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport BackgroundImage from 'src/components/BackgroundImage';\n// import GridBox from 'src/components/GridBox';\nimport Input, { InputProps } from 'src/components/Input';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport imgSrcSubscribe from 'src/images/subscription.jpg';\nimport webpSrcSubscribe from 'src/images/subscription.webp';\nimport styled from 'styled-components';\nimport * as yup from 'yup';\nimport Button, { ButtonProps } from './Button';\nimport EntranceAnimation from './EntranceAnimation';\n// import { IconX } from './Icons';\nimport { PageSectionFullWidth } from './Page';\n\nconst FullHeightGrid = withTheme(styled(Grid)`\n  height: 100%;\n`) as React.FC<GridProps>;\n\n// type FadingPaperProps = PaperProps & {\n//   showBackground?: boolean;\n// };\n// const FadingPaper: React.FC<FadingPaperProps> = ({ showBackground, ...rest }) => <Paper {...rest} />;\n// const StyledPaper = withTheme(styled(FadingPaper)`\n//   ${({ theme, showBackground }) => `\n//   background-color: ${showBackground ? theme.palette.background.paper : 'transparent'};\n//   transition: ${theme.transitions.create('background-color', {\n//     easing: theme.transitions.easing.sharp,\n//     duration: theme.transitions.duration.enteringScreen\n//   })};\n// `}\n// `) as React.FC<FadingPaperProps>;\n\nconst StyledInput = withTheme(styled(Input)`\n  & .MuiOutlinedInput-adornedEnd {\n    padding-right: 0;\n  }\n`) as React.FC<InputProps>;\n\nconst StyledInputAdornment = withTheme(styled(InputAdornment)`\n  padding-right: 4px;\n`) as React.FC<InputAdornmentProps>;\n\nconst TransitioningButton = withTheme(styled(Button)`\n  ${({ theme }) => `\n  border-radius: 4px;\n\n  transition: ${theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen\n  })};\n`}\n`) as React.FC<ButtonProps>;\n\nconst SubscribeBox: React.FC<BoxProps & { animate?: boolean }> = ({ animate, ...rest }) => {\n  const { t } = useTranslation();\n  // const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n\n  // const handleSnackbarClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\n  //   if (reason === 'clickaway') {\n  //     return;\n  //   }\n  //   setSnackbarOpen(false);\n  // };\n\n  // const handleSimpleSubmit = () => {\n  //   setSnackbarOpen(true);\n  // };\n\n  const { handleChange, handleBlur, isSubmitting, setSubmitting, values, touched, errors, dirty, isValid } = useFormik({\n    initialValues: {\n      b_226621ee7c79910b83d6c77b8_c9a899ac03: '', // Simple bot protection honeypot field\n      // GIVENNAME: '',\n      // FAMILYNAME: '',\n      EMAIL: ''\n      // organization: '',\n      // title: '',\n    },\n    validationSchema: yup.object({\n      // GIVENNAME: yup.string().required(t('requestdemo.required.firstname')),\n      // FAMILYNAME: yup.string().required(t('requestdemo.required.lastname')),\n      EMAIL: yup.string().email(t('requestdemo.validate.email')).required(t('requestdemo.required.email'))\n    }),\n    onSubmit: data => {\n      // console.log('onSubmit data:', data);\n      setSubmitting(false);\n    }\n  });\n\n  const submitVisible = Boolean(values.EMAIL);\n\n  const commonTextInputProps: InputProps = {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    InputLabelProps: { shrink: true },\n    variant: 'outlined',\n    fullWidth: true\n  };\n\n  return (\n    <PageSectionFullWidth>\n      <Box mb={4} position='relative' {...rest}>\n        <BackgroundImage\n          src={imgSrcSubscribe}\n          webp={webpSrcSubscribe}\n          position='absolute'\n          fit='cover'\n          title='Lidar point-cloud following a simulated autonomous vehicle'\n        />\n        <EntranceAnimation disabled={!animate}>\n          <Box p={2} height={{ xs: 600, sm: 400, md: 600 }}>\n            <FullHeightGrid container alignItems='center' justify='center'>\n              <Grid item xs={12} sm={10} md={6}>\n                <Typography variant='h3' gutterBottom>\n                  {t('main.subscribe.title')}\n                </Typography>\n                {/* <StyledPaper elevation={0} showBackground={submitVisible}> */}\n                <form\n                  noValidate\n                  // onSubmit={handleSimpleSubmit}\n                  action='https://lgsvlsimulator.us20.list-manage.com/subscribe/post?u=226621ee7c79910b83d6c77b8&amp;id=c9a899ac03'\n                  method='post'\n                  target='_blank'\n                >\n                  <Box position='absolute' left={-5000} aria-hidden='true'>\n                    <Input name='b_226621ee7c79910b83d6c77b8_c9a899ac03' tabIndex={-1} defaultValue='' />\n                  </Box>\n                  {/* <Box p={1} pt={2}> */}\n                  <StyledInput\n                    {...commonTextInputProps}\n                    required\n                    name='EMAIL'\n                    id='subscribeEmailAddress'\n                    label={t('main.subscribe.emailPlaceholder')}\n                    placeholder={t('main.subscribe.emailPlaceholder')}\n                    error={touched.EMAIL && Boolean(errors.EMAIL)}\n                    helperText={touched.EMAIL && errors.EMAIL}\n                    value={values.EMAIL}\n                    InputProps={{\n                      endAdornment: (\n                        <StyledInputAdornment position='end'>\n                          <TransitioningButton\n                            style={!submitVisible ? { opacity: 0, pointerEvents: 'none' } : undefined}\n                            aria-label='submit subscription'\n                            variant='contained'\n                            size='medium'\n                            color='primary'\n                            disabled={isSubmitting || !(isValid && dirty)}\n                            type='submit'\n                          >\n                            {t('main.subscribe.submitButton')}\n                          </TransitioningButton>\n                        </StyledInputAdornment>\n                      )\n                    }}\n                  />\n                  {/* </Box> */}\n                  {/* <Box px={1} mt={1}>\n                      <Collapse in={submitVisible} timeout='auto' unmountOnExit>\n                        <Grid container spacing={2} justify='space-between'>\n                          <GridBox item xs={12} sm={6} mb={1}>\n                            <Input\n                              {...commonTextInputProps}\n                              // required\n                              name='GIVENNAME'\n                              id='form-field-name-given'\n                              label={t('requestdemo.labels.nameGiven')}\n                              placeholder={t('requestdemo.placeholders.nameGiven')}\n                              error={touched.GIVENNAME && Boolean(errors.GIVENNAME)}\n                              helperText={touched.GIVENNAME && errors.GIVENNAME}\n                              value={values.GIVENNAME}\n                            />\n                          </GridBox>\n                          <GridBox item xs={12} sm={6} mb={1}>\n                            <Input\n                              {...commonTextInputProps}\n                              // required\n                              name='FAMILYNAME'\n                              id='form-field-name-family'\n                              label={t('requestdemo.labels.nameFamily')}\n                              placeholder={t('requestdemo.placeholders.nameFamily')}\n                              error={touched.FAMILYNAME && Boolean(errors.FAMILYNAME)}\n                              helperText={touched.FAMILYNAME && errors.FAMILYNAME}\n                              value={values.FAMILYNAME}\n                            />\n                          </GridBox>\n                        </Grid>\n                      </Collapse>\n                    </Box> */}\n                </form>\n                {/* </StyledPaper> */}\n              </Grid>\n            </FullHeightGrid>\n          </Box>\n        </EntranceAnimation>\n      </Box>\n      {/* <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message={<iframe height={400} width={500} name='submissionIframe' />}\n        action={\n          <React.Fragment>\n            <IconButton aria-label={t('main.consent.decline')} onClick={handleSnackbarClose}>\n              <IconX width='16' height='16' color='#333' />\n            </IconButton>\n          </React.Fragment>\n        }\n      /> */}\n    </PageSectionFullWidth>\n  );\n};\n\nexport default SubscribeBox;\nexport { SubscribeBox };\n"],"sourceRoot":""}