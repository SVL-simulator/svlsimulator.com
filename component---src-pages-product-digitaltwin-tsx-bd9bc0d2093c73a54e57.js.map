{"version":3,"sources":["webpack:///./src/components/Image.tsx","webpack:///./src/images/simulation-platform.jpg","webpack:///./src/components/PagePreviewBox.tsx","webpack:///./src/images/digital-twin-full-environment.jpg","webpack:///./src/pages/product/digitaltwin.tsx","webpack:///./src/images/cloud-simulation.jpg","webpack:///./src/components/Button.tsx","webpack:///./src/components/GridBox.tsx","webpack:///./src/utils/addSpacing.ts","webpack:///./src/components/Section.tsx","webpack:///./src/images/digital-twin-lite-environment.jpg","webpack:///./src/images/digital-twin.jpg"],"names":["Image","withTheme","styled","src","rest","module","exports","StyledPagePreviewBox","PagePreviewBox","title","link","buttonText","mt","xs","md","p","alignItems","wrap","display","flexDirection","mb","to","CloudPreviewBox","t","useTranslation","srcCloudPoster","DigitalTwinPreviewBox","srcDigitalTwinPoster","SimulationPreviewBox","srcSimulationPoster","TypoWrapper","str","i","paragraph","key","DigitalTwin","tMap","tuckImage","variant","container","spacing","item","srcDigitalTwinFull","srcDigitalTwinLite","sm","StyledButton","MuiButton","Button","React","forwardRef","props","ref","ButtonGetDemo","color","ButtonReadMore","buttonVariant","GridBox","Comp","muiStyled","compose","sizing","addSpacing","Grid","SectionContainer","Container","theme","px","StyledPaper","Paper","TitleGridBox","BodyGridBox","StyledImage","minHeight","borderRadius","roundTo","num","toPlaces","Math","round","pow","doubleTwoColumns","TuckingBox","Box","breakpoints","up","ReverseTuckingBox","Content","button","buttonProps","children","direction","justify","Typography","FullWidthSection","component","disableGutters","elevation","Children","toArray","filter","c","Boolean","length","countChildren","Section","flip","image","imageTag","ImageContainerComponent","position"],"mappings":"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","file":"component---src-pages-product-digitaltwin-tsx-bd9bc0d2093c73a54e57.js","sourcesContent":["import { withTheme } from '@material-ui/core';\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport interface ImageProps extends BoxProps {\n  src?: HTMLImageElement['src'];\n}\n\nconst Image = withTheme(styled(({ src, ...rest }) => <Box {...rest} />)`\n  // height: 100%;\n  width: 100%;\n  min-height: 100px; // Arbitrarily assigned this to a non-zero value, so it's never invisible.\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n`) as React.FC<ImageProps>;\n\nexport default Image;\nexport { Image };\n","module.exports = __webpack_public_path__ + \"static/simulation-platform-37a96777ce2c1bf70b36ca13b1c9c458.jpg\";","import Box, { BoxProps } from '@material-ui/core/Box';\nimport { withTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { ButtonReadMore } from 'src/components/Button';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcCloudPoster from 'src/images/cloud-simulation.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\nimport srcSimulationPoster from 'src/images/simulation-platform.jpg';\n\nconst StyledPagePreviewBox = withTheme(styled(({ src, ...rest }) => <Box {...rest} />)`\n  background-image: url(${({ src }) => src});\n  background-size: cover;\n  background-position: center center;\n`);\n\nconst PagePreviewBox = ({\n  title,\n  buttonText,\n  link,\n  ...rest\n}: BoxProps & { buttonText?: string; link: string; src: string }) => (\n  <StyledPagePreviewBox\n    mt={{ xs: 8, md: 16 }}\n    p={4}\n    alignItems='center'\n    wrap='nowrap'\n    display='flex'\n    flexDirection='column'\n    {...rest}\n  >\n    <Box mb={3}>\n      <Typography>{title}</Typography>\n    </Box>\n    <Box>\n      <ButtonReadMore to={link} />\n    </Box>\n  </StyledPagePreviewBox>\n);\n\nconst CloudPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('cloud.title')} link='/product/cloud' src={srcCloudPoster} />;\n};\n\nconst DigitalTwinPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('digitaltwin.title')} link='/product/digitaltwin' src={srcDigitalTwinPoster} />;\n};\n\nconst SimulationPreviewBox = () => {\n  const { t } = useTranslation();\n  return <PagePreviewBox title={t('simulation.title')} link='/product/simulation' src={srcSimulationPoster} />;\n};\n\nexport default PagePreviewBox;\nexport { PagePreviewBox, CloudPreviewBox, SimulationPreviewBox, DigitalTwinPreviewBox };\n","module.exports = __webpack_public_path__ + \"static/digital-twin-full-environment-111153efacfce6debe7581342a733b97.jpg\";","import Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { MapFunction } from 'src/@types/utils';\nimport Page from 'src/components/Page';\nimport { CloudPreviewBox, SimulationPreviewBox } from 'src/components/PagePreviewBox';\nimport Section, { FullWidthSection } from 'src/components/Section';\nimport SubscribeBox from 'src/components/SubscribeBox';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport srcDigitalTwinFull from 'src/images/digital-twin-full-environment.jpg';\nimport srcDigitalTwinLite from 'src/images/digital-twin-lite-environment.jpg';\nimport srcDigitalTwinPoster from 'src/images/digital-twin.jpg';\n\nconst TypoWrapper: MapFunction<string> = (str, i) => (\n  <Typography paragraph key={`paragraph${i}`}>\n    {str}\n  </Typography>\n);\n\nexport default function DigitalTwin() {\n  const { t, tMap } = useTranslation();\n  return (\n    <Page title={t('digitaltwin.title')}>\n      <Section buttonText='getDemo' src={srcDigitalTwinPoster} title={t('digitaltwin.title')} tuckImage variant='h3'>\n        {tMap('digitaltwin.body', TypoWrapper)}\n      </Section>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <FullWidthSection title={t('digitaltwin.section1.title')} src={srcDigitalTwinFull}>\n            {tMap('digitaltwin.section1.body', TypoWrapper)}\n          </FullWidthSection>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <FullWidthSection title={t('digitaltwin.section2.title')} src={srcDigitalTwinLite}>\n            {tMap('digitaltwin.section2.body', TypoWrapper)}\n          </FullWidthSection>\n        </Grid>\n      </Grid>\n\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <CloudPreviewBox />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <SimulationPreviewBox />\n        </Grid>\n      </Grid>\n\n      <SubscribeBox />\n    </Page>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/cloud-simulation-b834b11be46add0489efb4c057935af7.jpg\";","import MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { withTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'src/hooks/useTranslations';\nimport Link from './Link';\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nconst StyledButton = withTheme(styled(MuiButton)``);\n\nconst Button: React.ForwardRefExoticComponent<ButtonProps> = React.forwardRef((props, ref) => (\n  <StyledButton variant='outlined' {...props} ref={ref} />\n));\n\nconst ButtonGetDemo: typeof Button = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <Button color='primary' variant='contained' {...props} ref={ref}>\n      {t('main.buttons.getDemo')}\n    </Button>\n  );\n});\n\nconst ButtonReadMore: typeof LinkButton = React.forwardRef((props, ref) => {\n  const { t } = useTranslation();\n  return (\n    <LinkButton buttonVariant='outlined' {...props} ref={ref}>\n      {t('main.buttons.readMore')}\n    </LinkButton>\n  );\n});\n\nexport default Button;\nexport { Button, ButtonGetDemo, ButtonReadMore };\n","import Grid from '@material-ui/core/Grid';\nimport { PropsFor } from '@material-ui/system';\nimport addSpacing from 'src/utils/addSpacing';\n\nconst GridBox = addSpacing(Grid);\nexport type GridBoxProps = PropsFor<typeof GridBox>;\n\nexport default GridBox;\nexport { GridBox };\n","import { styled as muiStyled } from '@material-ui/core/styles';\nimport { compose, spacing, SpacingProps, sizing, SizingProps } from '@material-ui/system';\n\ntype SpacedProps<T = {}> = T &\n  SpacingProps &\n  SizingProps & {\n    component?: React.ComponentType | React.ReactHTMLElement<HTMLElement>;\n  };\n\ntype SpacedComponent<T> = React.FC<SpacedProps<T>>;\n\n// Add the `spacing` and `sizing` props to the component\nconst addSpacing = <T>(Comp: SpacedComponent<T>) => muiStyled(Comp)(compose(spacing, sizing));\n\nexport default addSpacing;\nexport { addSpacing };\nexport type { SpacedComponent, SpacedProps };\n","import { ButtonProps, withTheme } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport React from 'react';\nimport Button, { ButtonGetDemo, ButtonReadMore } from 'src/components/Button';\nimport GridBox, { GridBoxProps } from 'src/components/GridBox';\nimport Image, { ImageProps } from 'src/components/Image';\nimport { px } from 'src/utils/theme';\nimport styled from 'styled-components';\nimport { LinkProps } from './Link';\n\nconst SectionContainer = withTheme(styled(Container)`\n  margin-bottom: ${({ theme }) => px(theme.spacing(9))};\n  &:last-child {\n    margin-bottom: 0;\n  }\n`);\n\nconst StyledPaper = withTheme(styled(Paper)``);\n\nconst TitleGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 2px black, 0px 2px 10px rgba(0, 0, 0, 0.6);\n`);\n\nconst BodyGridBox = withTheme(styled(GridBox)`\n  text-shadow: 0px 1px 1px black, 0px 3px 9px rgba(0, 0, 0, 0.6);\n\n  .MuiTypography-paragraph:last-child {\n    margin-bottom: 0;\n  }\n`) as typeof GridBox;\n\nconst StyledImage = (props: ImageProps) => <Image minHeight={300} borderRadius='borderRadius' {...props} />;\n\nconst countChildren = (children: React.ReactNode | React.ReactChildren) =>\n  React.Children.toArray(children).filter(c => Boolean(c)).length;\n\nconst roundTo = (num: number, toPlaces = 0) => Math.round(num * Math.pow(10, toPlaces)) / Math.pow(10, toPlaces);\n\nconst twoColumns = roundTo(2 / 12, 4);\n// Must double this, since it's being applied inside a box that's half the normal width.\nconst doubleTwoColumns = twoColumns * 2;\n\nconst TuckingBox = withTheme(styled(Box)`\n  min-height: 300px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    width: ${(1 + doubleTwoColumns) * 100}%;\n  }\n`) as typeof Box;\n\nconst ReverseTuckingBox = withTheme(styled(TuckingBox)`\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    margin-inline-start: ${roundTo(doubleTwoColumns * -100, 4)}%;\n  }\n`) as typeof TuckingBox;\n\ntype BaseSectionProps = {\n  children: React.ReactNode;\n  src?: string;\n  title: string;\n  variant?: TypographyProps['variant'];\n};\n\ninterface ContentProps extends BaseSectionProps {\n  buttonProps?: ButtonProps & LinkProps;\n  buttonText?: string;\n}\n\ninterface SectionProps extends ContentProps {\n  flip?: boolean;\n  image?: React.ReactNode;\n  minHeight?: GridBoxProps['minHeight'];\n  tuckImage?: boolean;\n}\n\nconst Content = ({\n  buttonProps,\n  buttonText,\n  children,\n  direction = 'column',\n  justify = 'center',\n  title,\n  variant = 'h4',\n  ...rest // Rest allows all props from GridBoxProps to be applied to the containing GridBox component\n}: ContentProps & GridBoxProps) => {\n  let button;\n  switch (buttonText) {\n    case 'getDemo':\n      button = <ButtonGetDemo {...buttonProps} />;\n      break;\n    case 'readMore':\n      button = <ButtonReadMore {...buttonProps} />;\n      break;\n    default:\n      button = <Button {...buttonProps}>{buttonText}</Button>;\n  }\n  return (\n    <GridBox {...rest} direction={direction} justify={justify} container>\n      <TitleGridBox item>\n        <Typography variant={variant}>{title}</Typography>\n      </TitleGridBox>\n      <BodyGridBox item mt={{ xs: 2, md: 5 }}>\n        {children}\n      </BodyGridBox>\n      {buttonText && (\n        <GridBox item mt={{ xs: 2, md: 5 }}>\n          {button}\n        </GridBox>\n      )}\n    </GridBox>\n  );\n};\n\nconst Section = ({ buttonText, children, flip, minHeight, image, src, title, tuckImage, variant }: SectionProps) => {\n  let imageTag = image || <StyledImage src={src} />;\n  if (tuckImage) {\n    let ImageContainerComponent = TuckingBox;\n    if (flip) {\n      ImageContainerComponent = ReverseTuckingBox;\n    }\n    imageTag = <ImageContainerComponent>{imageTag}</ImageContainerComponent>;\n  }\n\n  // Add a min-height for any h3 variant, if a custom one doesn't exist.\n  if (variant === 'h3' && minHeight == null) {\n    minHeight = { md: 458 };\n  }\n\n  return (\n    <SectionContainer component='section' disableGutters>\n      <StyledPaper elevation={0}>\n        <Grid container spacing={tuckImage ? 0 : 3} direction={flip ? 'row-reverse' : 'row'}>\n          <Grid item xs={12} md={6}>\n            {imageTag}\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box position='relative'>\n              <Content title={title} buttonText={buttonText} minHeight={minHeight} variant={variant}>\n                {children}\n              </Content>\n            </Box>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </SectionContainer>\n  );\n};\nconst FullWidthSection = ({ children, src, title, variant = 'h5' }: BaseSectionProps) => (\n  <SectionContainer component='section' disableGutters>\n    <StyledPaper elevation={0}>\n      <Box>\n        {title ? (\n          <Box mb={{ xs: 2, md: 5 }}>\n            <Typography variant={variant}>{title}</Typography>\n          </Box>\n        ) : null}\n        <StyledImage src={src} />\n        {countChildren(children) ? <Box mt={{ xs: 2, md: 5 }}>{children}</Box> : null}\n      </Box>\n    </StyledPaper>\n  </SectionContainer>\n);\n\nexport default Section;\nexport { Section, Content as SectionContent, FullWidthSection };\n","module.exports = __webpack_public_path__ + \"static/digital-twin-lite-environment-30a281d97996f210a5e9e4d56a118a34.jpg\";","module.exports = __webpack_public_path__ + \"static/digital-twin-5c625297589648d7d3a2234052200161.jpg\";"],"sourceRoot":""}